2015-12-07 01:49:12.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:12.027 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-07 01:49:37.689 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:37.698 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:49:37.778 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:49:49.193 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:49:49.233 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:49:49.234 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:49:51.285 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:49:51.286 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:49:51.311 TRACE o.d.exploration.device.DeviceTimeDiff    computeDiff(device) result:
Current time   : 2015-12-07 01:49:51.310
Device time    : 2015-12-07 01:46:42.014
Resulting diff : PT-3M-9.296S
2015-12-07 01:49:51.314 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:49:39.736
2015-12-07 01:49:51.314 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:49:51.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:49:51.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:51.481 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 01:49:51.481 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:49:51.585 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:51.623 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:51.651 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:51.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:51.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:51.727 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:51.742 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:51.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:53.100 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:49:53.100 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:53.117 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:53.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:49:53.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:49:53.215 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:53.216 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:53.221 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:53.222 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:53.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:53.296 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:53.311 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:53.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:54.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:49:54.651 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:54.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:54.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:49:54.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:49:54.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:54.760 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:54.762 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:54.762 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:54.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:54.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:54.852 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:54.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:56.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:49:56.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:56.202 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:56.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:49:56.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:49:56.307 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:56.308 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:56.311 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:56.312 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:56.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:56.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:56.396 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:56.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:57.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:49:57.736 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:57.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:57.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:49:57.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:49:57.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:57.858 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:57.859 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:57.860 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:57.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:57.939 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:57.951 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:57.951 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:59.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:49:59.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:59.310 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:59.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:49:59.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:49:59.408 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:49:59.409 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:49:59.410 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:49:59.411 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:49:59.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:49:59.480 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:49:59.494 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:49:59.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:00.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:00.830 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:00.845 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:00.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:00.885 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:00.959 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:00.960 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:00.961 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:00.962 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:00.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:01.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:01.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:01.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:02.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:02.397 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:02.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:02.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:02.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:02.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:02.516 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:02.518 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:02.519 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:02.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:02.598 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:02.610 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:02.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:03.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:03.945 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:03.963 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:03.963 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:03.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:04.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:04.061 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:04.063 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:04.063 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:04.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:04.138 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:04.157 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:04.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:05.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:05.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:05.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:05.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:05.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:05.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:05.600 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:05.601 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:05.602 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:05.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:05.683 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:05.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:05.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:07.037 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:07.037 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:07.052 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:07.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:07.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:07.144 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:07.146 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:07.147 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:07.148 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:07.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:07.213 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:07.226 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:07.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:08.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:08.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:08.584 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:08.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:08.607 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:08.685 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:08.686 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:08.687 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:08.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:08.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:08.775 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:08.786 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:08.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:10.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:10.121 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:10.136 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:10.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:10.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:10.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:10.228 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:10.229 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:10.230 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:10.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:10.299 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:10.312 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:10.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:11.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:11.664 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:11.679 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:11.679 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:11.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:11.787 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:11.788 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:11.790 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:11.790 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:11.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:11.866 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:11.879 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:11.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:13.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:13.214 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:13.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:13.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:13.257 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:13.337 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:13.337 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:13.338 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 01:50:13.338 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 01:50:13.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:13.339 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-07 01:50:39.217 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:39.220 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:50:39.288 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:50:51.072 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:50:51.117 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:50:51.118 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:50:53.168 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:50:53.168 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:50:53.169 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:50:41.166
2015-12-07 01:50:53.169 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:50:53.275 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:50:53.275 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:53.303 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 01:50:53.303 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:50:53.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:53.418 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:53.421 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:53.422 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:53.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:53.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:53.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:53.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:54.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:54.854 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:54.869 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:54.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:54.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:54.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:54.981 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:54.984 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:54.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:54.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:55.061 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:55.072 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:55.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:56.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:56.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:56.425 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:56.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:56.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:56.525 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:56.526 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:56.528 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:56.528 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:56.528 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:56.605 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:56.616 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:56.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:57.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:57.952 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:57.968 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:57.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:57.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:58.062 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:58.063 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:58.064 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:58.064 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:58.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:58.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:58.151 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:58.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:59.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:50:59.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:59.511 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:59.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:50:59.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:50:59.616 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:50:59.616 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:50:59.618 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:50:59.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:50:59.618 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:50:59.693 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:50:59.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:50:59.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:01.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:01.040 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:01.057 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:01.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:01.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:01.159 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:01.160 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:01.161 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:01.162 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:01.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:01.246 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:01.261 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:01.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:02.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:02.603 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:02.617 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:02.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:02.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:02.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:02.732 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:02.733 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:02.734 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:02.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:02.803 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:02.815 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:02.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:04.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:04.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:04.174 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:04.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:04.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:04.296 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:04.297 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:04.298 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:04.298 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:04.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:04.372 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:04.384 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:04.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:05.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:05.724 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:05.740 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:05.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:05.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:05.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:05.836 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:05.837 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:05.837 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:05.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:05.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:05.924 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:05.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:07.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:07.263 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:07.279 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:07.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:07.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:07.373 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:07.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:07.375 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:07.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:07.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:07.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:07.462 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:07.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:08.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:08.801 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:08.816 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:08.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:08.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:08.932 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:08.932 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:08.933 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:08.934 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:08.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:09.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:09.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:09.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:10.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:10.355 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:10.375 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:10.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:10.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:10.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:10.473 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:10.474 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:10.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:10.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:10.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:10.560 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:10.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:11.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:11.900 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:11.918 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:11.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:11.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:12.007 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:12.008 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:12.009 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:12.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:12.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:12.081 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:12.096 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:12.096 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:13.437 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:13.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:13.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:13.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:13.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:13.567 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:13.567 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:13.568 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:13.569 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:13.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:51:13.645 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:13.657 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:13.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 01:51:14.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:51:14.996 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:15.015 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:15.015 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:51:15.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:51:15.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:15.109 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:15.110 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 01:51:15.110 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-07 01:51:15.111 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:15.111 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-07 01:51:41.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:41.055 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:51:41.130 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:51:52.926 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:51:52.972 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:51:52.972 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:51:55.024 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:51:55.024 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:51:55.025 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:51:43.106
2015-12-07 01:51:55.025 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:51:55.118 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:51:55.118 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:55.152 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 01:51:55.152 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:51:55.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:51:55.253 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:51:55.253 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 01:51:55.257 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 01:51:55.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-07 01:51:55.260 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 01:51:55.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:55.344 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:51:55.344 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 01:51:55.344 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package air.com.demute.TaoMix}
2015-12-07 01:51:56.213 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 01:51:56.286 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:51:56.289 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:51:56.289 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 01:51:56.357 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 01:51:56.428 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-07 01:52:07.045 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:07.045 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-07 01:52:32.660 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:32.663 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:52:32.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:52:44.771 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:52:44.828 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:52:44.828 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:52:46.881 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:52:46.882 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:52:46.882 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:52:34.716
2015-12-07 01:52:46.882 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:52:46.955 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:52:46.955 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:47.013 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 01:52:47.013 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:52:47.127 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:47.128 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:47.129 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:52:47.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:47.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:47.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:47.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:47.198 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:52:49.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:49.155 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:49.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:49.172 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:49.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:49.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:49.366 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:49.367 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-07 01:52:49.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:49.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:49.444 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:49.458 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:49.459 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-07 01:52:51.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:51.888 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:51.904 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:51.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:52.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:52.116 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:52.117 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:52.119 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-07 01:52:52.119 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:52.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:52.191 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:52.202 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:52.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-07 01:52:53.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:53.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:53.672 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:53.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:53.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:53.849 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:53.850 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:53.851 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:52:53.852 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:53.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:53.925 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:53.940 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:53.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:52:55.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:55.787 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:55.811 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 01:52:55.811 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:55.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:55.950 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:55.951 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:55.952 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-07 01:52:55.952 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:55.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:56.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:56.049 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:56.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-07 01:52:57.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:57.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:57.399 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:57.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:57.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:57.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:57.530 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:57.531 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:52:57.532 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:57.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:57.611 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:57.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:57.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:52:58.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:52:58.993 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:59.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:59.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:52:59.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:52:59.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:52:59.144 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:52:59.145 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-07 01:52:59.145 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:52:59.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:52:59.221 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:52:59.239 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:52:59.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-07 01:53:01.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:01.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:01.316 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 01:53:01.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:01.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:01.460 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:01.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:01.464 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-07 01:53:01.464 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:01.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:01.546 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:01.561 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:01.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-07 01:53:03.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:03.654 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:03.669 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:03.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:03.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:03.814 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:03.815 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:03.817 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:53:03.817 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:03.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:03.892 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:03.903 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:03.903 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:53:05.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:05.781 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:05.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 01:53:05.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:05.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:05.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:05.977 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:05.979 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-07 01:53:05.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:05.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:06.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:06.064 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:06.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-07 01:53:08.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:08.110 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:08.128 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:08.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:08.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:08.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:08.265 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:08.267 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-07 01:53:08.267 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:08.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:08.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:08.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:08.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-07 01:53:10.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:10.458 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:10.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:10.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:10.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:10.657 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:10.658 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:10.661 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:53:10.662 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:10.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:10.738 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:10.751 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:10.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-07 01:53:12.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:12.598 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:12.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 01:53:12.624 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:12.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:12.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:12.751 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:12.753 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-07 01:53:12.754 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:12.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:12.824 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:12.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:12.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-07 01:53:14.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:14.821 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:14.839 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:14.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:14.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:14.965 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:14.966 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:14.967 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-07 01:53:14.967 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:14.967 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:15.036 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:15.049 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:15.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-07 01:53:16.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:16.580 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:16.595 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:16.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:16.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:16.740 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:16.740 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:16.741 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 01:53:16.742 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 01:53:16.742 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:16.742 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-07 01:53:42.587 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:42.590 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:53:42.668 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:53:55.516 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:53:55.563 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:53:55.563 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:53:57.613 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:53:57.613 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:53:57.613 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:53:44.906
2015-12-07 01:53:57.613 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:53:57.715 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:53:57.715 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:57.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 01:53:57.748 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:53:57.868 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:57.869 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:57.870 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 01:53:57.871 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:57.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:57.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:57.941 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:57.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 01:53:59.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:53:59.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:59.594 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:59.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:53:59.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:53:59.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:53:59.718 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:53:59.719 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:53:59.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:53:59.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:53:59.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:53:59.802 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:53:59.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:54:01.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:54:01.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:01.163 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:01.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:54:01.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:54:01.312 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:01.313 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:54:01.314 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,420]>
2015-12-07 01:54:01.315 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:54:01.315 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:54:01.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:01.405 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:01.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,420]>
2015-12-07 01:54:03.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:54:03.626 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:03.663 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 01:54:03.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:54:03.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:54:03.769 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:03.769 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 10}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:54:03.770 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   20 <ExplAct Reset app>
2015-12-07 01:54:03.771 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:54:03.771 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-07 01:54:29.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:29.843 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:54:29.910 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:54:42.102 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:54:42.152 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:54:42.152 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:54:44.212 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:54:44.212 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:54:44.212 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:54:31.876
2015-12-07 01:54:44.212 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:54:44.314 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:54:44.314 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:44.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 01:54:44.351 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:54:44.495 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:44.495 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:54:44.497 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 01:54:44.497 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:54:44.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:54:44.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:44.577 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:44.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 01:54:46.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:54:46.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:46.202 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:46.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:54:46.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:54:46.331 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:46.332 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:54:46.334 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:54:46.334 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:54:46.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:54:46.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:46.415 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:46.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-07 01:54:47.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:54:47.751 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:47.767 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:47.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:54:47.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:54:47.930 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:47.931 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:54:47.932 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 01:54:47.932 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 01:54:47.932 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-07 01:54:47.932 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 01:54:48.006 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:48.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:54:48.020 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 01:54:48.020 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package animaonline.android.wikiexplorer}
2015-12-07 01:54:48.866 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 01:54:48.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:54:48.945 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:54:48.945 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 01:54:48.997 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 01:54:49.066 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-07 01:54:59.904 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-07 01:54:59.904 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-07 01:55:25.507 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:55:25.510 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:55:25.588 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:55:35.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:55:35.986 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:55:35.986 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:55:38.026 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:55:38.027 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:55:38.027 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:55:27.496
2015-12-07 01:55:38.027 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:55:38.098 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:55:38.098 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:55:38.203 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 16
2015-12-07 01:55:38.203 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:55:38.342 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-07 01:55:38.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 13}, DeviceLogs{apiLogs#=16, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:55:38.343 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-07 01:55:38.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-07 01:55:38.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:55:38.412 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:55:38.490 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 01:55:38.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-07 01:55:40.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:55:40.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:55:40.564 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 01:55:40.564 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:55:40.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:55:40.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-07 01:55:40.675 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:55:40.676 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 01:55:40.677 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-07 01:55:40.677 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-07 01:56:06.645 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 01:56:15.491 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:56:15.491 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-07 01:56:41.086 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:56:41.089 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:56:41.167 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:56:49.267 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:56:49.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:56:49.316 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:56:51.378 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:56:51.378 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:56:51.378 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:56:43.116
2015-12-07 01:56:51.378 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:56:51.471 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:56:51.471 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:56:51.497 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:56:51.497 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:56:51.747 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:56:51.748 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:56:51.749 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Sky, Time And Light Settings"/"com.adermark.forestpondfree:id/btnSkyTimeLightSettings"/[400,819]>
2015-12-07 01:56:51.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:56:51.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:56:51.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:56:51.828 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:56:51.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sky, Time And Light Settings"/"com.adermark.forestpondfree:id/btnSkyTimeLightSettings"/[400,819]>
2015-12-07 01:56:53.929 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:56:53.929 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:56:53.945 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:56:53.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:56:54.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:56:54.140 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:56:54.141 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:56:54.142 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-07 01:56:54.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:56:54.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:56:54.210 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:56:54.221 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:56:54.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-07 01:57:08.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:57:08.063 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:57:08.082 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:57:08.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:57:08.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:57:08.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:57:08.516 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 88}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:57:08.517 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 01:57:08.517 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:57:08.517 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-07 01:57:36.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:57:36.611 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:57:36.695 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:57:45.091 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:57:45.134 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:57:45.134 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:57:47.177 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:57:47.177 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:57:47.177 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:57:38.606
2015-12-07 01:57:47.177 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:57:47.270 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:57:47.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:57:47.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:57:47.318 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:57:47.549 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:57:47.549 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:57:47.551 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Get Full Version!"/"com.adermark.forestpondfree:id/btnUnlockSettings"/[400,210]>
2015-12-07 01:57:47.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:57:47.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:57:47.619 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:57:47.631 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:57:47.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get Full Version!"/"com.adermark.forestpondfree:id/btnUnlockSettings"/[400,210]>
2015-12-07 01:57:54.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:57:54.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:57:54.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:57:54.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:57:54.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:57:54.774 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:57:54.775 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:57:54.776 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-07 01:57:54.776 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:57:54.776 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-07 01:58:22.714 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:22.717 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:58:22.785 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:58:30.889 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:58:30.929 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:58:30.929 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:58:32.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:58:32.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:58:32.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:58:24.706
2015-12-07 01:58:32.974 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:58:33.062 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:58:33.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:33.086 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:58:33.086 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:58:33.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:58:33.307 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:58:33.308 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckBox/"Bird Hunt Mode"/"com.adermark.forestpondfree:id/cbBirdHuntMode"/[400,432]>
2015-12-07 01:58:33.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:58:33.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:58:33.385 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:33.401 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:58:33.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Bird Hunt Mode"/"com.adermark.forestpondfree:id/cbBirdHuntMode"/[400,432]>
2015-12-07 01:58:35.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:58:35.434 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:35.450 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:58:35.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:58:35.547 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:58:35.623 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:58:35.623 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:58:35.625 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"General Wallpaper Settings"/"com.adermark.forestpondfree:id/btnWallpaperSettings"/[400,1135]>
2015-12-07 01:58:35.625 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:58:35.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:58:35.697 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:35.715 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:58:35.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"General Wallpaper Settings"/"com.adermark.forestpondfree:id/btnWallpaperSettings"/[400,1135]>
2015-12-07 01:58:37.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:58:37.669 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:37.684 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:58:37.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:58:37.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:58:37.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:58:37.858 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:58:37.859 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-07 01:58:37.859 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:58:37.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 01:58:37.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:37.939 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:58:37.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-07 01:58:50.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 01:58:50.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:58:50.166 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:58:50.166 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 01:58:50.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 01:58:50.570 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:58:50.571 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 88}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 01:58:50.572 INFO  o.d.e.strategy.ExplorationStrategy         1m 58s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-07 01:58:50.572 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:58:50.572 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-07 01:59:18.513 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:59:18.516 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:59:18.589 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 01:59:26.833 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 01:59:26.875 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 01:59:26.875 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 01:59:28.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 01:59:28.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 01:59:28.921 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T01:59:20.686
2015-12-07 01:59:28.921 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 01:59:29.004 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 01:59:29.005 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:59:29.028 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 01:59:29.028 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 01:59:29.262 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:59:29.262 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 01:59:29.263 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 01:59:29.263 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 01:59:29.263 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-07 01:59:29.263 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 01:59:29.338 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:59:29.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 01:59:29.354 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 01:59:29.354 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.adermark.forestpondfree}
2015-12-07 01:59:30.362 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 01:59:30.438 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 01:59:30.441 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 01:59:30.441 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 01:59:30.500 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 01:59:30.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-07 01:59:46.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 01:59:46.979 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-07 02:00:12.498 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:12.501 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:00:12.565 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:00:24.609 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:00:24.661 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:00:24.661 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:00:26.712 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:00:26.712 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:00:26.713 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:00:14.686
2015-12-07 02:00:26.713 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:00:26.811 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:00:26.811 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:26.851 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:00:26.851 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:00:27.014 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:27.015 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:27.016 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-07 02:00:27.017 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:27.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:27.093 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:27.104 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:27.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-07 02:00:28.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:28.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:29.006 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:29.006 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:29.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:29.162 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:29.162 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:29.163 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-07 02:00:29.164 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:29.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:29.240 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:29.253 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:29.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-07 02:00:31.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:31.259 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:31.277 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:31.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:31.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:31.429 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:31.430 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:31.431 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-07 02:00:31.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:31.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:31.505 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:31.514 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:31.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-07 02:00:32.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:32.876 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:32.893 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:32.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:32.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:33.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:33.038 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:33.039 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-07 02:00:33.039 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:33.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:33.111 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:33.125 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:33.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-07 02:00:34.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:34.995 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:35.006 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:35.006 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:35.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:35.158 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:35.159 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:35.160 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-07 02:00:35.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:35.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:35.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:35.252 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:35.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-07 02:00:37.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:37.118 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:37.138 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:37.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:37.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:37.299 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:37.299 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:37.300 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-07 02:00:37.301 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:37.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:37.375 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:37.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:37.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-07 02:00:39.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:39.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:39.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:39.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:39.431 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:39.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:39.510 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:39.511 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-07 02:00:39.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:39.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:00:39.589 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:39.602 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:00:39.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-07 02:00:45.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:00:45.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:00:45.966 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:00:45.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:00:46.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:00:46.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:00:46.417 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:00:46.417 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 02:00:46.418 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:00:46.418 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-07 02:01:14.810 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:14.813 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:01:14.888 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:01:28.169 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:01:28.224 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:01:28.224 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:01:30.275 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:01:30.275 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:01:30.276 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:01:17.536
2015-12-07 02:01:30.276 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:01:30.349 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:01:30.350 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:30.393 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:01:30.393 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:01:30.539 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:30.539 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:30.540 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-07 02:01:30.541 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:30.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:30.619 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:30.632 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:30.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-07 02:01:32.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:32.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:32.598 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:32.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:32.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:32.762 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:32.763 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:32.764 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-07 02:01:32.764 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:32.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:32.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:32.859 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:32.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-07 02:01:34.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:34.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:34.741 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:34.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:34.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:34.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:34.892 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:34.893 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-07 02:01:34.894 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:34.894 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:34.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:34.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:34.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-07 02:01:36.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:36.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:36.867 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:36.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:36.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:37.035 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:37.035 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:37.036 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-07 02:01:37.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:37.037 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:37.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:37.126 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:37.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-07 02:01:38.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:38.986 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:39.001 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:39.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:39.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:39.163 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:39.163 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:39.164 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-07 02:01:39.165 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:39.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:39.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:39.254 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:39.254 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-07 02:01:40.599 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:40.599 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:40.619 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:40.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:40.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:40.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:40.759 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:40.760 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 02:01:40.760 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:40.760 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:40.838 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:40.851 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:40.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 02:01:42.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:42.898 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:42.918 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:42.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:42.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:43.012 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:43.013 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:43.013 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-07 02:01:43.014 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:43.014 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:43.089 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:43.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:43.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-07 02:01:45.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:45.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:45.512 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:01:45.512 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:45.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:45.652 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:45.653 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:45.654 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-07 02:01:45.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:45.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:45.730 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:45.743 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:45.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-07 02:01:47.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:47.784 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:47.797 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:47.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:47.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:47.921 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:47.922 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:47.923 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-07 02:01:47.923 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:47.923 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:47.991 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:48.007 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:48.007 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-07 02:01:50.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:50.170 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:50.197 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:01:50.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:50.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:50.320 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:50.321 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:50.322 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,509]>
2015-12-07 02:01:50.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:50.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:50.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:50.405 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:50.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,509]>
2015-12-07 02:01:52.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:52.657 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:52.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:01:52.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:52.718 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:52.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:52.779 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:52.780 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,582]>
2015-12-07 02:01:52.780 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:52.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:52.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:52.855 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:52.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,582]>
2015-12-07 02:01:54.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:54.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:54.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:54.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:54.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:54.652 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:54.652 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:54.653 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,684]>
2015-12-07 02:01:54.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:54.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:54.727 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:54.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:54.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,684]>
2015-12-07 02:01:56.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:56.075 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:56.090 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:56.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:56.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:56.229 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:56.230 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:56.231 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-07 02:01:56.232 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:56.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:56.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:56.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:56.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-07 02:01:57.652 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:57.652 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:57.668 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:57.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:01:57.735 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:01:57.794 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:01:57.795 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:01:57.796 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-07 02:01:57.796 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:01:57.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:01:57.864 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:57.876 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:57.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-07 02:01:59.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:01:59.950 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:01:59.962 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:01:59.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:02:00.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:02:00.130 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:02:00.131 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:02:00.131 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:02:00.132 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   24 <ExplAct Reset app>
2015-12-07 02:02:00.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:02:00.132 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-07 02:02:26.311 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:02:26.314 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:02:26.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:02:39.694 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:02:39.748 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:02:39.748 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:02:41.799 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:02:41.799 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:02:41.800 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:02:28.896
2015-12-07 02:02:41.800 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:02:41.897 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:02:41.897 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:02:41.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:02:41.937 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:02:42.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:02:42.103 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:02:42.103 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:02:42.103 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:02:42.104 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-07 02:02:42.104 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:02:42.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:02:42.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:02:42.191 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:02:42.191 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.adobe.reader}
2015-12-07 02:02:43.007 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:02:43.082 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:02:43.085 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:02:43.085 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:02:43.144 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:02:43.214 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-07 02:03:01.421 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:01.422 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-07 02:03:26.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:26.931 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:03:27.005 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:03:39.938 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:03:39.993 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:03:39.993 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:03:42.047 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:03:42.047 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:03:42.047 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:03:29.116
2015-12-07 02:03:42.047 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:03:42.147 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:03:42.147 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:42.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:03:42.191 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:03:42.358 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:42.359 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:42.360 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:03:42.360 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:42.360 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:42.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:42.445 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:42.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:03:44.512 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:03:44.512 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:44.538 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:44.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:03:44.652 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:03:44.712 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:44.712 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 56}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:44.713 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-07 02:03:44.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:44.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:44.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:44.804 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:44.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-07 02:03:48.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:03:48.139 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:48.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:48.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:03:48.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:03:48.653 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:48.653 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 95}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:48.654 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-07 02:03:48.655 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:48.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:48.736 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:48.749 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:48.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-07 02:03:52.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:03:52.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:52.533 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:03:52.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:03:52.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:03:52.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:52.749 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:52.750 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-07 02:03:52.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:52.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:52.835 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:52.853 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:52.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-07 02:03:55.712 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:03:55.712 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:55.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:55.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:03:56.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:03:56.313 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:56.314 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:56.315 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-07 02:03:56.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:56.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:56.378 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:56.390 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:56.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-07 02:03:58.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:03:58.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:58.237 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:58.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:03:58.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:03:58.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:03:58.375 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:03:58.377 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-07 02:03:58.377 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:03:58.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:03:58.446 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:03:58.460 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:03:58.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-07 02:04:01.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:01.128 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:01.185 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:04:01.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:01.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:01.424 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:01.425 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:01.426 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-07 02:04:01.426 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:01.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:01.504 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:01.516 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:01.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-07 02:04:03.811 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:03.811 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:03.828 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:03.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:03.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:03.947 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:03.947 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:03.948 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-07 02:04:03.949 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:03.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:04.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:04.035 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:04.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-07 02:04:05.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:05.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:05.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:05.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:05.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:05.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:05.992 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:05.993 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-07 02:04:05.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:05.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:06.069 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:06.084 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:06.084 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-07 02:04:07.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:07.423 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:07.436 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:07.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:07.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:07.533 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:07.534 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:07.536 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-07 02:04:07.536 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:07.536 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:07.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:07.613 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:07.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-07 02:04:08.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:08.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:08.958 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:08.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:09.002 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:09.091 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:09.092 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:09.093 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-07 02:04:09.093 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:09.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:09.166 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:09.180 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:09.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-07 02:04:10.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:10.524 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:10.542 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:10.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:10.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:10.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:10.661 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:10.662 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-07 02:04:10.662 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:10.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:10.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:10.741 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:10.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-07 02:04:12.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:12.082 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:12.099 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:12.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:12.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:12.214 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:12.214 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:12.216 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-07 02:04:12.216 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:12.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:12.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:12.299 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:12.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-07 02:04:14.124 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:14.125 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:14.137 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:14.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:14.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:14.243 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:14.243 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:14.245 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-07 02:04:14.245 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:14.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:14.309 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:14.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:14.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-07 02:04:16.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:16.156 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:16.173 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:16.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:16.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:16.278 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:16.278 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:16.279 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:04:16.279 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 02:04:16.279 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:16.280 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-07 02:04:42.241 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:42.243 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:04:42.313 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:04:55.293 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:04:55.335 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:04:55.335 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:04:57.391 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:04:57.392 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:04:57.392 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:04:44.496
2015-12-07 02:04:57.392 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:04:57.490 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:04:57.490 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:57.542 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:04:57.542 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:04:57.699 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:57.700 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:57.702 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-07 02:04:57.702 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:57.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:57.775 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:57.790 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:57.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-07 02:04:59.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:04:59.621 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:59.636 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:59.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:04:59.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:04:59.793 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:04:59.794 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:04:59.795 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-07 02:04:59.796 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:04:59.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:04:59.868 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:04:59.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:04:59.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-07 02:05:01.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:01.927 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:01.944 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:01.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:02.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:02.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:02.228 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:02.230 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/evMinusButton"/[50,159]>
2015-12-07 02:05:02.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:02.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:02.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:02.336 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:02.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/evMinusButton"/[50,159]>
2015-12-07 02:05:04.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:04.392 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:04.407 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:04.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:04.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:04.556 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:04.557 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:04.558 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-07 02:05:04.559 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:04.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:04.627 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:04.640 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:04.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-07 02:05:06.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:06.669 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:06.685 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:06.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:06.792 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:06.853 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:06.853 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 41}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:06.855 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:05:06.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:06.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:06.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:06.943 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:06.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:05:09.013 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:09.013 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:09.028 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:09.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:09.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:09.224 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:09.224 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 51}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:09.226 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:GridView/""/"com.almalence.opencam:id/focusmodeGrid"/[273,199]>
2015-12-07 02:05:09.226 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:09.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:09.296 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:09.309 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:09.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/"com.almalence.opencam:id/focusmodeGrid"/[273,199]>
2015-12-07 02:05:10.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:10.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:10.805 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:10.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:10.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:10.972 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:10.972 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 51}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:10.974 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-07 02:05:10.974 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:10.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:11.043 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:11.056 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:11.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-07 02:05:12.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:12.950 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:12.969 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:12.969 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:13.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:13.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:13.136 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:13.138 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonGallery"/[133,1155]>
2015-12-07 02:05:13.138 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:13.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:13.206 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:13.217 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:13.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonGallery"/[133,1155]>
2015-12-07 02:05:14.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:14.545 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:14.582 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:05:14.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:14.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:14.937 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:14.937 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 41}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:14.939 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:05:14.939 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:14.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:15.009 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:15.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:15.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-07 02:05:18.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:18.171 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:18.206 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:05:18.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:18.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:18.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:18.367 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:18.369 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:Button/"Do not show"/"com.almalence.opencam:id/buttonDontShow"/[583,774]>
2015-12-07 02:05:18.369 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:18.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:18.460 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:18.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:18.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Do not show"/"com.almalence.opencam:id/buttonDontShow"/[583,774]>
2015-12-07 02:05:19.843 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:19.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:19.864 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:19.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:19.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:20.040 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:20.040 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:20.042 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-07 02:05:20.042 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:20.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:20.109 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:20.122 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:20.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-07 02:05:22.271 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:22.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:22.292 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:22.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:22.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:22.437 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:22.438 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 41}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:22.440 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/qcButton"/[700,50]>
2015-12-07 02:05:22.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:22.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:22.503 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:22.520 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:22.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/qcButton"/[700,50]>
2015-12-07 02:05:24.504 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:24.504 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:24.522 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:24.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:24.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:24.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:24.673 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:24.674 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonShutter"/[400,1128]>
2015-12-07 02:05:24.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:24.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:24.736 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:24.747 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:24.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonShutter"/[400,1128]>
2015-12-07 02:05:27.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:27.174 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:27.209 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:05:27.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:27.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:27.367 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:27.368 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:27.370 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-07 02:05:27.370 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:27.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:05:27.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:27.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:27.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-07 02:05:29.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:05:29.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:29.409 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:05:29.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:05:29.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:05:29.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:05:29.701 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 71}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:05:29.702 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:05:29.703 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-07 02:05:29.703 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:05:29.703 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-07 02:05:55.809 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:05:55.812 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:05:55.877 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:06:08.449 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:06:08.492 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:06:08.492 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:06:10.541 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:06:10.541 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:06:10.541 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:05:58.066
2015-12-07 02:06:10.541 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:06:10.614 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:06:10.614 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:06:10.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:06:10.675 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:06:10.826 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:06:10.827 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:06:10.828 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:06:10.829 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:06:10.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-07 02:06:10.829 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:06:10.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:06:10.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:06:10.910 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:06:10.910 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.almalence.opencam}
2015-12-07 02:06:11.874 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:06:11.947 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:06:11.949 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:06:11.949 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:06:12.004 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:06:12.071 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-07 02:06:33.924 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device)
2015-12-07 02:06:33.924 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.AnatomyLearning.Anatomy3DViewer3
2015-12-07 02:06:59.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:06:59.424 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:06:59.491 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:07:08.385 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:07:08.432 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:07:08.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:07:10.482 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:07:10.482 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:07:10.482 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:07:02.056
2015-12-07 02:07:10.482 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:07:10.572 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:07:10.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:07:10.609 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:07:10.609 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:07:10.712 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device) - DONE
2015-12-07 02:07:10.712 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.AnatomyLearning.Anatomy3DViewer3. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:07:10.719 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.AnatomyLearning.Anatomy3DViewer3 Widgets count = 5>
2015-12-07 02:07:10.719 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:07:10.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device)
2015-12-07 02:07:10.720 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:07:10.783 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:07:10.797 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:07:10.797 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:07:10.797 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.AnatomyLearning.Anatomy3DViewer3}
2015-12-07 02:07:11.768 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:07:11.841 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:07:11.844 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:07:11.844 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:07:11.910 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:07:11.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device) - DONE
2015-12-07 02:07:22.715 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:07:22.715 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-07 02:07:48.296 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:07:48.299 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:07:48.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:07:58.038 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:07:58.072 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:07:58.072 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:08:00.116 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:08:00.117 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:08:00.117 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:07:50.426
2015-12-07 02:08:00.117 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:08:00.206 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:08:00.206 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:00.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 02:08:00.259 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:08:00.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:08:00.376 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 22}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:08:00.376 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Follow the Line EX"/"com.androidwasabi.livewallpaper.g3:id/app1"/[203,708]>
2015-12-07 02:08:00.377 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:08:00.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:08:00.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:00.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:08:00.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Follow the Line EX"/"com.androidwasabi.livewallpaper.g3:id/app1"/[203,708]>
2015-12-07 02:08:06.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:08:06.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:06.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:08:06.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:08:06.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:08:06.916 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:08:06.917 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 88}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:08:06.918 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 02:08:06.918 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:08:06.918 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-07 02:08:35.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:35.175 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:08:35.250 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:08:46.047 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:08:46.095 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:08:46.095 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:08:48.132 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:08:48.132 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:08:48.132 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:08:37.466
2015-12-07 02:08:48.132 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:08:48.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:08:48.216 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:48.272 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 02:08:48.272 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:08:48.430 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:08:48.431 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:08:48.432 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Skip"/"android:id/button2"/[401,752]>
2015-12-07 02:08:48.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:08:48.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:08:48.499 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:48.512 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:08:48.512 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Skip"/"android:id/button2"/[401,752]>
2015-12-07 02:08:50.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:08:50.368 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:50.384 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:08:50.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:08:50.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:08:50.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:08:50.512 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 22}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:08:50.513 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"More FREE Apps"/"com.androidwasabi.livewallpaper.g3:id/app_wall"/[597,482]>
2015-12-07 02:08:50.514 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:08:50.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:08:50.583 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:50.597 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:08:50.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"More FREE Apps"/"com.androidwasabi.livewallpaper.g3:id/app_wall"/[597,482]>
2015-12-07 02:08:54.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:08:54.525 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:54.552 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:08:54.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:08:54.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:08:54.677 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:08:54.677 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 24}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:08:54.679 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[400,746]>
2015-12-07 02:08:54.679 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:08:54.679 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:08:54.759 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:08:54.772 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:08:54.772 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,746]>
2015-12-07 02:09:02.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:09:02.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:09:02.411 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:09:02.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:09:02.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:09:02.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:09:02.718 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 87}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:09:02.719 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-07 02:09:02.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:09:02.720 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-07 02:09:30.783 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:09:30.786 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:09:30.849 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:09:41.043 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:09:41.086 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:09:41.086 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:09:43.126 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:09:43.127 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:09:43.127 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:09:32.806
2015-12-07 02:09:43.127 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:09:43.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:09:43.204 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:09:43.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 02:09:43.259 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:09:43.393 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:09:43.393 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 22}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:09:43.394 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"ZiBo - 3D ZigZag"/"com.androidwasabi.livewallpaper.g3:id/app2"/[597,708]>
2015-12-07 02:09:43.395 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:09:43.395 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:09:43.461 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:09:43.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:09:43.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"ZiBo - 3D ZigZag"/"com.androidwasabi.livewallpaper.g3:id/app2"/[597,708]>
2015-12-07 02:09:50.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:09:50.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:09:50.414 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:09:50.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:09:50.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:09:50.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:09:50.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 84}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:09:50.759 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 02:09:50.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:09:50.759 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-07 02:10:18.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:10:18.658 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:10:18.725 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:10:30.462 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:10:30.501 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:10:30.501 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:10:32.550 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:10:32.550 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:10:32.550 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:10:20.746
2015-12-07 02:10:32.550 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:10:32.634 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:10:32.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:10:32.692 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 02:10:32.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:10:32.814 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:10:32.814 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 22}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:10:32.815 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:10:32.815 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:10:32.816 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-07 02:10:32.816 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:10:32.880 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:10:32.893 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:10:32.893 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:10:32.893 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.androidwasabi.livewallpaper.g3}
2015-12-07 02:10:35.745 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:10:35.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:10:35.820 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:10:35.820 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:10:35.895 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:10:35.968 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-07 02:10:56.795 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:10:56.795 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-07 02:11:22.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:22.333 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:11:22.398 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:11:35.334 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:11:35.388 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:11:35.388 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:11:37.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:11:37.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:11:37.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:11:24.446
2015-12-07 02:11:37.432 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:11:37.508 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:11:37.508 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:37.543 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:11:37.543 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:11:37.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:11:37.655 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:11:37.656 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-07 02:11:37.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:11:37.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:11:37.728 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:37.741 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:11:37.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-07 02:11:40.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:11:40.057 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:40.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 02:11:40.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:11:40.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:11:40.256 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:11:40.257 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 41}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:11:40.257 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-07 02:11:40.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:11:40.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:11:40.337 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:40.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:11:40.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-07 02:11:42.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:11:42.828 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:42.865 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:11:42.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:11:43.141 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:11:43.209 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:11:43.209 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 54}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:11:43.210 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"Protect another device"/"com.antivirus:id/protect_another_device"/[399,1175]>
2015-12-07 02:11:43.211 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:11:43.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:11:43.297 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:43.312 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:11:43.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Protect another device"/"com.antivirus:id/protect_another_device"/[399,1175]>
2015-12-07 02:11:57.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:11:57.626 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:11:57.648 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 02:11:57.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:11:57.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:11:57.971 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:11:57.972 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 85}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:11:57.973 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 02:11:57.973 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:11:57.973 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-07 02:12:27.063 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:27.066 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:12:27.137 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:12:41.175 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:12:41.231 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:12:41.231 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:12:43.286 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:12:43.286 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:12:43.286 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:12:29.506
2015-12-07 02:12:43.286 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:12:43.399 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:12:43.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:43.426 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:12:43.426 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:12:43.546 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:43.547 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:43.548 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-07 02:12:43.549 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:43.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:43.633 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:43.644 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:43.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-07 02:12:45.498 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:45.498 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:45.513 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:45.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:45.570 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:45.640 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:45.641 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:45.641 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-07 02:12:45.642 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:45.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:45.720 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:45.734 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:45.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-07 02:12:47.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:47.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:47.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 22
2015-12-07 02:12:47.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:47.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:48.061 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:48.061 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 41}, DeviceLogs{apiLogs#=22, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:48.062 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Buy PRO Now"/"com.antivirus:id/buy_pro"/[209,1160]>
2015-12-07 02:12:48.063 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:48.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:48.125 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:48.136 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:12:48.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Buy PRO Now"/"com.antivirus:id/buy_pro"/[209,1160]>
2015-12-07 02:12:52.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:52.844 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:52.876 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 02:12:52.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:52.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:52.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:52.979 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 12}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:52.980 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:WebView/""/"com.antivirus:id/webView"/[400,655]>
2015-12-07 02:12:52.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:52.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:53.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:53.064 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:53.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.antivirus:id/webView"/[400,655]>
2015-12-07 02:12:55.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:55.277 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:55.294 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:55.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:55.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:55.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:55.475 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:55.477 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/""/"com.antivirus:id/home"/[17,73]>
2015-12-07 02:12:55.477 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:55.477 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:55.561 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:55.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:55.576 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.antivirus:id/home"/[17,73]>
2015-12-07 02:12:56.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:56.914 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:56.930 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:56.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:57.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:57.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:57.092 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:57.094 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[332,345]>
2015-12-07 02:12:57.095 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:57.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:57.179 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:57.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:57.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[332,345]>
2015-12-07 02:12:59.142 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:12:59.142 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:59.160 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:59.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:12:59.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:12:59.298 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:12:59.299 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:12:59.301 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[400,189]>
2015-12-07 02:12:59.301 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:12:59.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:12:59.381 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:12:59.394 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:12:59.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,189]>
2015-12-07 02:13:01.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:01.386 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:01.401 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:01.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:01.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:01.550 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:01.550 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:01.552 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[761,713]>
2015-12-07 02:13:01.552 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:01.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:01.631 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:01.646 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:01.646 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[761,713]>
2015-12-07 02:13:03.527 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:03.527 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:03.540 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:03.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:03.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:03.680 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:03.680 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:03.682 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[330,316]>
2015-12-07 02:13:03.682 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:03.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:03.764 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:03.778 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:03.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[330,316]>
2015-12-07 02:13:05.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:05.659 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:05.672 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:05.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:05.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:05.811 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:05.811 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:05.813 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[335,778]>
2015-12-07 02:13:05.813 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:05.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:05.888 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:05.900 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:05.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[335,778]>
2015-12-07 02:13:07.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:07.770 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:07.786 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:07.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:09.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:09.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:09.326 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:09.328 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:View/""/""/[325,249]>
2015-12-07 02:13:09.328 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:09.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:09.401 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:09.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:09.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[325,249]>
2015-12-07 02:13:11.276 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:11.276 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:11.295 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:13:11.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:11.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:11.443 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:11.443 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:11.445 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:View/""/""/[399,594]>
2015-12-07 02:13:11.445 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:11.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:11.522 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:11.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:11.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,594]>
2015-12-07 02:13:13.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:13.515 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:13.533 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:13.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:13.631 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:13.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:13.708 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:13.710 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:View/""/""/[335,1010]>
2015-12-07 02:13:13.710 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:13.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:13.791 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:13.803 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:13.804 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[335,1010]>
2015-12-07 02:13:15.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:15.671 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:15.686 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:15.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:15.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:15.827 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:15.828 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:15.830 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:View/""/""/[335,855]>
2015-12-07 02:13:15.830 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:15.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:13:15.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:15.926 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:15.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[335,855]>
2015-12-07 02:13:17.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:13:17.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:17.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:17.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:13:17.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:13:17.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:17.941 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 62}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:17.942 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:13:17.942 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   20 <ExplAct Reset app>
2015-12-07 02:13:17.942 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:17.942 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-07 02:13:43.868 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:43.871 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:13:43.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:13:56.660 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:13:56.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:13:56.706 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:13:58.763 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:13:58.764 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:13:58.764 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:13:46.136
2015-12-07 02:13:58.764 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:13:58.852 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:13:58.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:58.895 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:13:58.895 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:13:59.011 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:13:59.012 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:13:59.012 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:13:59.013 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:13:59.013 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-07 02:13:59.013 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:13:59.104 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:13:59.122 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:13:59.123 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:13:59.123 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.antivirus}
2015-12-07 02:14:00.010 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:14:00.086 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:14:00.089 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:14:00.089 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:14:00.141 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:14:00.212 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-07 02:14:12.071 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-07 02:14:12.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-07 02:14:38.034 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:14:38.038 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:14:38.122 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:14:49.097 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:14:49.144 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:14:49.144 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:14:51.202 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:14:51.202 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:14:51.202 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:14:40.706
2015-12-07 02:14:51.202 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:14:51.305 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:14:51.305 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:14:51.327 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:14:51.327 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:14:51.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-07 02:14:51.462 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.apusapps.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:14:51.463 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[583,701]>
2015-12-07 02:14:51.463 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-07 02:14:51.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:14:51.537 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:14:51.550 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:14:51.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[583,701]>
2015-12-07 02:14:53.769 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:14:53.769 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:14:53.774 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:14:53.774 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:14:53.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:14:53.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-07 02:14:53.909 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:14:53.910 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 02:14:53.910 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-07 02:14:53.910 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-07 02:15:19.729 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:15:19.733 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:15:19.809 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:15:29.759 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:15:29.811 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:15:29.811 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:15:31.874 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:15:31.874 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:15:31.874 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:15:21.706
2015-12-07 02:15:31.874 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:15:31.980 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:15:31.980 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:15:32.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:15:32.003 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:15:32.136 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-07 02:15:32.136 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.apusapps.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:15:32.137 INFO  o.d.e.strategy.ExplorationStrategy         0m 40s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[219,701]>
2015-12-07 02:15:32.137 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-07 02:15:32.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:15:32.217 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:15:32.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:15:32.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[219,701]>
2015-12-07 02:15:36.527 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:15:36.527 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:15:36.545 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:15:36.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:15:36.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:15:36.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-07 02:15:36.759 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 70}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:15:36.760 INFO  o.d.e.strategy.ExplorationStrategy         0m 45s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 02:15:36.760 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-07 02:15:36.760 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-07 02:15:40.814 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 02:15:53.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:15:53.835 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-07 02:16:21.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:21.657 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:16:21.731 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:16:35.815 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:16:35.865 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:16:35.865 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:16:37.925 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:16:37.925 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:16:37.925 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:16:23.876
2015-12-07 02:16:37.925 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:16:38.023 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:16:38.023 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:38.075 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:16:38.075 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:16:38.188 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:38.189 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:38.189 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-07 02:16:38.190 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:38.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:38.266 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:38.279 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:38.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-07 02:16:39.862 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:39.862 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:39.879 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:39.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:39.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:39.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:39.984 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:39.985 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-07 02:16:39.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:39.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:40.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:40.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:40.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-07 02:16:42.114 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:42.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:42.138 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:16:42.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:42.198 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:42.270 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:42.270 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:42.271 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Retry"/"android:id/button1"/[219,701]>
2015-12-07 02:16:42.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:42.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:42.347 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:42.360 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:42.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Retry"/"android:id/button1"/[219,701]>
2015-12-07 02:16:44.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:44.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:44.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:16:44.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:44.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:44.536 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:44.537 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:44.538 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,785]>
2015-12-07 02:16:44.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:44.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:44.620 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:44.632 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:44.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,785]>
2015-12-07 02:16:47.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:47.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:47.762 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:16:47.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:47.812 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:47.884 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:47.885 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:47.886 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:16:47.886 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:47.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:47.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:47.983 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:47.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:16:50.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:50.347 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:50.380 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 02:16:50.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:50.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:50.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:50.487 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:50.488 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:16:50.488 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:50.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:50.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:50.582 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:50.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:16:52.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:52.443 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:52.461 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:52.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:52.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:52.570 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:52.570 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:52.571 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-07 02:16:52.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:52.571 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:52.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:52.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:52.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-07 02:16:54.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:54.005 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:54.023 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:16:54.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:54.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:54.147 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:54.148 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:54.149 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:16:54.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:54.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:54.228 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:54.249 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:54.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:16:56.123 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:56.123 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:56.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:16:56.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:56.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:56.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:56.252 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:56.253 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 1 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:16:56.254 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:56.254 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:56.337 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:56.353 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:56.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:16:59.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:16:59.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:59.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:59.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:16:59.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:16:59.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:16:59.388 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:16:59.389 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:16:59.390 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:16:59.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:16:59.469 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:16:59.482 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:16:59.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:17:01.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:01.626 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:01.656 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:17:01.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:01.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:01.771 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:01.772 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:01.773 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:17:01.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:01.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:01.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:01.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:01.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:17:03.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:03.723 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:03.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:03.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:03.771 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:03.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:03.845 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:03.846 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-07 02:17:03.847 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:03.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:03.922 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:03.933 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:03.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-07 02:17:06.329 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:06.329 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:06.349 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:17:06.349 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:06.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:06.458 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:06.459 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.googlequicksearchbox. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:06.460 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-07 02:17:06.460 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:06.460 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-07 02:17:32.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:32.402 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:17:32.473 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:17:45.504 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:17:45.539 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:17:45.539 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:17:47.595 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:17:47.595 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:17:47.595 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:17:34.346
2015-12-07 02:17:47.595 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:17:47.686 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:17:47.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:47.731 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:17:47.731 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:17:48.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:48.154 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:48.155 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-07 02:17:48.155 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:48.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:48.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:48.254 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:48.254 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-07 02:17:50.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:50.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:50.314 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:17:50.314 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:50.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:50.436 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:50.436 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:50.437 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Search a location"/"android:id/button2"/[583,701]>
2015-12-07 02:17:50.438 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:50.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:50.515 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:50.529 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:50.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Search a location"/"android:id/button2"/[583,701]>
2015-12-07 02:17:53.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:53.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:53.313 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:17:53.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:53.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:53.429 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:53.429 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:53.430 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:17:53.430 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:53.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:53.503 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:53.519 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:53.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:17:55.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:55.702 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:55.723 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:17:55.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:55.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:55.847 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:55.847 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:55.848 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:17:55.849 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:55.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:55.935 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:55.948 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:55.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:17:57.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:57.808 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:57.828 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:57.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:57.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:57.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:57.940 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:57.941 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:17:57.942 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:57.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:58.023 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:58.037 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:58.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:17:59.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:17:59.381 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:59.395 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:59.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:17:59.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:17:59.520 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:17:59.521 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:17:59.522 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:17:59.522 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:17:59.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:17:59.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:17:59.617 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:17:59.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:18:00.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:00.958 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:00.974 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:00.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:01.007 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:01.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:01.075 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:01.076 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:01.077 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:01.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:01.143 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:01.154 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:01.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:03.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:03.301 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:03.327 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:18:03.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:03.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:03.441 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:03.442 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:03.443 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:03.443 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:03.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:03.519 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:03.533 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:03.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:05.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:05.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:05.421 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:05.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:05.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:05.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:05.527 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:05.528 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   23 <ExplAct LC? 1 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:18:05.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:05.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:05.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:05.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:05.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:18:08.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:08.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:08.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:08.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:08.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:08.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:08.829 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:08.830 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:08.830 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:08.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:08.911 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:08.924 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:08.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:11.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:11.159 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:11.185 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:18:11.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:11.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:11.291 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:11.291 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:11.292 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:11.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:11.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:11.368 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:11.381 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:11.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:13.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:13.245 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:13.263 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:13.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:13.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:13.382 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:13.383 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:13.384 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:18:13.384 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:13.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:13.461 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:13.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:13.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-07 02:18:14.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:14.815 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:14.834 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:14.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:14.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:14.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:14.941 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:14.942 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:14.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:14.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:15.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:15.032 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:15.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-07 02:18:17.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:17.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:17.240 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:18:17.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:17.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:17.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:17.359 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:17.360 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:17.361 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:17.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:18:17.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:17.445 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:17.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-07 02:18:19.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:18:19.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:19.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:18:19.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:18:19.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:18:19.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:18:19.423 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:18:19.424 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:18:19.424 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   29 <ExplAct Reset app>
2015-12-07 02:18:19.424 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:18:19.424 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-07 02:18:45.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:18:45.367 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:18:45.443 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:18:58.000 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:18:58.037 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:18:58.037 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:19:00.095 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:19:00.095 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:19:00.095 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:18:47.616
2015-12-07 02:19:00.095 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:19:00.175 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:19:00.175 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:00.228 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:19:00.229 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:19:00.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:19:00.322 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:19:00.322 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:19:00.322 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:19:00.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-07 02:19:00.323 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:19:00.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:00.415 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:19:00.415 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:19:00.415 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.audioguidia.myweather}
2015-12-07 02:19:01.362 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:19:01.444 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:01.448 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:19:01.448 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:19:01.508 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:19:01.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-07 02:19:18.065 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:19:18.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-07 02:19:43.563 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:43.566 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:19:43.639 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:19:56.283 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:19:56.336 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:19:56.336 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:19:58.389 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:19:58.389 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:19:58.390 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:19:45.726
2015-12-07 02:19:58.390 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:19:58.488 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:19:58.488 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:58.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:19:58.525 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:19:58.652 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:19:58.653 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:19:58.653 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.avira.android:id/welcomeItemNumber"/[400,960]>
2015-12-07 02:19:58.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:19:58.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:19:58.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:19:58.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:19:58.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.avira.android:id/welcomeItemNumber"/[400,960]>
2015-12-07 02:20:01.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:01.070 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:01.088 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:01.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:01.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:01.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:01.218 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:01.218 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Create new account"/"com.avira.android:id/welcomeCreateAccountButton"/[400,1065]>
2015-12-07 02:20:01.219 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:01.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:01.288 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:01.300 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:01.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Create new account"/"com.avira.android:id/welcomeCreateAccountButton"/[400,1065]>
2015-12-07 02:20:03.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:03.604 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:03.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:20:03.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:03.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:03.747 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:03.747 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 25}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:03.748 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/create_account_next"/[707,117]>
2015-12-07 02:20:03.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:03.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:03.827 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:03.841 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:03.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/create_account_next"/[707,117]>
2015-12-07 02:20:05.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:05.846 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:05.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:05.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:05.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:05.982 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:05.983 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:05.983 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"(EULA)"/"com.avira.android:id/eulaLinkTextView"/[399,728]>
2015-12-07 02:20:05.984 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:05.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:06.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:06.066 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:06.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"(EULA)"/"com.avira.android:id/eulaLinkTextView"/[399,728]>
2015-12-07 02:20:08.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:08.505 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:08.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:20:08.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:08.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:08.626 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:08.626 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 10}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:08.627 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-07 02:20:08.627 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:08.627 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-07 02:20:34.844 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:34.847 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:20:34.917 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:20:46.644 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:20:46.698 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:20:46.698 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:20:48.759 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:20:48.759 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:20:48.759 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:20:36.806
2015-12-07 02:20:48.760 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:20:48.882 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:20:48.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:48.913 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:20:48.913 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:20:49.042 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:49.042 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:49.043 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[420,960]>
2015-12-07 02:20:49.043 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:49.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:49.116 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:49.129 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:49.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[420,960]>
2015-12-07 02:20:51.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:51.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:51.565 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:51.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:51.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:51.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:51.676 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:51.677 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-07 02:20:51.677 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:51.677 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:51.753 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:51.766 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:51.766 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-07 02:20:54.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:54.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:54.586 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:20:54.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:54.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:54.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:54.692 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:54.692 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-07 02:20:54.693 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:54.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:54.759 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:54.767 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:54.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-07 02:20:56.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:56.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:56.816 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:56.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:56.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:56.966 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:56.966 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:56.967 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-07 02:20:56.967 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:56.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:57.042 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:57.053 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:57.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-07 02:20:58.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:20:58.891 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:58.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:58.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:20:58.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:20:59.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:20:59.023 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:20:59.024 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,422]>
2015-12-07 02:20:59.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:20:59.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:20:59.094 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:20:59.108 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:20:59.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,422]>
2015-12-07 02:21:00.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:00.466 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:00.482 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:00.482 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:00.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:00.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:00.595 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:00.596 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Forgot your password?"/"com.avira.android:id/registration_forgot_password_link"/[399,535]>
2015-12-07 02:21:00.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:00.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:21:00.672 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:00.685 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:00.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot your password?"/"com.avira.android:id/registration_forgot_password_link"/[399,535]>
2015-12-07 02:21:05.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:05.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:05.813 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:21:05.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:06.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:06.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:06.149 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:06.150 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 02:21:06.150 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:06.150 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-07 02:21:34.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:34.240 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:21:34.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:21:46.935 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:21:46.989 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:21:46.989 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:21:49.044 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:21:49.044 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:21:49.045 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:21:36.526
2015-12-07 02:21:49.045 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:21:49.140 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:21:49.140 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:49.176 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:21:49.176 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:21:49.307 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:49.307 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:49.308 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[380,960]>
2015-12-07 02:21:49.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:49.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:21:49.385 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:49.399 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:49.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[380,960]>
2015-12-07 02:21:51.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:51.238 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:51.258 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:51.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:51.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:51.383 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:51.384 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:51.385 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,960]>
2015-12-07 02:21:51.386 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:51.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:21:51.468 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:51.481 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:51.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,960]>
2015-12-07 02:21:53.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:53.823 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:53.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:53.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:53.915 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:53.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:53.978 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:53.983 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-07 02:21:53.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:53.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:21:54.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:54.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:54.071 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-07 02:21:56.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:56.941 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:56.966 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:21:56.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:57.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:57.083 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:57.083 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:57.084 INFO  o.d.e.strategy.ExplorationStrategy         1m 58s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,390]>
2015-12-07 02:21:57.084 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:57.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:21:57.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:57.170 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:57.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,390]>
2015-12-07 02:21:59.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:21:59.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:59.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:59.204 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:21:59.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:21:59.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:21:59.309 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:21:59.310 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:21:59.310 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:21:59.310 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-07 02:21:59.311 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:21:59.386 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:21:59.400 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:21:59.400 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:21:59.400 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.avira.android}
2015-12-07 02:22:00.369 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:22:00.446 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:22:00.448 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:22:00.448 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:22:00.516 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:22:00.578 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-07 02:22:58.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:22:58.475 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-07 02:23:24.112 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:24.115 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:23:24.181 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:23:40.361 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:23:40.398 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:23:40.398 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:23:42.442 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:23:42.442 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:23:42.442 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:23:26.356
2015-12-07 02:23:42.442 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:23:42.514 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:23:42.514 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:42.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:23:42.554 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:23:42.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:42.675 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:42.675 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/""/[120,229]>
2015-12-07 02:23:42.676 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:42.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:23:42.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:42.804 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:42.804 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[120,229]>
2015-12-07 02:23:44.649 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:23:44.649 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:44.664 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:23:44.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:23:44.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:23:44.774 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:44.774 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:44.775 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Already registered? Log in"/"com.babbel.mobile.android.en:id/appStartLoginButton"/[640,692]>
2015-12-07 02:23:44.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:44.775 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:23:44.858 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:44.872 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:44.872 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Already registered? Log in"/"com.babbel.mobile.android.en:id/appStartLoginButton"/[640,692]>
2015-12-07 02:23:47.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:23:47.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:47.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:23:47.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:23:47.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:23:47.434 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:47.435 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:47.435 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.babbel.mobile.android.en:id/login_register_button"/[640,704]>
2015-12-07 02:23:47.436 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:47.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:23:47.511 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:47.523 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:47.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.babbel.mobile.android.en:id/login_register_button"/[640,704]>
2015-12-07 02:23:49.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:23:49.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:49.893 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:23:49.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:23:49.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:23:50.007 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:50.008 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 20}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:50.008 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_registerWithGoogleButton"/[640,376]>
2015-12-07 02:23:50.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:50.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:23:50.082 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:50.096 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:50.096 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_registerWithGoogleButton"/[640,376]>
2015-12-07 02:23:51.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:23:51.935 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:51.950 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:51.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:23:52.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:23:52.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:52.067 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:52.068 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_facebook_button"/[640,516]>
2015-12-07 02:23:52.069 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:52.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:23:52.151 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:52.179 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:52.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_facebook_button"/[640,516]>
2015-12-07 02:23:54.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:23:54.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:23:54.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:23:54.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:23:54.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:23:54.552 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:23:54.553 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.gms. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:23:54.553 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-07 02:23:54.554 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:23:54.554 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-07 02:24:21.857 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:21.860 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:24:21.922 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:24:38.162 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:24:38.198 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:24:38.198 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:24:40.253 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:24:40.253 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:24:40.254 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:24:23.966
2015-12-07 02:24:40.254 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:24:40.352 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:24:40.352 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:40.385 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 02:24:40.385 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:24:40.485 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:24:40.485 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:24:40.485 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"Start"/"com.babbel.mobile.android.en:id/appStartStartButton"/[640,589]>
2015-12-07 02:24:40.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:24:40.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:24:40.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:40.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:24:40.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Start"/"com.babbel.mobile.android.en:id/appStartStartButton"/[640,589]>
2015-12-07 02:24:43.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:24:43.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:43.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:24:43.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:24:43.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:24:43.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:24:43.322 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:24:43.323 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"55 - 64"/"com.babbel.mobile.android.en:id/ageButtonYounger64"/[639,718]>
2015-12-07 02:24:43.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:24:43.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:24:43.400 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:43.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:24:43.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"55 - 64"/"com.babbel.mobile.android.en:id/ageButtonYounger64"/[639,718]>
2015-12-07 02:24:46.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:24:46.160 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:46.182 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:24:46.182 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:24:46.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:24:46.341 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:24:46.342 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:24:46.343 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Recommendation"/"com.babbel.mobile.android.en:id/answerButton3"/[639,538]>
2015-12-07 02:24:46.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:24:46.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:24:46.445 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:46.459 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:24:46.460 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Recommendation"/"com.babbel.mobile.android.en:id/answerButton3"/[639,538]>
2015-12-07 02:24:50.055 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:24:50.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:24:50.079 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:24:50.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:24:50.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:24:50.215 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-07 02:24:50.216 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 21}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:24:50.216 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   11 <ExplAct Reset app>
2015-12-07 02:24:50.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-07 02:24:50.217 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-07 02:25:16.122 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 02:25:28.995 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:25:28.995 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-07 02:25:54.604 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:25:54.607 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:25:54.675 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:26:05.052 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:26:05.092 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:26:05.092 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:26:07.128 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:26:07.128 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:26:07.128 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:25:56.566
2015-12-07 02:26:07.128 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:26:07.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:26:07.204 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:07.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:26:07.231 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:26:07.382 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:07.383 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:07.384 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-07 02:26:07.384 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:07.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:07.451 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:07.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:07.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-07 02:26:11.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:11.630 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:11.655 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 02:26:11.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:11.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:11.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:11.824 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 57}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:11.824 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[325,1185]>
2015-12-07 02:26:11.825 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:11.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:11.890 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:11.905 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:11.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[325,1185]>
2015-12-07 02:26:17.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:17.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:17.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:17.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:17.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:17.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:17.417 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 53}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:17.418 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Spinner/""/"com.baviux.pillreminder:id/yearSpinner"/[400,141]>
2015-12-07 02:26:17.418 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:17.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:17.489 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:17.502 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:17.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.baviux.pillreminder:id/yearSpinner"/[400,141]>
2015-12-07 02:26:19.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:19.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:19.502 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:19.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:19.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:19.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:19.597 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:19.598 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:CheckedTextView/"2014"/"android:id/text1"/[392,298]>
2015-12-07 02:26:19.598 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:19.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:19.665 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:19.676 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:19.677 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"2014"/"android:id/text1"/[392,298]>
2015-12-07 02:26:22.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:22.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:22.298 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:22.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:22.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:22.458 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:22.459 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 51}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:22.459 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[399,1171]>
2015-12-07 02:26:22.460 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:22.460 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:22.526 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:22.540 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:22.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,1171]>
2015-12-07 02:26:27.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:27.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:27.822 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:27.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:27.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:27.952 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:27.952 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:27.953 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[218,1171]>
2015-12-07 02:26:27.953 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:27.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:28.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:28.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:28.032 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[218,1171]>
2015-12-07 02:26:33.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:33.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:33.309 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:33.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:33.395 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:33.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:33.468 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 53}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:33.468 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[543,1171]>
2015-12-07 02:26:33.469 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:33.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:26:33.542 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:33.553 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:26:33.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[543,1171]>
2015-12-07 02:26:38.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:26:38.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:26:38.066 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:26:38.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:26:38.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:26:38.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:26:38.386 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:26:38.386 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 02:26:38.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:26:38.387 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-07 02:27:06.429 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:06.432 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:27:06.501 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:27:18.693 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:27:18.737 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:27:18.737 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:27:20.781 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:27:20.781 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:27:20.781 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:27:08.956
2015-12-07 02:27:20.781 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:27:20.857 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:27:20.857 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:20.890 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:27:20.890 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:27:21.032 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:21.033 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:21.034 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/store_menu_item"/[672,70]>
2015-12-07 02:27:21.034 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:21.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:27:21.097 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:21.107 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:27:21.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/store_menu_item"/[672,70]>
2015-12-07 02:27:23.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:27:23.228 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:23.252 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:27:23.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:27:23.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:27:23.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:23.375 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 28}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:23.375 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Install"/"com.baviux.pillreminder:id/button"/[714,412]>
2015-12-07 02:27:23.376 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:23.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:27:23.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:23.461 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:27:23.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Install"/"com.baviux.pillreminder:id/button"/[714,412]>
2015-12-07 02:27:26.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:27:26.632 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:26.657 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:27:26.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:27:26.711 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:27:26.776 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:26.776 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:26.777 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/screenshot03ImageView"/[661,462]>
2015-12-07 02:27:26.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:26.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:27:26.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:26.868 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:27:26.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/screenshot03ImageView"/[661,462]>
2015-12-07 02:27:28.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:27:28.880 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:28.900 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:27:28.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:27:28.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:27:28.990 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:28.991 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 4}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:28.992 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/imageView"/[400,602]>
2015-12-07 02:27:28.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:28.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:27:29.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:29.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:27:29.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/imageView"/[400,602]>
2015-12-07 02:27:30.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:27:30.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:30.432 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:27:30.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:27:30.489 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:27:30.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:30.554 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:30.555 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Buy"/"com.baviux.pillreminder:id/buyButton"/[739,198]>
2015-12-07 02:27:30.555 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:30.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:27:30.628 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:30.643 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:27:30.643 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Buy"/"com.baviux.pillreminder:id/buyButton"/[739,198]>
2015-12-07 02:27:35.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:27:35.025 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:27:35.043 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:27:35.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:27:35.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:27:35.293 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:27:35.293 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 78}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:27:35.294 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   15 <ExplAct Reset app>
2015-12-07 02:27:35.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:27:35.295 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-07 02:28:03.339 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:28:03.342 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:28:03.411 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:28:14.027 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:28:14.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:28:14.067 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:28:16.108 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:28:16.108 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:28:16.108 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:28:05.556
2015-12-07 02:28:16.108 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:28:16.187 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:28:16.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:28:16.226 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:28:16.226 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:28:16.349 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:28:16.350 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:28:16.350 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:28:16.351 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:28:16.351 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-07 02:28:16.351 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:28:16.418 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:28:16.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:28:16.431 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:28:16.431 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.baviux.pillreminder}
2015-12-07 02:28:17.363 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:28:17.435 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:28:17.439 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:28:17.439 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:28:17.511 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:28:17.579 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-07 02:28:31.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:28:31.444 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ben.lianmeng
2015-12-07 02:28:56.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:28:56.969 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:28:57.034 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:29:07.055 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:29:07.106 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:29:07.106 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:29:09.158 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:29:09.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:29:09.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:28:58.856
2015-12-07 02:29:09.159 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:29:09.238 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:29:09.238 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:09.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:29:09.278 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:29:09.394 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:09.395 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:09.395 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/"com.ben.lianmeng:id/imageview_soundswitch"/[33,69]>
2015-12-07 02:29:09.395 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:09.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:09.460 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:09.467 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:09.467 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.ben.lianmeng:id/imageview_soundswitch"/[33,69]>
2015-12-07 02:29:11.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:11.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:11.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:11.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:11.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:11.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:11.457 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:11.458 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorFemale"/[399,938]>
2015-12-07 02:29:11.458 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:11.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:11.535 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:11.549 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:11.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorFemale"/[399,938]>
2015-12-07 02:29:14.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:14.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:14.526 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:29:14.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:14.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:14.796 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:14.796 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 57}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:14.797 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnSettings"/[33,123]>
2015-12-07 02:29:14.798 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:14.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:14.890 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:14.907 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:14.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnSettings"/[33,123]>
2015-12-07 02:29:16.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:16.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:16.759 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:16.759 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:16.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:16.930 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:16.931 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 68}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:16.932 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:29:16.932 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:16.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:17.010 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:17.023 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:17.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:29:18.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:18.866 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:18.883 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:18.883 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:18.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:19.019 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:19.019 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:19.020 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:29:19.021 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:19.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:19.096 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:19.111 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:19.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:29:21.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:21.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:21.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:21.172 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:21.276 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:21.340 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:21.340 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:21.342 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:29:21.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:21.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:21.420 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:21.433 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:21.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:29:23.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:23.490 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:23.507 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:23.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:23.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:23.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:23.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:23.700 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:GridView/""/""/[400,965]>
2015-12-07 02:29:23.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:23.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:23.769 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:23.782 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:23.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/""/[400,965]>
2015-12-07 02:29:25.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:25.819 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:25.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:25.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:25.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:26.007 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:26.007 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:26.008 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[71,692]>
2015-12-07 02:29:26.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:26.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:26.090 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:26.102 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:26.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[71,692]>
2015-12-07 02:29:27.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:27.436 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:27.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:27.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:27.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:27.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:27.596 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:27.598 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1158]>
2015-12-07 02:29:27.598 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:27.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:27.666 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:27.680 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:27.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1158]>
2015-12-07 02:29:29.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:29.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:29.743 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:29.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:29.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:29.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:29.912 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:29.914 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnBackIndex"/[53,64]>
2015-12-07 02:29:29.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:29.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:29.990 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:30.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:30.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnBackIndex"/[53,64]>
2015-12-07 02:29:31.342 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:31.342 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:31.362 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:31.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:31.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:31.474 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:31.474 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:31.475 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-07 02:29:31.476 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:31.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:31.550 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:31.564 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:31.564 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-07 02:29:34.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:34.388 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:34.414 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:29:34.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:34.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:34.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:34.670 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:34.671 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-07 02:29:34.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:34.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:34.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:34.766 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:29:34.766 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-07 02:29:36.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:36.982 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:37.175 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:37.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:37.504 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:37.579 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:37.579 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:37.580 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:29:37.581 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:37.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:29:37.652 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:37.672 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:37.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:29:42.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:29:42.978 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:29:42.993 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:29:42.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:29:43.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:29:43.180 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:29:43.180 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.keep. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:29:43.181 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   15 <ExplAct Reset app>
2015-12-07 02:29:43.182 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:29:43.182 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ben.lianmeng
2015-12-07 02:30:09.492 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:09.494 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:30:09.563 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:30:21.240 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:30:21.284 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:30:21.284 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:30:23.336 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:30:23.336 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:30:23.336 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:30:11.726
2015-12-07 02:30:23.336 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:30:23.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:30:23.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:23.451 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:30:23.451 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:30:23.563 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:23.563 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:23.564 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-07 02:30:23.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:23.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:23.640 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:23.656 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:23.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-07 02:30:26.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:26.404 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:26.439 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:30:26.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:26.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:26.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:26.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 57}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:26.700 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:30:26.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:26.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:26.780 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:26.798 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:26.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-07 02:30:28.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:28.820 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:28.833 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:30:28.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:28.929 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:28.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:28.992 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:28.993 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:30:28.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:28.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:29.067 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:29.084 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:29.084 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:30:31.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:31.109 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:31.126 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:30:31.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:31.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:31.314 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:31.315 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:31.316 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[213,692]>
2015-12-07 02:30:31.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:31.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:31.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:31.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:31.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[213,692]>
2015-12-07 02:30:33.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:33.469 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:33.483 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:33.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:33.599 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:33.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:33.668 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:33.669 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[755,692]>
2015-12-07 02:30:33.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:33.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:33.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:33.751 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:33.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[755,692]>
2015-12-07 02:30:36.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:36.264 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:36.279 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:36.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:36.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:36.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:36.475 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:36.477 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[542,692]>
2015-12-07 02:30:36.477 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:36.477 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:36.552 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:36.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:36.568 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[542,692]>
2015-12-07 02:30:38.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:38.758 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:38.776 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:38.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:38.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:38.975 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:38.975 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:38.977 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:30:38.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:38.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:39.050 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:39.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:39.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:30:41.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:41.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:41.126 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:30:41.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:41.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:41.314 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:41.315 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 60}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:41.316 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[400,381]>
2015-12-07 02:30:41.317 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:41.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:41.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:41.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:41.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,381]>
2015-12-07 02:30:42.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:42.738 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:42.750 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:42.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:42.831 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:42.887 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:42.887 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:42.889 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:30:42.889 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:42.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:42.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:42.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:42.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:30:45.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:45.009 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:45.029 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:30:45.029 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:45.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:45.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:45.196 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 60}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:45.197 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-07 02:30:45.197 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:45.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:30:45.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:45.287 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:30:45.287 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-07 02:30:47.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:30:47.994 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:30:48.016 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:30:48.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:30:48.189 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:30:48.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-07 02:30:48.265 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 49}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:30:48.266 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   26 <ExplAct Reset app>
2015-12-07 02:30:48.267 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-07 02:30:48.267 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ben.lianmeng
2015-12-07 02:31:14.137 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 02:31:31.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:31:31.586 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-07 02:31:57.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:31:57.307 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:31:57.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:32:13.471 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:32:13.516 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:32:13.516 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:32:15.574 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:32:15.574 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:32:15.574 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:31:59.236
2015-12-07 02:32:15.574 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:32:15.659 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:32:15.659 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:15.715 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 02:32:15.715 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:32:16.053 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:32:16.055 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:32:16.056 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,620]>
2015-12-07 02:32:16.056 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:32:16.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:32:16.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:16.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:32:16.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,620]>
2015-12-07 02:32:18.271 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:32:18.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:18.289 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:32:18.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:32:18.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:32:18.398 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:32:18.399 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 16}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:32:18.400 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_login"/[399,870]>
2015-12-07 02:32:18.400 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:32:18.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:32:18.474 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:18.486 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:32:18.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_login"/[399,870]>
2015-12-07 02:32:20.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:32:20.927 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:20.945 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:32:20.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:32:21.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:32:21.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:32:21.072 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 18}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:32:21.073 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/back"/[32,65]>
2015-12-07 02:32:21.073 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:32:21.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:32:21.141 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:21.155 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:32:21.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/back"/[32,65]>
2015-12-07 02:32:23.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:32:23.105 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:23.123 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:32:23.123 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:32:23.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:32:23.247 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:32:23.247 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:32:23.248 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 02:32:23.248 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:32:23.248 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-07 02:32:49.974 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:32:49.977 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:32:50.047 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:33:06.272 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:33:06.320 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:33:06.320 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:33:08.375 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:33:08.375 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:33:08.375 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:32:52.386
2015-12-07 02:33:08.375 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:33:08.450 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:33:08.450 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:08.499 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 02:33:08.499 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:33:08.838 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:08.838 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:08.839 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,413]>
2015-12-07 02:33:08.841 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:08.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:08.914 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:08.928 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:08.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,413]>
2015-12-07 02:33:11.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:11.060 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:11.080 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:33:11.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:11.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:11.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:11.424 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 16}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:11.425 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/start"/[399,789]>
2015-12-07 02:33:11.425 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:11.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:11.499 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:11.519 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:11.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/start"/[399,789]>
2015-12-07 02:33:13.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:13.689 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:13.721 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:33:13.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:13.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:13.854 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:13.854 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:13.855 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-07 02:33:13.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:13.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:13.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:13.940 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:13.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-07 02:33:15.829 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:15.829 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:15.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:15.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:15.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:15.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:15.994 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:15.995 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Monnaie"/"com.bookmark.money:id/currency"/[447,216]>
2015-12-07 02:33:15.995 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:15.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:16.058 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:16.072 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:16.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Monnaie"/"com.bookmark.money:id/currency"/[447,216]>
2015-12-07 02:33:19.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:19.333 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:19.349 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:19.349 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:19.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:19.613 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:19.614 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 64}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:19.615 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.bookmark.money:id/RelativeLayout1"/[400,195]>
2015-12-07 02:33:19.615 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:19.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:19.694 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:19.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:19.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.bookmark.money:id/RelativeLayout1"/[400,195]>
2015-12-07 02:33:21.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:21.846 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:21.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:21.862 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:21.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:21.995 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:21.995 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:21.996 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_save"/[400,1170]>
2015-12-07 02:33:21.997 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:21.997 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:22.064 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:22.078 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:22.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_save"/[400,1170]>
2015-12-07 02:33:23.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:23.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:23.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:23.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:24.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:24.130 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:24.130 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:24.131 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-07 02:33:24.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:24.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:24.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:24.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:24.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-07 02:33:26.459 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:26.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:26.476 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:26.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:26.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:26.629 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:26.629 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:26.632 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:26.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:26.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:26.708 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:26.721 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:26.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:28.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:28.600 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:28.618 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:28.618 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:28.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:28.746 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:28.746 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:28.748 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:28.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:28.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:28.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:28.830 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:28.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:30.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:30.714 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:30.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:30.728 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:30.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:30.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:30.877 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:30.879 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:30.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:30.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:30.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:30.967 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:30.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:32.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:32.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:32.870 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:32.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:32.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:33.013 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:33.014 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:33.015 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"2"/"com.bookmark.money:id/button2"/[302,1050]>
2015-12-07 02:33:33.016 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:33.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:33.092 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:33.105 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:33.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"2"/"com.bookmark.money:id/button2"/[302,1050]>
2015-12-07 02:33:34.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:34.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:34.998 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:34.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:35.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:35.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:35.143 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:35.145 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:35.145 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:35.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:35.222 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:35.235 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:35.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-07 02:33:37.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:37.125 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:37.139 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:37.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:37.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:37.270 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:37.271 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:37.272 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"5"/"com.bookmark.money:id/button5"/[302,954]>
2015-12-07 02:33:37.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:37.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:37.343 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:37.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:37.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"5"/"com.bookmark.money:id/button5"/[302,954]>
2015-12-07 02:33:39.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:39.239 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:39.253 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:39.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:39.329 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:39.394 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:39.394 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:39.396 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/button16"/[691,762]>
2015-12-07 02:33:39.397 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:39.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:33:39.474 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:39.487 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:39.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/button16"/[691,762]>
2015-12-07 02:33:40.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:33:40.863 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:33:40.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:33:40.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:33:40.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:33:41.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:33:41.023 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:33:41.025 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:33:41.025 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   20 <ExplAct Reset app>
2015-12-07 02:33:41.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:33:41.025 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-07 02:34:06.917 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:34:06.919 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:34:06.983 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:34:23.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:34:23.353 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:34:23.353 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:34:25.407 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:34:25.407 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:34:25.407 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:34:09.256
2015-12-07 02:34:25.407 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:34:25.484 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:34:25.484 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:34:25.544 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 02:34:25.544 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:34:25.906 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:34:25.906 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:34:25.908 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:34:25.908 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:34:25.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-07 02:34:25.908 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:34:25.984 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:34:25.996 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:34:25.996 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:34:25.996 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.bookmark.money}
2015-12-07 02:34:26.894 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:34:26.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:34:26.980 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:34:26.980 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:34:27.051 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:34:27.123 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-07 02:34:42.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:34:42.823 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-07 02:35:08.389 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:08.391 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:35:08.462 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:35:17.384 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:35:17.437 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:35:17.437 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:35:19.480 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:35:19.480 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:35:19.480 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:35:10.516
2015-12-07 02:35:19.480 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:35:19.559 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:35:19.559 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:19.610 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 02:35:19.610 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:35:19.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:19.715 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:19.715 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/"com.CartoonAvatar.PhotoMaker:id/imageview_soundswitch"/[33,69]>
2015-12-07 02:35:19.716 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:19.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:19.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:19.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:19.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.CartoonAvatar.PhotoMaker:id/imageview_soundswitch"/[33,69]>
2015-12-07 02:35:21.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:21.644 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:21.665 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:21.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:21.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:21.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:21.774 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:21.774 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorFemale"/[399,962]>
2015-12-07 02:35:21.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:21.775 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:21.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:21.862 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:21.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorFemale"/[399,962]>
2015-12-07 02:35:25.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:25.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:25.773 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:35:25.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:25.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:25.851 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:25.851 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 8}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:25.852 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-07 02:35:25.852 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:25.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:25.919 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:25.932 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:25.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-07 02:35:27.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:27.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:27.900 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:35:27.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:28.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:28.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:28.092 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:28.093 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-07 02:35:28.093 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:28.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:28.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:28.185 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:28.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-07 02:35:32.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:32.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:32.578 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:35:32.578 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:32.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:32.690 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:32.690 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:32.691 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[399,892]>
2015-12-07 02:35:32.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:32.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:32.764 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:32.776 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:32.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,892]>
2015-12-07 02:35:34.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:34.647 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:34.663 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:34.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:34.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:34.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:34.778 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 40}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:34.779 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[400,619]>
2015-12-07 02:35:34.779 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:34.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:34.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:34.867 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:34.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,619]>
2015-12-07 02:35:36.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:36.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:36.755 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:36.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:36.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:36.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:36.890 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 40}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:36.891 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[670,1098]>
2015-12-07 02:35:36.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:36.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:35:36.961 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:36.972 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:35:36.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[670,1098]>
2015-12-07 02:35:41.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:35:41.801 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:35:41.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:35:41.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:35:42.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:35:42.123 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:35:42.123 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:35:42.124 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 02:35:42.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:35:42.124 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-07 02:36:10.149 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:10.152 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:36:10.217 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:36:19.573 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:36:19.615 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:36:19.615 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:36:21.669 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:36:21.669 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:36:21.669 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:36:12.366
2015-12-07 02:36:21.669 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:36:21.761 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:36:21.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:21.813 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 02:36:21.813 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:36:21.919 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:21.920 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:21.920 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorMale"/[399,285]>
2015-12-07 02:36:21.921 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:21.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:21.998 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:22.011 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:22.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorMale"/[399,285]>
2015-12-07 02:36:25.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:25.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:25.991 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 02:36:25.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:26.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:26.110 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:26.110 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 8}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:26.111 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-07 02:36:26.111 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:26.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:26.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:26.180 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:26.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-07 02:36:28.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:28.130 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:28.154 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:36:28.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:28.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:28.433 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:28.433 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:28.434 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1014]>
2015-12-07 02:36:28.435 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:28.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:28.510 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:28.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:28.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1014]>
2015-12-07 02:36:30.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:30.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:30.606 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:36:30.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:30.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:30.737 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:30.738 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:30.739 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:36:30.739 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:30.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:30.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:30.828 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:30.829 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:36:32.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:32.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:32.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:36:32.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:32.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:33.032 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:33.032 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:33.034 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1158]>
2015-12-07 02:36:33.034 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:33.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:33.103 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:33.114 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:33.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1158]>
2015-12-07 02:36:35.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:35.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:35.176 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:36:35.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:35.255 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:35.313 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:35.314 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:35.315 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,821]>
2015-12-07 02:36:35.315 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:35.315 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:35.384 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:35.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:35.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,821]>
2015-12-07 02:36:37.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:37.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:37.457 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:36:37.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:37.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:37.630 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:37.630 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:37.632 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[755,692]>
2015-12-07 02:36:37.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:37.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:37.708 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:37.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:37.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[755,692]>
2015-12-07 02:36:40.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:40.347 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:40.362 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:40.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:40.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:40.525 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:40.525 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:40.526 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,821]>
2015-12-07 02:36:40.526 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:40.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:40.600 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:40.623 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:40.623 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,821]>
2015-12-07 02:36:42.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:42.685 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:42.705 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:36:42.705 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:42.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:42.846 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:42.846 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 60}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:42.847 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:36:42.848 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:42.848 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:42.919 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:42.932 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:42.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-07 02:36:44.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:44.991 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:45.011 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:36:45.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:45.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:45.165 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:45.165 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 60}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:45.166 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSettings"/[33,123]>
2015-12-07 02:36:45.166 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:45.166 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:45.240 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:45.252 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:45.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSettings"/[33,123]>
2015-12-07 02:36:47.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:47.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:47.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:47.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:47.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:47.300 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:47.300 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 71}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:47.302 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSave"/[400,64]>
2015-12-07 02:36:47.302 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:47.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:47.375 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:47.397 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:47.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSave"/[400,64]>
2015-12-07 02:36:49.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:49.230 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:49.245 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:49.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:49.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:49.414 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:49.415 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:49.416 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:36:49.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:49.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:49.496 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:49.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:49.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,1158]>
2015-12-07 02:36:51.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:51.557 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:51.579 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:36:51.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:51.680 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:51.744 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:51.745 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 60}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:51.746 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-07 02:36:51.746 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:51.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:51.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:51.841 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:51.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-07 02:36:56.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:56.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:56.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 02:36:56.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:56.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:56.630 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:56.630 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 27}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:56.631 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[401,489]>
2015-12-07 02:36:56.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:56.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:36:56.711 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:56.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:56.728 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[401,489]>
2015-12-07 02:36:58.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:36:58.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:36:58.618 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:36:58.618 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:36:58.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:36:58.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:36:58.738 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:36:58.739 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:36:58.739 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   24 <ExplAct Reset app>
2015-12-07 02:36:58.740 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:36:58.740 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-07 02:37:24.703 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:37:24.706 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:37:24.776 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:37:34.476 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:37:34.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:37:34.526 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:37:36.585 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:37:36.585 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:37:36.585 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:37:27.256
2015-12-07 02:37:36.585 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:37:36.662 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:37:36.662 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:37:36.713 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 02:37:36.713 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:37:36.821 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:37:36.821 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:37:36.822 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:37:36.822 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:37:36.822 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-07 02:37:36.822 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:37:36.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:37:36.907 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:37:36.908 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:37:36.908 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.CartoonAvatar.PhotoMaker}
2015-12-07 02:37:37.770 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:37:37.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:37:37.847 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:37:37.847 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:37:37.912 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:37:37.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-07 02:37:58.689 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.cleanmaster.mguard_v5.8.3-inlined.apk, device)
2015-12-07 02:37:58.689 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.cleanmaster.mguard
2015-12-07 02:38:24.207 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:38:24.210 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:38:24.284 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:38:40.379 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:38:40.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:38:40.417 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:39:03.015 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 02:39:19.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-07 02:39:19.499 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.contextlogic.geek
2015-12-07 02:39:44.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:39:44.973 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:39:45.037 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:40:01.161 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:40:01.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:40:01.204 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:40:03.247 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:40:03.247 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:40:03.247 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:39:46.896
2015-12-07 02:40:03.247 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:40:03.320 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:40:03.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:40:03.376 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 02:40:03.376 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:40:03.658 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-07 02:40:03.659 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.geek. Widgets# 55}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:40:03.659 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[136,62]>
2015-12-07 02:40:03.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-07 02:40:03.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:40:03.731 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:40:03.750 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:40:03.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[136,62]>
2015-12-07 02:42:13.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:42:13.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:42:13.983 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:42:13.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:42:14.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:42:14.221 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-07 02:42:14.222 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.geek. Widgets# 53}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:42:14.222 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:42:14.222 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:42:14.223 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-07 02:42:14.223 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:42:14.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:42:14.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:42:14.307 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:42:14.307 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.contextlogic.geek}
2015-12-07 02:42:15.236 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:42:15.312 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:42:15.315 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:42:15.315 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:42:15.380 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:42:15.447 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-07 02:42:32.146 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-07 02:42:32.146 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.contextlogic.wish
2015-12-07 02:42:59.609 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:42:59.612 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:42:59.676 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:43:15.785 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:43:15.829 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:43:15.829 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:43:17.868 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:43:17.868 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:43:17.868 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:43:01.696
2015-12-07 02:43:17.868 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:43:17.951 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:43:17.951 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:43:18.002 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 02:43:18.002 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:43:18.197 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-07 02:43:18.197 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.wish. Widgets# 47}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:43:18.198 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[662,225]>
2015-12-07 02:43:18.198 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-07 02:43:18.198 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:43:18.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:43:18.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:43:18.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[662,225]>
2015-12-07 02:45:27.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:45:27.328 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:45:27.348 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:45:27.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:45:27.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:45:27.557 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-07 02:45:27.558 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.wish. Widgets# 47}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:45:27.558 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:45:27.558 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:45:27.559 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-07 02:45:27.559 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:45:27.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:45:27.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:45:27.641 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:45:27.641 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.contextlogic.wish}
2015-12-07 02:45:28.567 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:45:28.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:45:28.642 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:45:28.642 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:45:28.706 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:45:28.772 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-07 02:45:44.710 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:45:44.710 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-07 02:46:10.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:10.372 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:46:10.444 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:46:24.263 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:46:24.302 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:46:24.302 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:46:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:46:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:46:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:46:12.246
2015-12-07 02:46:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:46:26.439 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:46:26.439 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:26.478 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:46:26.478 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:46:26.666 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:46:26.666 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 72}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:46:26.667 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_about"/[211,952]>
2015-12-07 02:46:26.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:46:26.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:46:26.733 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:26.747 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:46:26.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_about"/[211,952]>
2015-12-07 02:46:28.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:46:28.789 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:28.808 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:46:28.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:46:28.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:46:28.903 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:46:28.904 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 9}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:46:28.904 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[399,1175]>
2015-12-07 02:46:28.905 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:46:28.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:46:28.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:28.987 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:46:28.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[399,1175]>
2015-12-07 02:46:31.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:46:31.080 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:31.095 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:46:31.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:46:31.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:46:31.278 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:46:31.279 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:46:31.279 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_map"/[589,627]>
2015-12-07 02:46:31.280 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:46:31.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:46:31.352 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:31.366 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:46:31.366 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_map"/[589,627]>
2015-12-07 02:46:32.695 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:46:32.695 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:46:32.729 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:46:32.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:46:34.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:46:34.923 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:46:34.923 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 10}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:46:34.923 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 02:46:34.924 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:46:34.924 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-07 02:47:01.229 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:01.233 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:47:01.298 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:47:16.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:47:16.102 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:47:16.102 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:47:18.138 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:47:18.138 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:47:18.138 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:47:03.836
2015-12-07 02:47:18.138 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:47:18.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:47:18.204 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:18.230 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:47:18.230 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:47:18.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:47:18.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 48}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:47:18.375 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_mylocation"/[589,302]>
2015-12-07 02:47:18.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:47:18.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:47:18.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:18.448 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:47:18.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_mylocation"/[589,302]>
2015-12-07 02:47:22.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:47:22.485 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:22.549 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-07 02:47:22.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:47:22.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:47:22.685 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:47:22.686 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 11}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:47:22.687 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[565,661]>
2015-12-07 02:47:22.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:47:22.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:47:22.765 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:22.781 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:47:22.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[565,661]>
2015-12-07 02:47:26.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:47:26.803 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:26.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:47:26.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:47:26.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:47:27.015 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:47:27.015 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.settings. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:47:27.016 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    8 <ExplAct Reset app>
2015-12-07 02:47:27.016 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:47:27.016 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-07 02:47:53.126 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:47:53.129 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:47:53.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:48:08.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:48:08.359 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:48:08.359 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:48:10.402 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:48:10.402 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:48:10.402 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:47:55.126
2015-12-07 02:48:10.402 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:48:10.477 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:48:10.477 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:10.507 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:48:10.507 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:48:10.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:48:10.670 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 51}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:48:10.670 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_mylocation"/[589,302]>
2015-12-07 02:48:10.671 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:48:10.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:48:10.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:10.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:10.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_mylocation"/[589,302]>
2015-12-07 02:48:13.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:48:13.892 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:13.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 02:48:13.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:48:13.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:48:14.065 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:48:14.065 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 11}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:48:14.067 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"No"/"android:id/button2"/[233,661]>
2015-12-07 02:48:14.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:48:14.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:48:14.143 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:14.166 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:14.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"No"/"android:id/button2"/[233,661]>
2015-12-07 02:48:16.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:48:16.147 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:16.164 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:16.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:48:16.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:48:16.411 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:48:16.412 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 81}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:48:16.413 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[364,1158]>
2015-12-07 02:48:16.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:48:16.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:48:16.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:16.499 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:16.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[364,1158]>
2015-12-07 02:48:20.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:48:20.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:20.683 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:20.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:48:20.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:48:20.841 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:48:20.841 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:48:20.842 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Share"/"com.devexpert.weather:id/menu_share"/[568,75]>
2015-12-07 02:48:20.842 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:48:20.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:48:20.911 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:20.923 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:48:20.923 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Share"/"com.devexpert.weather:id/menu_share"/[568,75]>
2015-12-07 02:48:22.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:48:22.258 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:48:22.273 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:48:22.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:48:24.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:48:24.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-07 02:48:24.527 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 49}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:48:24.532 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 02:48:24.532 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-07 02:48:24.532 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-07 02:48:50.685 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 02:48:58.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:48:58.440 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devuni.flashlight
2015-12-07 02:49:23.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:23.907 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:49:23.981 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:49:33.400 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:49:33.440 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:49:33.440 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:49:35.488 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:49:35.488 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:49:35.488 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:49:25.966
2015-12-07 02:49:35.488 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:49:35.565 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:49:35.565 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:35.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 02:49:35.600 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:49:35.724 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:35.725 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 29}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:35.726 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:35.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:35.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:35.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:35.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:35.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:38.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:38.723 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:38.742 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:38.742 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:38.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:38.874 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:38.874 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:38.875 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:38.875 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:38.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:38.951 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:38.964 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:38.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:41.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:41.154 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:41.170 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:41.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:41.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:41.286 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:41.286 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:41.287 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:41.287 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:41.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:41.349 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:41.367 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:41.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-07 02:49:43.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:43.300 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:43.315 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:43.315 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:43.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:43.491 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:43.491 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:43.492 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 02:49:43.493 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:43.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:43.552 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:43.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:43.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 02:49:45.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:45.440 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:45.458 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:45.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:45.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:45.593 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:45.593 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:45.594 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Spinner/""/""/[556,548]>
2015-12-07 02:49:45.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:45.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:45.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:45.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:45.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[556,548]>
2015-12-07 02:49:47.695 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:47.695 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:47.713 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:47.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:47.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:47.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:47.812 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 7}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:47.813 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckedTextView/"Reverse landscape"/"android:id/text1"/[548,865]>
2015-12-07 02:49:47.813 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:47.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:47.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:47.889 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:47.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Reverse landscape"/"android:id/text1"/[548,865]>
2015-12-07 02:49:50.224 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:50.224 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:50.242 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:50.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:50.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:50.380 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:50.380 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:50.381 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:49:50.381 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:50.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:50.457 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:50.472 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:50.472 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:49:53.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:53.919 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:53.940 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:49:53.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:54.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:54.077 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:54.078 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 13}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:54.078 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:49:54.079 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:54.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:54.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:54.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:54.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:49:56.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:49:56.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:56.434 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:56.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:49:56.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:49:56.572 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:49:56.573 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:49:56.574 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/""/""/[1216,150]>
2015-12-07 02:49:56.574 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:49:56.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:49:56.643 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:49:56.654 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:49:56.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1216,150]>
2015-12-07 02:50:01.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:01.230 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:01.242 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:01.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:01.358 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:01.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:01.423 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 54}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:01.424 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/""/""/[320,515]>
2015-12-07 02:50:01.424 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:01.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:01.489 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:01.501 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:01.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[320,515]>
2015-12-07 02:50:04.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:04.836 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:04.851 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:04.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:04.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:04.989 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:04.990 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:04.991 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"27°C"/""/[320,301]>
2015-12-07 02:50:04.991 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:04.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:05.063 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:05.081 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:05.081 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"27°C"/""/[320,301]>
2015-12-07 02:50:06.923 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:06.923 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:06.936 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:06.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:06.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:07.058 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:07.059 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:07.060 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"80°F"/""/[320,301]>
2015-12-07 02:50:07.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:07.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:07.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:07.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:07.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"80°F"/""/[320,301]>
2015-12-07 02:50:08.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:08.998 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:09.015 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:09.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:09.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:09.137 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:09.138 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:09.139 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:50:09.139 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:09.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:09.216 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:09.228 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:09.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-07 02:50:13.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:13.232 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:13.247 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:13.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:13.314 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:13.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:13.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:13.375 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[621,702]>
2015-12-07 02:50:13.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:13.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:13.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:13.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:13.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[621,702]>
2015-12-07 02:50:17.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:17.233 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:17.248 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:17.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:17.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:17.393 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:17.393 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 49}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:17.394 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:50:17.394 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 02:50:17.395 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:17.395 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devuni.flashlight
2015-12-07 02:50:43.455 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:43.458 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:50:43.521 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:50:53.294 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:50:53.328 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:50:53.328 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:50:55.366 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:50:55.366 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:50:55.366 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:50:45.346
2015-12-07 02:50:55.366 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:50:55.448 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:50:55.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:55.491 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 02:50:55.491 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:50:55.627 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:55.628 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 29}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:55.629 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-07 02:50:55.629 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:55.629 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:55.697 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:55.715 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:55.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-07 02:50:58.087 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:50:58.087 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:58.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:58.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:50:58.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:50:58.229 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:50:58.229 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:50:58.231 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:50:58.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:50:58.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:50:58.300 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:50:58.311 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:50:58.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:01.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:01.715 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:01.742 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:51:01.742 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:01.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:01.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:01.892 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 13}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:01.893 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:01.893 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:01.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:01.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:01.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:01.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:04.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:04.606 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:04.621 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:04.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:04.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:04.774 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:04.774 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:04.775 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:Button/""/""/[400,1004]>
2015-12-07 02:51:04.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:04.775 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:04.841 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:04.853 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:04.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[400,1004]>
2015-12-07 02:51:09.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:09.085 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:09.101 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:09.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:09.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:09.226 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:09.226 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:09.228 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:09.228 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:09.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:09.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:09.314 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:09.314 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:16.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:16.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:16.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:16.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:16.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:16.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:16.750 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 49}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:16.752 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-07 02:51:16.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:16.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:16.824 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:16.835 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:16.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-07 02:51:20.329 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:20.329 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:20.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:20.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:20.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:20.451 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:20.451 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:20.452 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 02:51:20.453 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:20.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:20.526 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:20.541 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:20.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-07 02:51:22.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:22.164 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:22.177 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:22.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:22.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:22.318 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:22.319 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:22.320 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:22.320 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:22.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:22.397 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:22.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:22.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-07 02:51:25.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:25.727 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:25.744 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:25.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:25.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:25.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:25.878 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 49}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:25.879 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-07 02:51:25.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:25.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:25.942 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:25.955 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:25.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-07 02:51:28.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:28.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:28.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:28.641 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:28.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:28.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:28.756 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:28.757 INFO  o.d.e.strategy.ExplorationStrategy         1m 53s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:Button/"OK"/""/[694,1155]>
2015-12-07 02:51:28.757 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:28.757 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:28.830 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:28.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:28.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/""/[694,1155]>
2015-12-07 02:51:32.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:32.591 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:32.607 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:32.607 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:32.718 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:32.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:32.782 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 54}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:32.784 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:View/""/""/[525,1171]>
2015-12-07 02:51:32.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:32.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:51:32.851 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:32.864 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:32.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[525,1171]>
2015-12-07 02:51:36.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:51:36.836 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:36.854 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:51:36.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:51:37.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:51:37.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:37.125 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:51:37.126 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:51:37.127 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:51:37.128 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-07 02:51:37.128 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:51:37.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:37.215 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:51:37.215 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:51:37.215 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.devuni.flashlight}
2015-12-07 02:51:38.667 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:51:38.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:51:38.740 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:51:38.740 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:51:43.710 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:51:43.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-07 02:51:58.763 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device)
2015-12-07 02:51:58.763 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dianxinos.dxbs
2015-12-07 02:52:24.287 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:52:24.291 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:52:24.357 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:52:40.512 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:52:40.556 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:52:40.557 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:52:42.615 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:52:42.615 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:52:42.615 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:52:26.246
2015-12-07 02:52:42.615 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:52:42.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:52:42.705 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:52:42.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 49
2015-12-07 02:52:42.807 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:52:42.927 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device) - DONE
2015-12-07 02:52:42.928 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dianxinos.dxbs. Widgets# 12}, DeviceLogs{apiLogs#=49, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:52:42.928 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.dianxinos.dxbs Widgets count = 12>
2015-12-07 02:52:42.929 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:52:42.929 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device)
2015-12-07 02:52:42.929 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:52:43.003 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:52:43.017 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:52:43.017 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:52:43.017 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.dianxinos.dxbs}
2015-12-07 02:52:43.978 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:52:44.070 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:52:44.074 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:52:44.074 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:52:44.177 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:52:44.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device) - DONE
2015-12-07 02:53:00.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:00.812 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-07 02:53:27.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:27.504 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:53:27.569 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:53:43.658 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:53:43.695 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:53:43.695 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:53:45.741 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:53:45.741 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:53:45.741 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:53:29.786
2015-12-07 02:53:45.741 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:53:45.814 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:53:45.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:45.855 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:53:45.855 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:53:46.017 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:46.017 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:46.018 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-07 02:53:46.018 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:46.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:46.095 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:46.107 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:46.107 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-07 02:53:48.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:48.216 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:48.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:48.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:48.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:48.395 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:48.395 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:48.396 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-07 02:53:48.396 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:48.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:48.467 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:48.480 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:48.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-07 02:53:50.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:50.982 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:50.998 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:50.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:51.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:51.378 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:51.378 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:51.379 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-07 02:53:51.379 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:51.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:51.440 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:51.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:51.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-07 02:53:53.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:53.344 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:53.359 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:53.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:53.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:53.490 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:53.490 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:53.491 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-07 02:53:53.491 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:53.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:53.571 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:53.585 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:53.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-07 02:53:54.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:54.936 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:54.956 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:54.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:55.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:55.071 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:55.071 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:55.072 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-07 02:53:55.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:55.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:55.147 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:55.159 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:55.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-07 02:53:57.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:57.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:57.537 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:57.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:57.623 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:57.685 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:57.686 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:57.686 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-07 02:53:57.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:57.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:53:57.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:57.778 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:57.778 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-07 02:53:59.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:53:59.818 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:53:59.839 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:53:59.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:53:59.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:53:59.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:53:59.979 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:53:59.980 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-07 02:53:59.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:53:59.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:00.057 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:00.071 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:00.071 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-07 02:54:02.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:02.940 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:02.978 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-07 02:54:02.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:04.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:04.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:04.387 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 66}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:04.388 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[122,70]>
2015-12-07 02:54:04.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:04.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:04.460 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:04.486 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:54:04.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[122,70]>
2015-12-07 02:54:06.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:06.864 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:06.894 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:54:06.894 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:07.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:07.085 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:07.085 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:07.086 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-07 02:54:07.087 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:07.087 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:07.159 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:07.176 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:07.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-07 02:54:09.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:09.073 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:09.111 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:54:09.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:09.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:09.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:09.239 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:09.240 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:54:09.240 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:09.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:09.309 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:09.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:09.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:54:11.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:11.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:11.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 02:54:11.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:11.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:11.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:11.354 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:11.355 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[199,368]>
2015-12-07 02:54:11.355 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:11.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:11.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:11.435 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 02:54:11.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[199,368]>
2015-12-07 02:54:12.763 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:12.763 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:12.838 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 02:54:12.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:14.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:14.120 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:14.121 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 72}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:14.121 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,848]>
2015-12-07 02:54:14.122 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:14.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:14.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:14.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:54:14.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,848]>
2015-12-07 02:54:16.035 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:16.035 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:16.052 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:16.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:17.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:17.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:17.133 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 72}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:17.134 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,754]>
2015-12-07 02:54:17.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:17.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:17.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:17.225 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:17.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,754]>
2015-12-07 02:54:18.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:18.569 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:18.602 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:54:18.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:18.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:18.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:18.705 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 29}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:18.706 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:54:18.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:18.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:54:18.775 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:18.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:54:18.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:54:23.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:54:23.569 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:23.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 02:54:23.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:54:23.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:54:23.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:54:23.889 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 69}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:54:23.889 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:54:23.889 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 02:54:23.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:54:23.890 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-07 02:54:49.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:54:49.871 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:54:49.938 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:55:05.453 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:55:05.493 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:55:05.493 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:55:07.530 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:55:07.530 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:55:07.530 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:54:52.066
2015-12-07 02:55:07.530 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:55:07.614 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:55:07.614 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:07.650 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:55:07.650 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:55:07.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:07.797 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:07.799 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-07 02:55:07.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:07.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:07.876 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:07.887 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:07.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-07 02:55:09.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:09.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:09.962 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:09.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:10.032 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:10.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:10.092 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:10.093 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-07 02:55:10.094 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:10.094 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:10.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:10.176 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:10.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-07 02:55:12.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:12.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:12.605 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:12.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:12.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:12.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:12.736 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:12.737 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-07 02:55:12.737 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:12.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:12.806 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:12.817 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:12.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-07 02:55:14.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:14.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:14.882 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:14.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:14.951 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:15.017 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:15.018 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:15.019 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,184]>
2015-12-07 02:55:15.019 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:15.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:15.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:15.102 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:15.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,184]>
2015-12-07 02:55:16.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:16.974 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:16.992 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:16.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:17.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:17.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:17.124 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:17.125 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:TextView/"I want to learn…"/"com.duolingo:id/bar_title"/[192,70]>
2015-12-07 02:55:17.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:17.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:17.199 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:17.212 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:17.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"I want to learn…"/"com.duolingo:id/bar_title"/[192,70]>
2015-12-07 02:55:20.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:20.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:20.670 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 02:55:20.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:20.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:20.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:20.788 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:20.789 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[43,70]>
2015-12-07 02:55:20.789 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:20.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:20.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:20.881 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:20.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[43,70]>
2015-12-07 02:55:22.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:22.211 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:22.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:55:22.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:23.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:23.681 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:23.681 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 71}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:23.682 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:55:23.683 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:23.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:23.754 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:23.782 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 02:55:23.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-07 02:55:25.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:25.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:25.647 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:25.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:25.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:25.807 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:25.807 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 71}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:25.808 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-07 02:55:25.809 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:25.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:25.879 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:25.895 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:25.896 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-07 02:55:28.114 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:28.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:28.150 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 02:55:28.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:28.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:28.300 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:28.300 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 35}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:28.301 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[401,140]>
2015-12-07 02:55:28.302 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:28.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:28.381 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:28.397 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:28.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[401,140]>
2015-12-07 02:55:30.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:30.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:30.504 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:30.504 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:30.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:30.653 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:30.653 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:30.654 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:TextView/"SIGN IN"/"com.duolingo:id/sign_in"/[400,776]>
2015-12-07 02:55:30.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:30.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:30.729 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:30.743 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:30.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"SIGN IN"/"com.duolingo:id/sign_in"/[400,776]>
2015-12-07 02:55:32.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:32.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:33.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:55:33.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:33.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:33.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:33.125 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:33.126 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,465]>
2015-12-07 02:55:33.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:33.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:33.202 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:33.218 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:33.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,465]>
2015-12-07 02:55:35.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:35.213 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:35.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:35.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:35.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:35.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:35.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:35.344 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-07 02:55:35.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:35.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:35.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:35.434 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:35.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-07 02:55:37.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:37.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:37.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:55:37.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:37.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:37.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:37.433 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:37.434 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.duolingo:id/fb_login_wrapper"/[581,1100]>
2015-12-07 02:55:37.434 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:37.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:37.509 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:37.522 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:37.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.duolingo:id/fb_login_wrapper"/[581,1100]>
2015-12-07 02:55:39.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:39.384 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:39.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:39.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:39.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:39.524 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:39.524 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:39.525 INFO  o.d.e.strategy.ExplorationStrategy         1m 53s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-07 02:55:39.525 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:39.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:55:39.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:39.605 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:55:39.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-07 02:55:42.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:55:42.191 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:55:42.226 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:55:42.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:55:42.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:55:42.372 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:55:42.372 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 35}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:55:42.373 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:55:42.373 INFO  o.d.e.strategy.ExplorationStrategy         1m 56s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-07 02:55:42.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:55:42.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-07 02:56:08.235 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:56:08.238 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:56:08.307 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:56:24.415 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:56:24.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:56:24.456 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:56:26.506 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:56:26.506 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:56:26.506 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:56:10.566
2015-12-07 02:56:26.506 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:56:26.598 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:56:26.598 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:56:26.649 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:56:26.649 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:56:26.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:56:26.797 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:56:26.798 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 02:56:26.798 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 02:56:26.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-07 02:56:26.799 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 02:56:26.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:56:26.880 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:56:26.880 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 02:56:26.880 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.duolingo}
2015-12-07 02:56:27.837 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 02:56:27.908 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:56:27.911 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:56:27.911 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 02:56:27.971 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 02:56:28.042 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-07 02:56:42.317 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:56:42.317 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-07 02:57:07.894 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:07.897 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:57:07.968 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:57:24.257 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:57:24.294 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:57:24.294 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:57:26.346 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:57:26.346 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:57:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:57:09.796
2015-12-07 02:57:26.347 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:57:26.413 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:57:26.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:26.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 02:57:26.468 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:57:26.796 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:26.796 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:26.797 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:26.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:26.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:26.854 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:26.865 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:26.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:29.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:29.640 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:29.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:57:29.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:29.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:30.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:30.026 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:30.027 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-07 02:57:30.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:30.027 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:30.099 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:30.112 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:30.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-07 02:57:32.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:32.457 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:32.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:32.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:33.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:33.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:33.366 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 157}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:33.368 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,545]>
2015-12-07 02:57:33.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:33.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:33.445 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:33.458 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:33.459 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,545]>
2015-12-07 02:57:36.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:36.355 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:36.373 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:36.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:36.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:36.603 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:36.604 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 84}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:36.605 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1045]>
2015-12-07 02:57:36.605 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:36.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:36.680 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:36.696 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:36.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1045]>
2015-12-07 02:57:38.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:38.734 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:38.751 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:38.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:38.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:38.931 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:38.932 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 81}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:38.933 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:38.933 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:38.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:39.006 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:39.025 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:39.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:41.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:41.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:41.648 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 02:57:41.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:41.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:41.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:41.978 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:41.979 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[352,303]>
2015-12-07 02:57:41.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:41.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:42.050 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:42.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:42.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[352,303]>
2015-12-07 02:57:44.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:44.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:44.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:44.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:44.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:44.362 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:44.363 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:44.364 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,402]>
2015-12-07 02:57:44.364 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:44.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:44.435 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:44.449 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:44.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,402]>
2015-12-07 02:57:46.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:46.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:46.521 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:57:46.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:46.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:46.713 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:46.713 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:46.714 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,885]>
2015-12-07 02:57:46.715 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:46.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:46.786 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:46.799 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:46.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,885]>
2015-12-07 02:57:48.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:48.897 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:48.916 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:57:48.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:49.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:49.097 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:49.097 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:49.098 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:GridView/""/"com.dynamixsoftware.printhand:id/images"/[544,303]>
2015-12-07 02:57:49.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:49.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:49.175 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:49.190 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:49.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/"com.dynamixsoftware.printhand:id/images"/[544,303]>
2015-12-07 02:57:50.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:50.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:50.669 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:50.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:50.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:50.856 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:50.856 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:50.858 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-07 02:57:50.858 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:50.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:50.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:50.939 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:50.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-07 02:57:53.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:53.174 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:53.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:57:53.198 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:53.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:53.346 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:53.347 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:53.348 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-07 02:57:53.348 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:53.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:53.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:53.434 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:53.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-07 02:57:55.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:55.289 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:55.305 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:55.305 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:55.378 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:55.435 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:55.435 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:55.437 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:55.437 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:55.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:55.508 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:55.521 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:55.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-07 02:57:57.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:57:57.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:57.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:57.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:57:58.189 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:57:58.256 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:57:58.257 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:57:58.258 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:CheckedTextView/"Gallery"/"com.dynamixsoftware.printhand:id/text"/[497,241]>
2015-12-07 02:57:58.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:57:58.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:57:58.331 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:57:58.347 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:57:58.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Gallery"/"com.dynamixsoftware.printhand:id/text"/[497,241]>
2015-12-07 02:58:00.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:00.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:00.284 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:00.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:00.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:00.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:00.459 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:00.461 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:CheckedTextView/"Gmail"/"com.dynamixsoftware.printhand:id/text"/[497,511]>
2015-12-07 02:58:00.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:00.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:00.537 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:00.549 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:00.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Gmail"/"com.dynamixsoftware.printhand:id/text"/[497,511]>
2015-12-07 02:58:02.498 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:02.498 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:02.513 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:02.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:02.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:02.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:02.726 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:02.728 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:58:02.728 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 02:58:02.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:02.728 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-07 02:58:28.494 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:28.496 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:58:28.561 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 02:58:44.070 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 02:58:44.118 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 02:58:44.119 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 02:58:46.169 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 02:58:46.169 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 02:58:46.169 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:58:30.306
2015-12-07 02:58:46.169 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 02:58:46.256 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 02:58:46.256 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:46.310 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 02:58:46.310 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 02:58:46.671 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:46.673 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:46.674 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1156]>
2015-12-07 02:58:46.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:46.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:46.731 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:46.741 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:46.742 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1156]>
2015-12-07 02:58:48.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:48.939 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:48.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:58:48.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:49.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:49.101 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:49.101 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:49.102 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-07 02:58:49.103 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:49.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:49.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:49.193 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:49.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-07 02:58:51.330 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:51.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:51.349 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:58:51.349 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:51.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:51.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:51.512 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:51.517 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,670]>
2015-12-07 02:58:51.517 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:51.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:51.585 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:51.596 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:51.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,670]>
2015-12-07 02:58:53.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:53.657 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:53.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:53.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:53.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:53.848 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:53.849 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:53.850 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:58:53.850 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:53.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:53.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:53.934 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:53.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:58:55.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:55.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:55.843 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:58:55.843 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:55.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:55.963 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:55.964 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:55.965 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[556,70]>
2015-12-07 02:58:55.965 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:55.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:56.040 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:56.057 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:56.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[556,70]>
2015-12-07 02:58:58.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:58:58.246 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:58.266 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 02:58:58.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:58:58.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:58:58.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:58:58.460 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 56}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:58:58.461 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-07 02:58:58.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:58:58.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:58:58.537 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:58:58.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:58:58.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-07 02:59:00.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:00.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:00.628 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:00.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:00.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:00.742 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:00.742 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:00.743 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[648,209]>
2015-12-07 02:59:00.743 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:00.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:00.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:00.830 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:00.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[648,209]>
2015-12-07 02:59:03.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:03.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:03.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 02:59:03.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:03.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:03.175 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:03.176 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 9}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:03.177 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:59:03.177 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:03.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:03.250 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:03.263 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:03.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:59:05.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:05.150 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:05.171 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:59:05.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:05.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:05.342 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:05.342 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 56}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:05.343 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,563]>
2015-12-07 02:59:05.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:05.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:05.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:05.434 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:05.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,563]>
2015-12-07 02:59:07.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:07.447 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:07.462 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:07.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:07.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:07.653 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:07.654 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:07.655 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,724]>
2015-12-07 02:59:07.655 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:07.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:07.728 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:07.743 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:07.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,724]>
2015-12-07 02:59:09.843 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:09.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:09.860 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:09.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:09.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:09.968 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:09.968 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:09.969 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,773]>
2015-12-07 02:59:09.970 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:09.970 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:10.049 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:10.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:10.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,773]>
2015-12-07 02:59:11.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:11.934 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:11.950 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:11.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:12.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:12.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:12.154 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:12.157 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-07 02:59:12.157 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:12.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:12.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:12.245 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:12.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-07 02:59:14.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:14.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:14.311 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:14.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:14.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:14.421 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:14.421 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:14.423 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.dynamixsoftware.printhand:id/root"/[400,619]>
2015-12-07 02:59:14.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:14.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:14.492 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:14.505 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:14.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.dynamixsoftware.printhand:id/root"/[400,619]>
2015-12-07 02:59:16.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:16.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:16.397 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:16.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:16.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:16.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:16.587 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:16.588 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:59:16.588 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:16.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 02:59:16.650 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:16.669 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 02:59:16.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-07 02:59:18.002 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 02:59:18.002 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:18.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 02:59:18.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 02:59:18.071 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 02:59:18.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 02:59:18.135 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 02:59:18.136 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 02:59:18.136 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-07 02:59:18.136 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 02:59:18.136 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-07 02:59:44.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 02:59:44.139 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 02:59:44.202 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:00:00.866 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:00:00.919 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:00:00.919 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:00:02.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:00:02.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:00:02.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T02:59:46.396
2015-12-07 03:00:02.974 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:00:03.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:00:03.066 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:00:03.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 03:00:03.121 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:00:03.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 03:00:03.511 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:00:03.512 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:00:03.512 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:00:03.513 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-07 03:00:03.513 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:00:03.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:00:03.605 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:00:03.605 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:00:03.605 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.dynamixsoftware.printhand}
2015-12-07 03:00:04.467 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:00:04.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:00:04.544 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:00:04.544 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:00:04.600 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:00:04.665 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-07 03:00:17.882 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:00:17.882 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-07 03:00:44.656 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:00:44.660 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:00:44.724 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:01:00.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:01:00.831 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:01:00.832 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:01:02.891 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:01:02.891 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:01:02.891 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:00:46.556
2015-12-07 03:01:02.891 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:01:02.975 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:01:02.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:03.041 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 03:01:03.041 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:01:03.147 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:01:03.147 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:01:03.148 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-07 03:01:03.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:01:03.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:01:03.207 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:03.219 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:03.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-07 03:01:05.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:01:05.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:05.310 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:05.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:01:05.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:01:05.577 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:01:05.578 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:01:05.578 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-07 03:01:05.579 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:01:05.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:01:05.650 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:05.662 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:05.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-07 03:01:07.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:01:07.542 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:07.557 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:07.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:01:07.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:01:07.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:01:07.779 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:01:07.779 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-07 03:01:07.780 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:01:07.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:01:07.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:07.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:07.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-07 03:01:09.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:01:09.767 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:09.784 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:09.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:01:09.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:01:09.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:01:09.984 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:01:09.985 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-07 03:01:09.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:01:09.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:01:10.058 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:10.075 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:01:10.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-07 03:01:13.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:01:13.483 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:13.499 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:01:13.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:01:13.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:01:13.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:01:13.891 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:01:13.892 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-07 03:01:13.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:01:13.892 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-07 03:01:42.947 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:01:42.949 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:01:43.024 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:01:59.109 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:01:59.147 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:01:59.147 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:02:01.198 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:02:01.198 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:02:01.199 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:01:45.146
2015-12-07 03:02:01.199 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:02:01.276 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:02:01.276 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:01.341 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 28
2015-12-07 03:02:01.341 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:02:01.447 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:01.448 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=28, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:01.448 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-07 03:02:01.449 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:01.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:01.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:01.531 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:01.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-07 03:02:04.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:04.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:04.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 03:02:04.184 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:04.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:04.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:04.316 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 15}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:04.317 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-07 03:02:04.317 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:04.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:04.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:04.400 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:04.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-07 03:02:06.304 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:06.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:06.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:06.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:06.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:06.753 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:06.753 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 127}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:06.754 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-07 03:02:06.754 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:06.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:06.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:06.838 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:06.838 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-07 03:02:09.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:09.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:09.272 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:02:09.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:09.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:09.405 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:09.405 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 29}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:09.406 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-07 03:02:09.407 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:09.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:09.478 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:09.494 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:09.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-07 03:02:11.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:11.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:11.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:02:11.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:15.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:15.523 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:15.524 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 161}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:15.525 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1201]>
2015-12-07 03:02:15.525 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:15.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:15.595 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:15.634 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 03:02:15.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1201]>
2015-12-07 03:02:17.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:17.647 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:17.664 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:02:17.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:17.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:17.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:17.900 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 183}, DeviceLogs{apiLogs#=19, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:17.901 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[580,1171]>
2015-12-07 03:02:17.901 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:17.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:02:17.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:17.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:02:17.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[580,1171]>
2015-12-07 03:02:22.192 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:02:22.192 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:22.222 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:02:22.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:02:22.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:02:22.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:02:22.376 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 27}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:02:22.376 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 03:02:22.377 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:02:22.377 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-07 03:02:50.959 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:02:50.964 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:02:51.019 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:03:07.186 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:03:07.234 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:03:07.234 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:03:09.285 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:03:09.285 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:03:09.286 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:02:52.966
2015-12-07 03:03:09.286 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:03:09.356 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:03:09.356 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:03:09.420 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-07 03:03:09.421 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:03:09.548 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:03:09.549 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:03:09.549 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:03:09.550 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:03:09.550 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-07 03:03:09.550 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:03:09.609 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:03:09.626 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:03:09.626 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:03:09.626 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ebay.kleinanzeigen}
2015-12-07 03:03:10.554 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:03:10.613 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:03:10.616 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:03:10.616 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:03:10.667 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:03:10.736 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-07 03:03:32.629 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:03:32.629 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-07 03:03:58.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:03:58.024 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:03:58.082 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:04:14.162 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:04:14.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:04:14.200 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:04:16.258 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:04:16.258 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:04:16.258 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:03:59.906
2015-12-07 03:04:16.258 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:04:16.343 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:04:16.343 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:16.397 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 03:04:16.397 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:04:16.582 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:16.583 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 48}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:16.583 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-07 03:04:16.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:16.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:16.658 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:16.672 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:16.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-07 03:04:19.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:19.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:19.438 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:04:19.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:19.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:19.576 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:19.576 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:19.577 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-07 03:04:19.577 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:19.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:19.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:19.674 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:04:19.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-07 03:04:22.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:22.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:22.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:04:22.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:22.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:22.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:22.674 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 17}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:22.675 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-07 03:04:22.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:22.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:22.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:22.770 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:22.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-07 03:04:24.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:24.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:24.974 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:04:24.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:25.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:25.097 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:25.098 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:25.099 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-07 03:04:25.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:25.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:25.180 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:25.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:25.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-07 03:04:26.528 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:26.528 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:26.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:26.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:26.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:26.666 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:26.666 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:26.667 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-07 03:04:26.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:26.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:26.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:26.751 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:26.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-07 03:04:28.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:28.871 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:28.890 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:28.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:28.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:29.008 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:29.008 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:29.009 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-07 03:04:29.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:29.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:29.081 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:29.093 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:29.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-07 03:04:32.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:32.280 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:32.308 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:04:32.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:32.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:32.460 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:32.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 54}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:32.461 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 03:04:32.462 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:32.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:32.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:32.544 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:32.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 03:04:34.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:34.553 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:34.568 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:34.568 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:34.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:34.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:34.669 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:34.670 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-07 03:04:34.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:34.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:34.745 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:34.760 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:34.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-07 03:04:37.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:37.309 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:37.344 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:04:37.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:37.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:37.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:37.599 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 49}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:37.600 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-07 03:04:37.600 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:37.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:37.672 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:37.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:37.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-07 03:04:40.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:40.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:40.488 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:04:40.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:40.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:40.625 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:40.625 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:40.626 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-07 03:04:40.626 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:40.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:40.703 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:40.716 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:40.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-07 03:04:42.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:42.550 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:42.565 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:42.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:42.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:42.686 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:42.687 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:42.688 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-07 03:04:42.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:42.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:42.766 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:42.780 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:42.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-07 03:04:44.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:44.633 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:44.651 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:44.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:44.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:44.779 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:44.779 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:44.780 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-07 03:04:44.780 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:44.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:44.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:44.875 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:44.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-07 03:04:46.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:46.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:46.993 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:46.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:47.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:47.116 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:47.116 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:47.117 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-07 03:04:47.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:47.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:47.192 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:47.205 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:47.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-07 03:04:49.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:49.393 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:49.414 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:04:49.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:49.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:49.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:49.518 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 17}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:49.519 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[62,70]>
2015-12-07 03:04:49.519 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:49.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:04:49.580 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:49.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:04:49.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[62,70]>
2015-12-07 03:04:51.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:04:51.525 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:04:51.540 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:04:51.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:04:51.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:04:51.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-07 03:04:51.667 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:04:51.668 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:04:51.668 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:04:51.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-07 03:04:51.669 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-07 03:05:19.026 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:05:30.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:05:30.591 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebayschnppchen
2015-12-07 03:05:56.057 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:05:56.061 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:05:56.144 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:06:09.656 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:06:09.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:06:09.692 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:06:11.740 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:06:11.740 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:06:11.740 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:05:57.836
2015-12-07 03:06:11.740 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:06:11.832 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:06:11.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:12.022 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 59
2015-12-07 03:06:12.022 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:06:12.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:12.706 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 107}, DeviceLogs{apiLogs#=59, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:12.707 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,1006]>
2015-12-07 03:06:12.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:12.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:12.778 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:12.795 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:06:12.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,1006]>
2015-12-07 03:06:25.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:25.009 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:25.038 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:06:25.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:25.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:25.696 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:25.696 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 212}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:25.697 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[525,613]>
2015-12-07 03:06:25.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:25.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:25.764 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:25.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:25.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[525,613]>
2015-12-07 03:06:34.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:34.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:34.080 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:06:34.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:34.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:34.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:34.670 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 132}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:34.671 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[211,1053]>
2015-12-07 03:06:34.671 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:34.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:34.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:34.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:34.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[211,1053]>
2015-12-07 03:06:36.792 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:36.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:36.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:36.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:36.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:37.008 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:37.008 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 132}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:37.009 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_refresh"/[672,70]>
2015-12-07 03:06:37.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:37.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:37.073 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:37.085 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:37.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_refresh"/[672,70]>
2015-12-07 03:06:45.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:45.469 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:45.486 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:45.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:45.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:45.834 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:45.834 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 137}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:45.835 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[64,981]>
2015-12-07 03:06:45.836 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:45.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:45.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:45.916 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:45.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[64,981]>
2015-12-07 03:06:47.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:47.820 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:47.836 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:47.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:47.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:48.041 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:48.042 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 137}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:48.043 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[399,828]>
2015-12-07 03:06:48.043 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:48.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:48.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:48.127 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:48.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,828]>
2015-12-07 03:06:50.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:50.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:50.034 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:50.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:50.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:50.207 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:50.208 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 137}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:50.209 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[212,1030]>
2015-12-07 03:06:50.209 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:50.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:50.281 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:50.295 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:50.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[212,1030]>
2015-12-07 03:06:52.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:52.262 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:52.273 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:52.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:52.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:52.466 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:52.466 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 137}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:52.470 INFO  o.d.e.strategy.ExplorationStrategy         0m 39s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 03:06:52.470 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:52.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:52.537 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:52.560 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:52.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 03:06:54.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:54.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:54.579 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:54.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:54.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:54.681 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:54.681 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:54.682 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,172]>
2015-12-07 03:06:54.682 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:54.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:54.757 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:54.770 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:54.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,172]>
2015-12-07 03:06:56.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:56.311 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:56.327 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:56.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:56.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:56.415 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:56.416 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:56.416 INFO  o.d.e.strategy.ExplorationStrategy         0m 43s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-07 03:06:56.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:56.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:56.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:56.500 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:56.500 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-07 03:06:57.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:06:57.837 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:57.856 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:57.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:06:58.087 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:06:58.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:06:58.161 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 137}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:06:58.162 INFO  o.d.e.strategy.ExplorationStrategy         0m 45s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[754,141]>
2015-12-07 03:06:58.162 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:06:58.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:06:58.234 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:06:58.245 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:06:58.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[754,141]>
2015-12-07 03:07:05.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:07:05.611 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:05.627 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:07:05.627 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:07:05.731 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:07:05.801 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:07:05.801 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 87}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:07:05.802 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[400,922]>
2015-12-07 03:07:05.802 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:07:05.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:07:05.884 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:05.899 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:07:05.899 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,922]>
2015-12-07 03:07:09.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:07:09.152 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:09.169 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:07:09.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:07:09.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:07:09.357 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:07:09.357 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 88}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:07:09.359 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_cancel"/[672,70]>
2015-12-07 03:07:09.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:07:09.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:07:09.431 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:09.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:07:09.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_cancel"/[672,70]>
2015-12-07 03:07:14.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:07:14.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:14.229 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:07:14.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:07:15.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:07:15.226 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:07:15.227 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 381}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:07:15.229 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[616,867]>
2015-12-07 03:07:15.229 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:07:15.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:07:15.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:15.322 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:07:15.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[616,867]>
2015-12-07 03:07:18.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:07:18.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:18.166 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:07:18.166 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:07:18.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:07:18.490 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:07:18.490 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 382}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:07:18.496 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:07:18.496 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:07:18.496 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:07:18.496 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebayschnppchen
2015-12-07 03:07:44.575 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:07:44.578 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:07:44.643 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:07:58.694 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:07:58.729 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:07:58.729 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:08:00.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:08:00.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:08:00.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:07:46.916
2015-12-07 03:08:00.778 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:08:00.861 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:08:00.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:01.053 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 57
2015-12-07 03:08:01.053 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:08:01.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:08:01.977 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 107}, DeviceLogs{apiLogs#=57, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:08:01.979 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,532]>
2015-12-07 03:08:01.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:08:01.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:08:02.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:02.080 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:08:02.081 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,532]>
2015-12-07 03:08:13.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:08:13.637 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:13.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:08:13.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:08:14.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:08:14.507 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:08:14.507 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 264}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:08:14.509 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:08:14.509 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:08:14.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-07 03:08:14.509 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:08:14.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:14.587 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:08:14.587 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:08:14.587 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ebayschnppchen}
2015-12-07 03:08:16.153 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:08:16.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:16.233 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:08:16.233 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:08:16.280 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:08:16.351 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-07 03:08:31.744 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:08:31.744 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.evgit.sochi2014olympics
2015-12-07 03:08:57.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:08:57.131 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:08:57.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:09:10.974 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:09:11.016 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:09:11.016 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:09:13.062 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:09:13.062 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:09:13.062 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:08:58.996
2015-12-07 03:09:13.062 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:09:13.149 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:09:13.149 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:13.216 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:09:13.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:09:13.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:13.368 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:13.369 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:13.369 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:13.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:13.444 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:13.457 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:13.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:15.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:15.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:15.341 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:15.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:15.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:15.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:15.468 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:15.468 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:15.468 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:15.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:15.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:15.569 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:15.570 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:18.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:18.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:18.740 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:18.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:18.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:18.883 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:18.884 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:18.884 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:18.885 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:18.885 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:18.955 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:18.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:18.972 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:21.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:21.517 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:21.537 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:21.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:21.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:21.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:21.668 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:21.668 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:21.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:21.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:21.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:21.757 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:21.757 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:23.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:23.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:23.119 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:23.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:23.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:23.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:23.235 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:23.236 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:23.236 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:23.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:23.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:23.334 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:23.335 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:26.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:26.508 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:26.526 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:26.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:26.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:26.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:26.670 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:26.671 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:26.671 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:26.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:26.749 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:26.770 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:26.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:28.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:28.126 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:28.144 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:28.144 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:28.189 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:28.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:28.261 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:28.261 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:28.262 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:28.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:28.341 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:28.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:28.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:29.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:29.699 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:29.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:29.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:29.772 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:29.845 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:29.846 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:29.847 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:29.847 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:29.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:29.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:29.942 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:29.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:33.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:33.110 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:33.128 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:33.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:33.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:33.259 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:33.260 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:33.260 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:33.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:33.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:33.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:33.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:33.346 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:34.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:34.701 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:34.724 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:34.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:34.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:34.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:34.857 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:34.858 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:34.858 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:34.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:34.935 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:34.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:34.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:36.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:36.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:36.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:36.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:36.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:36.453 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:36.454 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:36.454 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   12 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:36.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:36.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:36.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:36.546 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:36.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:39.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:39.845 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:39.862 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:39.862 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:39.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:39.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:39.995 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:39.995 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:39.996 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:39.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:40.073 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:40.090 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:40.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:41.437 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:41.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:41.466 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:09:41.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:41.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:41.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:41.595 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:41.595 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:41.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:41.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:41.680 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:41.699 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:41.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:43.045 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:43.045 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:43.065 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:09:43.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:43.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:43.197 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:43.197 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:43.198 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   15 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:43.198 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:43.198 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:09:43.274 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:43.288 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:43.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:09:46.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:09:46.600 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:09:46.621 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:09:46.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:09:46.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:09:46.731 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:09:46.731 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:09:46.731 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:09:46.731 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:09:46.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:09:46.732 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.evgit.sochi2014olympics
2015-12-07 03:10:12.723 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:12.726 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:10:12.803 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:10:25.311 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:10:25.344 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:10:25.345 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:10:27.380 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:10:27.380 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:10:27.380 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:10:14.716
2015-12-07 03:10:27.380 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:10:27.450 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:10:27.451 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:27.487 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:10:27.487 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:10:49.291 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:10:49.291 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:10:49.292 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:49.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:10:49.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:10:49.370 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:49.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:10:49.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:50.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:10:50.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:50.782 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:50.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:10:50.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:10:50.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:10:50.892 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:10:50.892 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:50.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:10:50.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:10:50.963 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:50.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:50.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:52.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:10:52.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:52.335 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:52.335 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:10:52.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:10:52.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:10:52.444 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:10:52.445 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   19 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:52.445 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:10:52.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:10:52.515 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:52.527 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:52.527 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:56.759 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:10:56.759 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:56.779 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:56.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:10:56.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:10:56.903 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:10:56.904 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:10:56.904 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:56.904 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:10:56.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:10:56.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:56.988 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:56.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:58.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:10:58.327 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:58.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:58.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:10:58.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:10:58.465 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:10:58.465 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:10:58.466 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:58.466 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:10:58.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:10:58.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:58.551 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:58.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:10:59.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:10:59.891 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:10:59.907 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:10:59.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:10:59.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:00.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:00.026 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:00.027 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   22 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:00.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:00.027 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:00.099 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:00.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:00.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:03.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:03.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:03.026 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:03.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:03.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:03.137 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:03.137 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:03.138 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:03.138 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:03.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:03.207 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:03.219 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:03.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:04.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:04.560 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:04.577 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:04.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:04.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:04.682 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:04.683 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:04.683 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:04.684 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:04.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:04.757 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:04.772 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:04.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:06.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:06.110 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:06.125 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:06.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:06.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:06.245 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:06.245 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:06.246 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   25 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:06.246 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:06.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:06.315 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:06.332 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:06.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:09.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:09.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:09.246 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:09.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:09.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:09.367 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:09.367 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:09.368 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:09.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:09.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:09.439 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:09.451 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:09.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:10.792 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:10.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:10.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:10.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:10.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:10.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:10.946 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:10.947 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:10.947 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:10.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:11:11.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:11.037 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:11.037 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-07 03:11:13.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:11:13.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:13.592 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:13.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:11:13.624 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:11:13.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:13.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:11:13.698 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:11:13.698 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:11:13.699 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-07 03:11:13.699 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:11:13.772 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:13.785 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:11:13.785 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:11:13.785 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.evgit.sochi2014olympics}
2015-12-07 03:11:15.187 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:11:15.259 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:15.263 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:11:15.263 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:11:15.320 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:11:15.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-07 03:11:26.465 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:11:26.465 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-07 03:11:51.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:11:51.948 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:11:52.007 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:12:06.953 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:12:06.992 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:12:06.992 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:12:09.041 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:12:09.041 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:12:09.041 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:11:54.416
2015-12-07 03:12:09.041 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:12:09.132 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:12:09.132 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:09.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 48
2015-12-07 03:12:09.235 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:12:09.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:12:09.368 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=48, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:12:09.369 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:12:09.369 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:12:09.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:12:09.442 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:09.456 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:12:09.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:12:11.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:12:11.319 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:11.334 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:12:11.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:12:11.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:12:11.492 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:12:11.493 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:12:11.493 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-07 03:12:11.494 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:12:11.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:12:11.574 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:11.586 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:12:11.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-07 03:12:16.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:12:16.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:16.896 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:12:16.896 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:12:17.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:12:17.089 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:12:17.089 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.plus. Widgets# 32}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:12:17.090 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 03:12:17.090 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:12:17.090 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-07 03:12:45.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:12:45.641 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:12:45.708 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:13:01.319 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:13:01.442 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:13:01.442 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:13:03.504 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:13:03.504 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:13:03.504 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:12:47.936
2015-12-07 03:13:03.504 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:13:03.599 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:13:03.599 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:03.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 35
2015-12-07 03:13:03.675 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:13:03.798 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:03.798 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=35, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:03.799 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:13:03.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:03.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:03.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:03.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:03.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:13:05.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:13:05.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:05.784 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:13:05.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:13:05.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:13:05.951 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:05.951 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:05.952 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[585,1158]>
2015-12-07 03:13:05.952 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:05.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:06.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:06.042 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:13:06.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[585,1158]>
2015-12-07 03:13:08.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:13:08.036 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:08.062 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:13:08.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:13:08.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:13:08.170 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:08.170 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 19}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:08.171 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    7 <ExplAct LC? 1 Wdgt:View/""/"com.frogsparks.mytrails:id/map"/[400,670]>
2015-12-07 03:13:08.171 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:08.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:08.248 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:08.263 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:08.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:View/""/"com.frogsparks.mytrails:id/map"/[400,670]>
2015-12-07 03:13:11.304 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:13:11.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:11.327 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:13:11.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:13:11.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:13:11.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:11.518 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 34}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:11.519 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,655]>
2015-12-07 03:13:11.519 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:11.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:11.597 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:11.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:11.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,655]>
2015-12-07 03:13:13.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:13:13.197 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:13.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:13.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:13:13.271 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:13:13.342 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:13.342 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:13.343 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,883]>
2015-12-07 03:13:13.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:13.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:13.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:13.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:13.431 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,883]>
2015-12-07 03:13:15.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:13:15.591 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:15.616 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:13:15.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:13:15.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:13:15.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:15.736 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 10}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:15.736 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-07 03:13:15.736 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:15.736 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-07 03:13:43.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:43.229 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:13:43.295 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:13:55.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:13:55.249 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:13:55.249 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:13:57.293 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:13:57.293 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:13:57.293 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:13:45.536
2015-12-07 03:13:57.293 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:13:57.370 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:13:57.371 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:57.421 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 33
2015-12-07 03:13:57.421 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:13:57.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:13:57.538 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=33, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:13:57.539 INFO  o.d.e.strategy.ExplorationStrategy         1m 48s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:13:57.540 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:13:57.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:13:57.614 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:13:57.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:13:57.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-07 03:14:00.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:14:00.693 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:14:00.716 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:14:00.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:14:00.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:14:00.851 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:14:00.852 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:14:00.853 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"More help"/"android:id/button2"/[220,1158]>
2015-12-07 03:14:00.853 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:14:00.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:14:00.922 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:14:00.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:14:00.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"More help"/"android:id/button2"/[220,1158]>
2015-12-07 03:14:03.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:14:03.188 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:14:03.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:14:03.224 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:14:03.337 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:14:03.397 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-07 03:14:03.397 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 12}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:14:03.398 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 03:14:03.398 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-07 03:14:03.398 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-07 03:14:29.674 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:14:43.601 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:14:43.601 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-07 03:15:09.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:09.055 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:15:09.125 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:15:20.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:15:20.449 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:15:20.449 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:15:22.499 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:15:22.499 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:15:22.499 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:15:10.876
2015-12-07 03:15:22.499 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:15:22.581 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:15:22.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:22.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:15:22.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:15:22.767 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:22.767 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:22.768 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-07 03:15:22.768 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:22.768 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:22.842 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:22.855 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:22.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-07 03:15:25.120 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:25.120 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:25.134 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:15:25.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:25.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:25.249 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:25.249 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:25.250 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-07 03:15:25.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:25.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:25.314 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:25.324 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:25.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-07 03:15:27.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:27.311 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:27.331 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:15:27.331 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:27.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:27.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:27.467 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:27.467 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-07 03:15:27.469 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:27.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:27.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:27.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:27.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-07 03:15:28.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:28.893 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:28.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:28.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:28.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:29.049 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:29.049 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:29.050 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-07 03:15:29.050 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:29.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:29.127 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:29.140 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:29.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-07 03:15:31.857 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:31.857 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:31.875 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:31.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:31.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:31.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:31.980 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:31.981 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-07 03:15:31.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:31.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:32.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:32.068 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:32.068 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-07 03:15:33.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:33.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:33.418 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:33.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:33.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:33.519 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:33.519 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:33.520 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-07 03:15:33.520 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:33.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:33.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:33.604 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:33.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-07 03:15:36.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:36.095 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:36.112 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:36.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:36.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:36.247 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:36.248 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:36.249 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-07 03:15:36.249 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:36.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:36.325 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:36.336 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:36.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-07 03:15:38.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:38.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:38.921 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:38.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:38.969 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:39.031 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:39.031 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:39.032 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-07 03:15:39.032 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:39.032 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:39.099 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:39.112 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:39.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-07 03:15:41.478 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:41.478 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:41.506 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:41.506 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:41.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:41.631 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:41.631 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:41.632 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-07 03:15:41.633 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:41.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:41.703 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:41.715 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:41.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-07 03:15:43.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:43.823 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:43.836 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:43.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:43.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:43.967 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:43.967 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:43.968 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-07 03:15:43.969 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:43.969 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:44.045 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:44.057 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:44.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-07 03:15:45.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:45.396 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:45.411 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:45.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:45.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:45.566 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:45.566 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:45.567 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-07 03:15:45.567 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:45.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:45.636 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:45.648 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:45.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-07 03:15:47.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:47.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:47.893 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:15:47.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:47.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:48.004 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:48.004 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:48.005 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-07 03:15:48.005 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:48.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:48.075 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:48.090 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:48.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-07 03:15:50.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:50.194 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:50.209 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:50.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:50.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:50.365 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:50.365 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:50.366 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-07 03:15:50.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:50.366 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:50.433 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:50.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:50.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-07 03:15:52.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:52.288 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:52.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:52.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:52.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:52.419 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:52.420 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:52.421 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-07 03:15:52.421 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:52.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:15:52.494 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:52.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:52.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-07 03:15:54.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:15:54.611 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:15:54.626 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:15:54.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:15:54.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:15:54.742 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:15:54.742 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:15:54.743 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:15:54.743 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:15:54.743 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:15:54.743 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-07 03:16:20.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:20.690 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:16:20.760 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:16:31.077 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:16:31.133 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:16:31.133 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:16:33.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:16:33.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:16:33.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:16:22.516
2015-12-07 03:16:33.181 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:16:33.270 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:16:33.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:33.303 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:16:33.303 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:16:33.469 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:33.470 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:33.471 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-07 03:16:33.471 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:33.471 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:33.550 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:33.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:33.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-07 03:16:36.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:16:36.110 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:36.131 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:16:36.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:16:36.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:16:36.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:36.285 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 47}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:36.287 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[567,920]>
2015-12-07 03:16:36.287 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:36.287 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:36.347 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:36.360 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:36.360 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[567,920]>
2015-12-07 03:16:38.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:16:38.356 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:38.373 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:38.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:16:38.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:16:38.506 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:38.506 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:38.507 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-07 03:16:38.507 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:38.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:38.589 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:38.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:38.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-07 03:16:40.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:16:40.841 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:40.859 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:40.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:16:40.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:16:41.020 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:41.020 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:41.021 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-07 03:16:41.022 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:41.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:41.097 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:41.113 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:41.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-07 03:16:43.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:16:43.280 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:43.295 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:43.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:16:43.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:16:44.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:44.024 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:44.025 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,786]>
2015-12-07 03:16:44.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:44.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:44.104 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:44.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:44.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,786]>
2015-12-07 03:16:58.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:16:58.877 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:58.907 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:16:58.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:16:59.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:16:59.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:16:59.323 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:16:59.324 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[166,1054]>
2015-12-07 03:16:59.325 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:16:59.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:16:59.396 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:16:59.414 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:16:59.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[166,1054]>
2015-12-07 03:17:00.745 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:17:00.745 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:00.761 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:00.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:17:00.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:17:00.916 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:17:00.917 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:17:00.918 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,265]>
2015-12-07 03:17:00.918 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:17:00.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:17:00.999 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:01.010 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:01.010 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,265]>
2015-12-07 03:17:09.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:17:09.161 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:09.177 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:09.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:17:09.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:17:09.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:17:09.293 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:17:09.294 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"Chinese (Simplified)"/"android:id/text1"/[400,185]>
2015-12-07 03:17:09.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:17:09.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:17:09.368 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:09.380 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:09.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Chinese (Simplified)"/"android:id/text1"/[400,185]>
2015-12-07 03:17:26.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:17:26.332 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:26.351 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:26.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:17:26.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:17:26.483 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:17:26.483 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:17:26.484 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:17:26.484 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:17:26.485 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-07 03:17:26.485 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:17:26.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:26.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:17:26.575 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:17:26.575 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.google.android.apps.translate}
2015-12-07 03:17:27.981 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:17:28.058 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:17:28.061 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:17:28.061 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:17:28.115 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:17:28.178 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-07 03:17:39.951 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.keep_v2.3.02-inlined.apk, device)
2015-12-07 03:17:39.951 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.keep
2015-12-07 03:18:05.553 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:18:05.556 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:18:05.623 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:18:13.379 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:18:13.426 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:18:13.426 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:18:35.902 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:18:54.564 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-07 03:18:54.564 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.launcher
2015-12-07 03:19:19.944 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:19:19.947 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:19:20.020 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:19:27.368 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:19:27.414 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:19:27.414 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:19:29.472 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:19:29.472 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:19:29.472 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:19:21.606
2015-12-07 03:19:29.472 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:19:29.549 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:19:29.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:19:29.578 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:19:29.578 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:19:29.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-07 03:19:29.689 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:19:29.689 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Get it from Google Play"/"android:id/button3"/[400,706]>
2015-12-07 03:19:29.689 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-07 03:19:29.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:19:29.765 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:19:29.780 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:19:29.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get it from Google Play"/"android:id/button3"/[400,706]>
2015-12-07 03:19:32.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:19:32.786 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:19:32.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:19:32.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:19:32.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:19:32.911 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-07 03:19:32.911 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 18}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:19:32.911 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 03:19:32.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-07 03:19:32.912 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.launcher
2015-12-07 03:20:00.758 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:20:00.761 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:20:00.833 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:20:08.172 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:20:08.228 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:20:08.228 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:20:10.280 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:20:10.280 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:20:10.280 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:20:02.406
2015-12-07 03:20:10.280 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:20:10.360 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:20:10.360 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:20:10.392 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:20:10.392 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:20:10.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-07 03:20:10.500 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:20:10.500 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: GUI state after reset doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.google.android.launcher Widgets count = 15>
2015-12-07 03:20:10.501 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:20:10.501 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-07 03:20:10.501 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:20:10.559 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:20:10.571 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:20:10.571 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:20:10.571 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.google.android.launcher}
2015-12-07 03:20:11.503 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:20:11.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:20:11.580 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:20:11.580 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:20:11.633 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:20:11.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-07 03:20:28.709 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.earth_v7.1.3.1255-inlined.apk, device)
2015-12-07 03:20:28.709 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.earth
2015-12-07 03:20:54.194 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:20:54.197 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:20:54.262 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:21:01.890 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:21:01.931 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:21:01.931 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:21:24.358 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:21:38.997 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:21:38.997 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-07 03:22:04.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:04.599 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:22:04.671 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:22:19.209 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:22:19.252 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:22:19.252 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:22:21.307 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:22:21.307 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:22:21.307 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:22:06.726
2015-12-07 03:22:21.307 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:22:21.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:22:21.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:21.473 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 56
2015-12-07 03:22:21.473 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:22:21.645 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:21.646 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 50}, DeviceLogs{apiLogs#=56, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:21.647 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-07 03:22:21.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:21.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:21.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:21.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:21.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-07 03:22:24.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:24.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:24.066 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:24.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:24.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:24.186 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:24.187 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:24.188 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-07 03:22:24.188 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:24.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:24.264 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:24.277 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:24.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-07 03:22:26.931 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:26.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:26.948 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:22:26.948 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:27.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:27.178 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:27.178 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:27.179 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Switch/"ON"/"com.ht.manga.gpanda:id/switch_noti_new_chapter"/[710,936]>
2015-12-07 03:22:27.180 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:27.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:27.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:27.258 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:27.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Switch/"ON"/"com.ht.manga.gpanda:id/switch_noti_new_chapter"/[710,936]>
2015-12-07 03:22:29.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:29.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:29.195 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 03:22:29.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:29.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:29.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:29.327 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:29.327 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/viewer_spinner"/[400,736]>
2015-12-07 03:22:29.328 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:29.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:29.396 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:29.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:22:29.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/viewer_spinner"/[400,736]>
2015-12-07 03:22:31.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:31.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:31.439 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:31.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:31.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:31.534 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:31.534 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 4}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:31.535 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:CheckedTextView/"Advanced Viewer"/"android:id/text1"/[397,858]>
2015-12-07 03:22:31.535 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:31.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:31.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:31.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:31.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Advanced Viewer"/"android:id/text1"/[397,858]>
2015-12-07 03:22:33.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:33.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:33.706 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:33.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:33.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:33.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:33.892 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:33.893 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Remove advertising"/"com.ht.manga.gpanda:id/btn_remove_ads"/[400,489]>
2015-12-07 03:22:33.893 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:33.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:22:33.965 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:33.978 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:33.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Remove advertising"/"com.ht.manga.gpanda:id/btn_remove_ads"/[400,489]>
2015-12-07 03:22:36.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:22:36.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:22:36.446 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:22:36.446 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:22:36.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:22:36.593 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:22:36.593 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:22:36.593 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct Reset app>
2015-12-07 03:22:36.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:22:36.594 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-07 03:23:02.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:02.763 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:23:02.828 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:23:15.980 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:23:16.025 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:23:16.026 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:23:18.080 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:23:18.080 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:23:18.081 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:23:04.586
2015-12-07 03:23:18.081 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:23:18.153 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:23:18.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:18.237 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 48
2015-12-07 03:23:18.237 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:23:18.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:23:18.413 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 50}, DeviceLogs{apiLogs#=48, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:23:18.414 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-07 03:23:18.415 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:23:18.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:23:18.489 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:18.504 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:23:18.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-07 03:23:21.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:23:21.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:21.275 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:23:21.275 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:23:21.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:23:21.528 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:23:21.529 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:23:21.529 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/planets_spinner"/[400,686]>
2015-12-07 03:23:21.530 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:23:21.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:23:21.587 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:21.609 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:23:21.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/planets_spinner"/[400,686]>
2015-12-07 03:23:23.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:23:23.654 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:23.693 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 03:23:23.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:23:23.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:23:23.786 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:23:23.786 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 5}, DeviceLogs{apiLogs#=19, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:23:23.788 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:CheckedTextView/"Right to Left"/"android:id/text1"/[397,808]>
2015-12-07 03:23:23.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:23:23.788 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:23:23.862 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:23.874 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:23:23.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Right to Left"/"android:id/text1"/[397,808]>
2015-12-07 03:23:25.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:23:25.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:25.961 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:23:25.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:23:26.068 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:23:26.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:23:26.126 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:23:26.127 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Email Support"/"com.ht.manga.gpanda:id/btn_email_support"/[400,419]>
2015-12-07 03:23:26.127 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:23:26.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:23:26.200 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:26.216 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:23:26.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Email Support"/"com.ht.manga.gpanda:id/btn_email_support"/[400,419]>
2015-12-07 03:23:30.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:23:30.565 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:23:30.588 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:23:30.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:23:30.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:23:30.763 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-07 03:23:30.764 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 41}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:23:30.764 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 03:23:30.765 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-07 03:23:30.765 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-07 03:23:56.494 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:24:14.136 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:24:14.136 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-07 03:24:39.627 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:39.630 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:24:39.695 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:24:50.956 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:24:51.001 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:24:51.001 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:24:53.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:24:53.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:24:53.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:24:41.466
2015-12-07 03:24:53.053 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:24:53.135 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:24:53.135 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:53.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 03:24:53.191 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:24:53.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:24:53.292 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:24:53.293 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 03:24:53.293 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:24:53.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:24:53.359 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:53.374 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:24:53.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-07 03:24:55.000 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:24:55.000 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:55.018 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:24:55.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:24:55.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:24:55.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:24:55.124 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:24:55.125 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-07 03:24:55.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:24:55.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:24:55.197 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:55.209 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:24:55.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-07 03:24:56.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:24:56.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:24:56.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:24:56.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:24:56.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:24:56.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:24:56.673 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 6}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:24:56.673 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 03:24:56.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:24:56.674 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-07 03:25:22.566 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:25:22.569 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:25:22.638 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:25:33.821 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:25:33.868 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:25:33.868 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:25:35.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:25:35.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:25:35.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:25:24.286
2015-12-07 03:25:35.920 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:25:36.014 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:25:36.014 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:25:36.057 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 03:25:36.057 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:25:36.172 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:25:36.173 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:25:36.174 INFO  o.d.e.strategy.ExplorationStrategy         0m 42s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Abbrechen"/"android:id/button2"/[208,1158]>
2015-12-07 03:25:36.174 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:25:36.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:25:36.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:25:36.247 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:25:36.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Abbrechen"/"android:id/button2"/[208,1158]>
2015-12-07 03:25:38.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:25:38.229 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:25:38.233 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:25:38.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:25:38.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:25:38.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:25:38.363 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:25:38.364 INFO  o.d.e.strategy.ExplorationStrategy         0m 45s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-07 03:25:38.364 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:25:38.364 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-07 03:26:04.030 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:04.032 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:26:04.106 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:26:14.613 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:26:14.662 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:26:14.664 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:26:16.721 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:26:16.721 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:26:16.721 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:26:05.776
2015-12-07 03:26:16.721 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:26:16.813 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:26:16.813 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:16.860 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 03:26:16.860 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:26:16.961 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:26:16.961 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:26:16.962 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-07 03:26:16.962 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:26:16.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:26:17.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:17.043 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:26:17.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-07 03:26:19.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:26:19.324 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:19.344 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:26:19.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:26:19.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:26:19.450 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:26:19.450 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:26:19.451 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Ja"/"android:id/button1"/[582,703]>
2015-12-07 03:26:19.451 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:26:19.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:26:19.529 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:19.543 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:26:19.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ja"/"android:id/button1"/[582,703]>
2015-12-07 03:26:22.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:26:22.194 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:22.221 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:26:22.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:26:22.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:26:22.335 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:26:22.336 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 12}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:26:22.336 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 03:26:22.337 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:26:22.337 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-07 03:26:48.284 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:26:48.287 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:26:48.354 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:26:59.314 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:26:59.368 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:26:59.368 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:27:01.422 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:27:01.422 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:27:01.422 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:26:50.146
2015-12-07 03:27:01.422 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:27:01.519 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:27:01.519 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:27:01.560 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 03:27:01.560 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:27:01.690 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:27:01.691 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:27:01.691 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:27:01.691 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:27:01.692 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-07 03:27:01.692 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:27:01.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:27:01.772 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:27:01.772 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:27:01.772 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ifap.arzneiaktuell}
2015-12-07 03:27:02.641 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:27:02.714 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:27:02.716 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:27:02.716 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:27:02.783 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:27:02.848 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-07 03:28:05.733 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-07 03:28:05.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.infraware.office.link
2015-12-07 03:28:32.520 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:28:32.523 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:28:32.591 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:28:48.695 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:28:48.734 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:28:48.734 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:28:50.775 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:28:50.775 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:28:50.775 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:28:34.416
2015-12-07 03:28:50.775 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:28:50.860 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:28:50.860 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:28:50.874 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:28:50.874 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:28:53.000 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device) - DONE
2015-12-07 03:28:53.000 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.infraware.office.link. Widgets# 9}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:28:53.001 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.infraware.office.link Widgets count = 9>
2015-12-07 03:28:53.001 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:28:53.001 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-07 03:28:53.001 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:28:53.071 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:28:53.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:28:53.103 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:28:53.103 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.infraware.office.link}
2015-12-07 03:28:53.979 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:28:54.060 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:28:54.063 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:28:54.063 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:28:54.133 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:28:54.201 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device) - DONE
2015-12-07 03:29:11.742 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:29:11.742 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-07 03:29:37.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:37.288 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:29:37.353 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:29:51.617 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:29:51.649 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:29:51.649 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:29:53.688 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:29:53.688 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:29:53.688 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:29:39.336
2015-12-07 03:29:53.688 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:29:53.756 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:29:53.756 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:53.786 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:29:53.786 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:29:53.936 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:29:53.936 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:29:53.937 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_sign_up"/[200,372]>
2015-12-07 03:29:53.937 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:29:53.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:29:53.998 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:54.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:29:54.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_sign_up"/[200,372]>
2015-12-07 03:29:55.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:29:55.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:55.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:29:55.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:29:55.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:29:55.989 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:29:55.989 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:29:55.990 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/next"/[763,504]>
2015-12-07 03:29:55.990 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:29:55.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:29:56.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:56.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:29:56.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/next"/[763,504]>
2015-12-07 03:29:58.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:29:58.406 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:58.430 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:29:58.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:29:58.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:29:58.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:29:58.545 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 31}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:29:58.546 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/action_bar_button_back"/[32,65]>
2015-12-07 03:29:58.546 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:29:58.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:29:58.605 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:29:58.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:29:58.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/action_bar_button_back"/[32,65]>
2015-12-07 03:30:00.623 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:30:00.623 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:00.638 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:00.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:30:00.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:30:00.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:00.785 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:00.785 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/"debugg7@gmail.com"/"com.instagram.android:id/email"/[400,504]>
2015-12-07 03:30:00.786 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:00.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:30:00.848 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:00.859 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:00.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"debugg7@gmail.com"/"com.instagram.android:id/email"/[400,504]>
2015-12-07 03:30:03.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:30:03.057 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:03.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:03.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:30:03.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:30:03.200 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:03.200 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:03.201 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,436]>
2015-12-07 03:30:03.201 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:03.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:30:03.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:03.272 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:03.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,436]>
2015-12-07 03:30:05.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:30:05.854 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:05.892 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:30:05.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:30:05.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:30:06.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:06.025 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:06.026 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-07 03:30:06.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:06.026 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-07 03:30:32.734 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:32.737 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:30:32.813 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:30:46.424 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:30:46.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:30:46.456 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:30:48.490 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:30:48.490 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:30:48.491 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:30:34.516
2015-12-07 03:30:48.491 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:30:48.563 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:30:48.563 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:48.588 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:30:48.588 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:30:48.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:48.733 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:48.733 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-07 03:30:48.734 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:48.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:30:48.798 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:48.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:48.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-07 03:30:50.646 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:30:50.646 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:50.659 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:50.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:30:50.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:30:50.814 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:50.815 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:50.815 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,1173]>
2015-12-07 03:30:50.815 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:50.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:30:50.880 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:50.892 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:30:50.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,1173]>
2015-12-07 03:30:53.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:30:53.274 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:30:53.314 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:30:53.314 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:30:53.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:30:53.439 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:30:53.439 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:30:53.440 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-07 03:30:53.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:30:53.440 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-07 03:31:19.772 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:19.775 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:31:19.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:31:35.209 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:31:35.244 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:31:35.244 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:31:37.287 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:31:37.287 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:31:37.287 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:31:22.326
2015-12-07 03:31:37.287 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:31:37.354 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:31:37.354 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:37.388 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:31:37.388 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:31:37.537 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:31:37.537 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:31:37.538 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-07 03:31:37.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:31:37.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:31:37.599 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:37.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:31:37.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-07 03:31:39.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:31:39.454 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:39.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:31:39.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:31:39.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:31:39.617 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:31:39.618 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:31:39.619 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Forgot?"/"com.instagram.android:id/forgot"/[746,501]>
2015-12-07 03:31:39.619 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:31:39.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:31:39.682 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:39.695 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:31:39.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot?"/"com.instagram.android:id/forgot"/[746,501]>
2015-12-07 03:31:41.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:31:41.706 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:41.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:31:41.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:31:41.785 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:31:41.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:31:41.855 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:31:41.856 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/fragment_forgot_password_facebook"/[400,337]>
2015-12-07 03:31:41.856 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:31:41.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:31:41.932 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:41.950 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:31:41.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/fragment_forgot_password_facebook"/[400,337]>
2015-12-07 03:31:44.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:31:44.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:31:44.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 03:31:44.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:31:44.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:31:44.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:31:44.344 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:31:44.345 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-07 03:31:44.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:31:44.345 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-07 03:32:10.349 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:32:10.352 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:32:10.418 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:32:24.178 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:32:24.212 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:32:24.212 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:32:26.248 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:32:26.248 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:32:26.248 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:32:12.506
2015-12-07 03:32:26.248 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:32:26.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:32:26.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:32:26.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 03:32:26.345 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:32:26.498 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:32:26.498 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:32:26.499 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:32:26.499 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:32:26.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-07 03:32:26.499 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:32:26.564 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:32:26.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:32:26.576 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:32:26.576 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.instagram.android}
2015-12-07 03:32:27.459 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:32:27.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:32:27.536 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:32:27.536 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:32:27.599 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:32:27.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-07 03:32:42.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:32:42.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-07 03:33:08.193 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:08.196 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:33:08.271 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:33:23.581 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:33:23.634 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:33:23.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:33:25.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:33:25.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:33:25.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:33:10.206
2015-12-07 03:33:25.691 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:33:25.782 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:33:25.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:25.833 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 03:33:25.833 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:33:25.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:33:25.942 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:33:25.942 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:33:25.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:33:25.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:33:26.015 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:26.027 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:33:26.027 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:33:27.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:33:27.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:27.916 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:33:27.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:33:27.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:33:28.016 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:33:28.016 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:33:28.017 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"1.Choose GO Keyboard"/"com.jb.gokeyboard:id/select_button_step1"/[400,646]>
2015-12-07 03:33:28.017 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:33:28.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:33:28.083 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:28.097 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:33:28.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"1.Choose GO Keyboard"/"com.jb.gokeyboard:id/select_button_step1"/[400,646]>
2015-12-07 03:33:29.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:33:29.436 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:29.450 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:33:29.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:33:31.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:33:31.852 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:33:31.853 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.settings. Widgets# 80}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:33:31.853 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 03:33:31.854 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:33:31.854 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-07 03:33:59.813 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:33:59.816 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:33:59.890 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:34:14.955 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:34:15.000 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:34:15.000 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:34:17.054 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:34:17.054 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:34:17.054 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:34:01.926
2015-12-07 03:34:17.054 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:34:17.151 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:34:17.151 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:17.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 03:34:17.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:34:17.310 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:17.310 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:17.311 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    5 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:17.311 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:17.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:17.373 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:17.390 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:17.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:20.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:20.313 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:20.332 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:34:20.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:20.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:20.431 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:20.431 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:20.432 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:20.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:20.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:20.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:20.517 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:20.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:21.872 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:21.872 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:21.889 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:21.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:21.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:21.988 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:21.988 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:21.989 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:21.989 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:21.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:22.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:22.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:22.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:23.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:23.444 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:23.459 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:23.459 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:23.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:23.557 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:23.557 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:23.558 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:23.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:23.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:23.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:23.637 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:23.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:26.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:26.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:26.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:26.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:26.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:26.664 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:26.667 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:26.667 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:26.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:26.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:26.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:26.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:26.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:28.102 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:28.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:28.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:28.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:28.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:28.221 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:28.222 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:28.223 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:28.223 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:28.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:28.299 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:28.311 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:28.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:29.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:29.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:29.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:29.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:29.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:29.779 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:29.780 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:29.780 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   11 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:29.781 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:29.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:29.854 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:29.865 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:29.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:32.763 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:32.763 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:32.780 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:32.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:32.814 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:32.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:32.879 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:32.880 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:32.881 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:32.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:32.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:32.969 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:32.969 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:34.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:34.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:34.332 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:34.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:34.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:34.442 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:34.442 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:34.443 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:34.443 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:34.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:34.516 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:34.526 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:34.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:35.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:35.891 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:35.904 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:35.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:35.948 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:36.015 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:36.016 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:36.016 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   14 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:36.017 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:36.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:36.085 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:36.097 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:36.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:39.014 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:39.015 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:39.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:39.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:39.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:39.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:39.132 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:39.133 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:39.133 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:39.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:39.208 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:39.222 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:34:39.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:40.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:40.563 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:40.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:34:40.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:40.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:40.690 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:40.690 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:40.691 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:40.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:40.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:40.765 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:40.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:40.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:42.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:42.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:42.153 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:42.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:42.179 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:42.244 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:42.244 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:42.245 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   17 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:42.246 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:42.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:42.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:42.334 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:42.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:45.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:45.248 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:45.264 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:45.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:45.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:45.362 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:45.362 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:45.363 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:45.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:45.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:34:45.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:45.450 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:45.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-07 03:34:46.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:34:46.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:34:46.821 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:34:46.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:34:46.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:34:46.934 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:34:46.934 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:34:46.935 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:34:46.935 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   19 <ExplAct Reset app>
2015-12-07 03:34:46.935 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:34:46.935 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-07 03:35:14.002 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:35:14.005 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:35:14.080 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:35:28.741 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:35:28.800 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:35:28.800 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:35:30.860 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:35:30.860 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:35:30.860 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:35:15.876
2015-12-07 03:35:30.860 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:35:30.949 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:35:30.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:35:31.002 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 03:35:31.002 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:35:31.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:35:31.103 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:35:31.103 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:35:31.103 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:35:31.103 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-07 03:35:31.103 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:35:31.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:35:31.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:35:31.194 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:35:31.194 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.jb.gokeyboard}
2015-12-07 03:35:32.036 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:35:32.113 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:35:32.116 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:35:32.116 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:35:32.179 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:35:32.245 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-07 03:35:44.441 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.levelup.brightweather_v1.05-inlined.apk, device)
2015-12-07 03:35:44.441 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.levelup.brightweather
2015-12-07 03:36:10.001 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:36:10.003 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:36:10.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:38:10.083 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:38:19.694 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:38:19.694 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-07 03:38:45.245 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:38:45.248 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:38:45.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:38:55.161 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:38:55.209 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:38:55.209 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:38:57.262 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:38:57.263 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:38:57.263 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:38:47.056
2015-12-07 03:38:57.263 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:38:57.357 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:38:57.357 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:38:57.390 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:38:57.390 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:38:57.493 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:38:57.494 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:38:57.494 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-07 03:38:57.495 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:38:57.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:38:57.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:38:57.581 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:38:57.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-07 03:38:58.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:38:58.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:38:58.941 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:38:58.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:38:58.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:38:59.068 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:38:59.068 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:38:59.070 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Setting"/"com.liwenwen20131497.christmas:id/SetingWallpaperBtn"/[741,268]>
2015-12-07 03:38:59.070 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:38:59.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:38:59.146 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:38:59.157 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:38:59.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Setting"/"com.liwenwen20131497.christmas:id/SetingWallpaperBtn"/[741,268]>
2015-12-07 03:39:01.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:01.393 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:01.416 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:39:01.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:01.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:01.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:01.649 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:01.649 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-07 03:39:01.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:01.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:01.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:01.734 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:01.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-07 03:39:03.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:03.842 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:03.860 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:03.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:03.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:03.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:03.982 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:03.982 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:CheckedTextView/"Normal"/"android:id/text1"/[400,626]>
2015-12-07 03:39:03.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:03.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:04.057 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:04.071 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:04.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Normal"/"android:id/text1"/[400,626]>
2015-12-07 03:39:06.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:06.004 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:06.025 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:06.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:06.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:06.173 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:06.173 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:06.174 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,565]>
2015-12-07 03:39:06.174 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:06.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:06.247 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:06.264 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:06.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,565]>
2015-12-07 03:39:08.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:08.347 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:08.365 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:08.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:08.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:08.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:08.501 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:08.501 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckedTextView/"Large"/"android:id/text1"/[400,691]>
2015-12-07 03:39:08.502 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:08.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:08.574 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:08.587 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:08.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Large"/"android:id/text1"/[400,691]>
2015-12-07 03:39:10.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:10.673 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:10.689 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:10.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:10.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:10.846 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:10.846 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:10.847 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,823]>
2015-12-07 03:39:10.847 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:10.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:10.934 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:10.946 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:10.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,823]>
2015-12-07 03:39:13.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:13.001 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:13.016 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:13.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:13.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:13.176 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:13.176 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:13.177 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-07 03:39:13.178 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:13.178 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:13.250 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:13.267 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:13.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-07 03:39:15.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:15.343 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:15.361 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:15.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:15.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:15.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:15.499 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:15.500 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:CheckedTextView/"Fast"/"android:id/text1"/[400,691]>
2015-12-07 03:39:15.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:15.500 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:15.576 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:15.590 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:15.590 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Fast"/"android:id/text1"/[400,691]>
2015-12-07 03:39:17.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:17.640 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:17.656 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:17.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:17.768 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:17.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:17.844 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:17.845 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,909]>
2015-12-07 03:39:17.845 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:17.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:17.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:17.934 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:17.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,909]>
2015-12-07 03:39:20.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:39:20.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:20.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:39:20.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:39:20.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:39:20.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:20.475 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{"Complete action using" dialog box.}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:20.476 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-07 03:39:20.476 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:20.476 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-07 03:39:46.410 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:46.412 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:39:46.478 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:39:57.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:39:57.250 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:39:57.250 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:39:59.297 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:39:59.297 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:39:59.297 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:39:48.176
2015-12-07 03:39:59.297 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:39:59.379 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:39:59.379 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:59.417 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:39:59.418 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:39:59.514 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:39:59.515 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:39:59.516 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/""/[400,656]>
2015-12-07 03:39:59.516 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:39:59.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:39:59.585 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:39:59.597 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:39:59.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[400,656]>
2015-12-07 03:40:04.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:40:04.371 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:04.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:40:04.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:40:04.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:40:04.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:40:04.735 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:40:04.736 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-07 03:40:04.736 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:40:04.736 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-07 03:40:32.731 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:32.734 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:40:32.815 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:40:42.586 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:40:42.631 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:40:42.631 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:40:44.698 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:40:44.698 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:40:44.698 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:40:34.506
2015-12-07 03:40:44.698 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:40:44.790 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:40:44.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:44.827 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:40:44.828 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:40:44.919 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:40:44.920 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:40:44.921 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-07 03:40:44.921 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:40:44.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:40:44.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:45.008 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:40:45.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-07 03:40:47.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:40:47.552 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:47.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:40:47.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:40:47.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:40:47.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:40:47.726 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:40:47.727 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:ImageView/""/""/[320,1155]>
2015-12-07 03:40:47.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:40:47.728 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:40:47.796 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:47.808 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:40:47.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[320,1155]>
2015-12-07 03:40:51.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:40:51.994 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:40:52.016 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:40:52.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:40:52.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:40:52.350 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:40:52.350 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:40:52.351 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   17 <ExplAct Reset app>
2015-12-07 03:40:52.351 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:40:52.351 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-07 03:41:20.251 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:41:20.254 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:41:20.327 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:41:31.355 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:41:31.413 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:41:31.413 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:41:33.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:41:33.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:41:33.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:41:21.996
2015-12-07 03:41:33.476 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:41:33.569 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:41:33.569 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:41:33.605 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 03:41:33.605 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:41:33.697 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:41:33.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:41:33.698 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:41:33.698 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:41:33.699 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-07 03:41:33.699 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:41:33.772 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:41:33.790 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:41:33.791 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:41:33.791 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.liwenwen20131497.christmas}
2015-12-07 03:41:34.682 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:41:34.755 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:41:34.757 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:41:34.758 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:41:34.826 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:41:34.887 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-07 03:41:54.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:41:54.573 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mapfactor.navigator
2015-12-07 03:42:20.195 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:20.197 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:42:20.274 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:42:32.059 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:42:32.108 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:42:32.108 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:42:34.160 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:42:34.160 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:42:34.160 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:42:21.956
2015-12-07 03:42:34.160 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:42:34.229 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:42:34.229 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:34.261 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:42:34.261 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:42:34.358 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:34.359 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:34.359 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/free"/[400,554]>
2015-12-07 03:42:34.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:34.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:34.432 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:34.442 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:34.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/free"/[400,554]>
2015-12-07 03:42:37.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:37.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:37.572 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:42:37.573 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:37.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:37.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:37.700 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:37.701 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-07 03:42:37.701 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:37.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:37.775 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:37.789 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:37.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-07 03:42:39.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:39.644 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:39.657 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:39.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:39.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:39.795 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:39.796 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:39.796 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[521,571]>
2015-12-07 03:42:39.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:39.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:39.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:39.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:39.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[521,571]>
2015-12-07 03:42:41.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:41.927 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:41.944 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:41.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:42.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:42.066 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:42.066 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:42.067 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"Français"/"com.mapfactor.navigator:id/caption"/[524,1021]>
2015-12-07 03:42:42.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:42.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:42.135 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:42.149 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:42.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Français"/"com.mapfactor.navigator:id/caption"/[524,1021]>
2015-12-07 03:42:44.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:44.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:44.422 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:42:44.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:44.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:44.546 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:44.546 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:44.547 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[531,571]>
2015-12-07 03:42:44.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:44.547 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:44.623 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:44.640 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:44.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[531,571]>
2015-12-07 03:42:46.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:46.690 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:46.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:46.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:46.766 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:46.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:46.829 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:46.830 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Norsk"/"com.mapfactor.navigator:id/caption"/[523,923]>
2015-12-07 03:42:46.830 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:46.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:46.903 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:46.918 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:46.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Norsk"/"com.mapfactor.navigator:id/caption"/[523,923]>
2015-12-07 03:42:49.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:49.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:49.515 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:42:49.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:49.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:49.649 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:49.649 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:49.650 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/unitSystemSpinner"/[465,647]>
2015-12-07 03:42:49.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:49.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:49.728 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:49.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:49.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/unitSystemSpinner"/[465,647]>
2015-12-07 03:42:51.732 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:51.732 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:51.749 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:51.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:51.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:51.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:51.855 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:51.858 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ListView/""/""/[468,754]>
2015-12-07 03:42:51.858 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:51.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:51.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:51.941 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:51.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[468,754]>
2015-12-07 03:42:54.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:54.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:54.030 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:54.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:54.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:54.150 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:54.151 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:54.152 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-07 03:42:54.152 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:54.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:54.229 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:54.247 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:54.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-07 03:42:56.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:56.105 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:56.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:56.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:56.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:56.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:56.242 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:56.243 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-07 03:42:56.243 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:56.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:56.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:56.332 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:56.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-07 03:42:58.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:42:58.473 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:58.491 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:42:58.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:42:58.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:42:58.644 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:42:58.644 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 16}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:42:58.645 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-07 03:42:58.645 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:42:58.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:42:58.723 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:42:58.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:42:58.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-07 03:43:00.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:43:00.849 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:00.854 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:43:00.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:43:00.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:43:00.970 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:00.971 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:00.971 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 03:43:00.972 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:00.972 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mapfactor.navigator
2015-12-07 03:43:26.512 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:26.516 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:43:26.582 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:43:39.327 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:43:39.378 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:43:39.378 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:43:41.433 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:43:41.433 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:43:41.434 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:43:28.306
2015-12-07 03:43:41.434 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:43:41.532 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:43:41.532 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:41.548 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:43:41.549 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:43:41.663 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:41.663 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:41.664 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/commercial"/[400,717]>
2015-12-07 03:43:41.664 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:41.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:43:41.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:41.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:43:41.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/commercial"/[400,717]>
2015-12-07 03:43:45.124 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:43:45.124 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:45.148 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:43:45.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:43:45.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:43:45.268 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:45.268 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:45.269 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-07 03:43:45.270 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:45.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:43:45.333 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:45.347 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:43:45.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-07 03:43:47.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:43:47.453 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:47.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:43:47.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:43:47.527 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:43:47.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:47.591 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:47.592 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Continue as free"/"android:id/button3"/[400,706]>
2015-12-07 03:43:47.592 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:47.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:43:47.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:47.681 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:43:47.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue as free"/"android:id/button3"/[400,706]>
2015-12-07 03:43:49.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:43:49.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:49.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:43:49.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:43:49.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:43:49.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:49.856 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:49.856 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-07 03:43:49.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:49.857 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:43:49.932 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:49.946 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:43:49.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-07 03:43:52.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:43:52.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:43:52.555 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 03:43:52.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:43:52.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:43:52.663 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:43:52.663 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 9}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:43:52.664 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   18 <ExplAct Reset app>
2015-12-07 03:43:52.664 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:43:52.664 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mapfactor.navigator
2015-12-07 03:44:19.769 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:44:19.772 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:44:19.849 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:44:32.392 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:44:32.441 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:44:32.442 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:44:34.493 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:44:34.493 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:44:34.493 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:44:21.596
2015-12-07 03:44:34.493 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:44:34.573 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:44:34.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:44:34.596 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:44:34.596 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:44:34.725 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:44:34.725 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:44:34.726 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:44:34.726 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:44:34.727 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-07 03:44:34.727 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:44:34.800 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:44:34.814 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:44:34.814 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:44:34.814 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mapfactor.navigator}
2015-12-07 03:44:36.001 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:44:36.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:44:36.077 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:44:36.077 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:44:36.142 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:44:36.207 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-07 03:44:48.668 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:44:48.668 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-07 03:45:14.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:14.141 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:45:14.210 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:45:27.243 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:45:27.287 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:45:27.287 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:45:29.337 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:45:29.337 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:45:29.338 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:45:15.936
2015-12-07 03:45:29.338 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:45:29.433 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:45:29.433 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:29.465 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:45:29.465 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:45:29.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:29.583 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:29.584 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:29.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:29.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:29.659 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:29.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:29.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:31.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:31.211 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:31.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:31.224 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:31.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:31.335 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:31.336 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:31.336 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:31.338 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:31.338 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:31.412 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:31.427 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:31.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:33.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:33.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:33.702 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:33.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:33.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:33.831 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:33.831 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:33.832 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-07 03:45:33.832 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:33.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:33.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:33.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:33.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-07 03:45:36.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:36.234 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:36.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:45:36.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:36.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:36.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:36.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:36.375 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:36.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:36.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:36.450 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:36.466 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:36.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:37.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:37.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:37.816 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:37.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:37.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:37.935 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:37.936 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:37.936 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:37.937 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:37.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:38.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:38.026 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:38.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:40.283 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:40.283 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:40.299 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:40.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:40.360 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:40.422 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:40.423 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:40.423 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-07 03:45:40.424 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:40.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:40.493 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:40.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:40.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-07 03:45:42.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:42.824 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:42.842 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:45:42.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:42.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:42.954 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:42.954 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:42.955 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:42.955 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:42.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:43.034 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:43.048 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:43.048 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:44.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:44.384 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:44.400 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:44.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:44.446 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:44.513 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:44.513 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:44.514 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:44.514 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:44.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:44.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:44.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:44.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:46.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:46.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:46.869 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:46.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:46.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:46.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:46.979 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:46.980 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,458]>
2015-12-07 03:45:46.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:46.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:47.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:47.065 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:47.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,458]>
2015-12-07 03:45:49.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:49.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:49.407 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:45:49.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:49.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:49.528 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:49.529 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:49.529 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:49.530 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:49.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:49.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:49.620 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:49.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:45:50.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:50.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:50.975 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:50.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:51.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:51.079 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:51.080 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:51.080 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:51.080 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:51.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:51.150 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:51.160 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:51.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:53.437 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:53.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:53.452 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:53.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:53.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:53.595 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:53.596 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:53.596 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,404]>
2015-12-07 03:45:53.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:53.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:53.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:53.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:53.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,404]>
2015-12-07 03:45:55.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:55.989 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:56.008 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:45:56.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:56.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:56.108 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:56.108 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:56.109 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:56.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:56.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:56.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:56.190 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:56.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:45:58.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:45:58.438 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:58.454 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:58.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:45:58.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:45:58.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:45:58.573 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:45:58.574 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-07 03:45:58.574 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:45:58.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:45:58.649 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:45:58.664 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:45:58.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-07 03:46:00.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:00.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:00.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:46:00.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:01.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:01.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:01.118 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:01.118 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:46:01.118 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:46:01.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:01.119 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-07 03:46:26.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:26.933 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:46:27.004 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:46:37.587 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:46:37.639 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:46:37.639 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:46:39.690 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:46:39.690 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:46:39.690 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:46:28.716
2015-12-07 03:46:39.690 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:46:39.783 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:46:39.783 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:39.813 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:46:39.813 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:46:39.925 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:39.925 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:39.925 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:39.926 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:39.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:40.002 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:40.015 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:40.015 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:41.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:41.552 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:41.569 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:41.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:41.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:41.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:41.674 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:41.674 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:41.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:41.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:41.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:41.768 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:41.768 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:43.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:43.103 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:43.119 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:43.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:43.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:43.224 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:43.226 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:43.227 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:43.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:43.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:43.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:43.309 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:43.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:45.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:45.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:45.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:45.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:45.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:45.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:45.776 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:45.777 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:45.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:45.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:45.838 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:45.852 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:45.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:48.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:48.095 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:48.109 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:48.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:48.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:48.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:48.227 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:48.227 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:48.228 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:48.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:48.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:48.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:48.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-07 03:46:49.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:49.648 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:49.664 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:49.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:49.711 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:49.781 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:49.781 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:49.782 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-07 03:46:49.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:49.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:49.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:49.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:49.862 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-07 03:46:51.208 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:51.208 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:51.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:51.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:51.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:51.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:51.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:51.375 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-07 03:46:51.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:51.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:51.433 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:51.443 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:51.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-07 03:46:52.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:52.798 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:52.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:52.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:52.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:52.938 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:52.938 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:52.939 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-07 03:46:52.939 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:52.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:53.013 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:53.029 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:53.029 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-07 03:46:54.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:54.370 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:54.388 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:54.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:54.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:54.504 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:54.504 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:54.505 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-07 03:46:54.505 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:54.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:54.576 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:54.593 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:54.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-07 03:46:55.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:55.936 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:55.950 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:55.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:56.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:56.088 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:56.088 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:56.089 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,350]>
2015-12-07 03:46:56.089 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:56.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:56.161 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:56.171 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:56.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,350]>
2015-12-07 03:46:57.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:57.519 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:57.536 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:57.536 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:46:57.578 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:46:57.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:46:57.648 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:46:57.649 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:57.649 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:46:57.649 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:46:57.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:57.732 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:57.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:46:59.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:46:59.976 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:46:59.993 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:46:59.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:47:00.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:47:00.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:47:00.117 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:47:00.118 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-07 03:47:00.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:47:00.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:47:00.188 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:00.201 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:00.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-07 03:47:02.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:47:02.513 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:02.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:47:02.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:47:02.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:47:02.641 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:47:02.641 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:47:02.641 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:47:02.642 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:47:02.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:47:02.716 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:02.727 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:02.727 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-07 03:47:04.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:47:04.989 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:05.004 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:05.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:47:05.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:47:05.151 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:47:05.151 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:47:05.152 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/act_main_lv_drawer"/[160,656]>
2015-12-07 03:47:05.153 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:47:05.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:47:05.222 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:05.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:05.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/act_main_lv_drawer"/[160,656]>
2015-12-07 03:47:06.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:47:06.575 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:06.593 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:06.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:47:06.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:47:06.717 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:47:06.717 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:47:06.718 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:47:06.718 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-07 03:47:06.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:47:06.718 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-07 03:47:32.605 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:32.608 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:47:32.674 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:47:44.331 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:47:44.382 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:47:44.383 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:47:46.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:47:46.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:47:46.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:47:34.556
2015-12-07 03:47:46.432 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:47:46.528 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:47:46.528 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:46.558 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 03:47:46.558 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:47:46.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:47:46.687 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:47:46.687 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:47:46.688 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:47:46.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-07 03:47:46.688 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:47:46.758 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:46.771 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:47:46.771 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:47:46.771 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mattia.videos.manager}
2015-12-07 03:47:47.689 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:47:47.768 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:47:47.771 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:47:47.771 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:47:47.823 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:47:47.893 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-07 03:48:01.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.megalol.quotes_v1.42-inlined.apk, device)
2015-12-07 03:48:01.912 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.megalol.quotes
2015-12-07 03:48:27.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:48:27.372 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:48:27.445 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:48:43.548 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:48:43.593 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:48:43.593 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:49:06.080 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:49:30.282 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device)
2015-12-07 03:49:30.282 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.miantan.myoface
2015-12-07 03:49:55.773 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:49:55.776 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:49:55.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:50:07.302 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:50:07.353 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:50:07.353 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:50:09.415 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:50:09.415 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:50:09.415 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:49:57.646
2015-12-07 03:50:09.415 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:50:09.492 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:50:09.492 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:50:09.533 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:50:09.533 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:50:09.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device) - DONE
2015-12-07 03:50:09.636 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.miantan.myoface. Widgets# 13}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:50:09.637 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.miantan.myoface Widgets count = 13>
2015-12-07 03:50:09.637 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:50:09.637 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device)
2015-12-07 03:50:09.637 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:50:09.711 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:50:09.725 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:50:09.725 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:50:09.725 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.miantan.myoface}
2015-12-07 03:50:10.624 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:50:10.693 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:50:10.696 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:50:10.696 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:50:10.755 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:50:10.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device) - DONE
2015-12-07 03:50:30.535 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:50:30.535 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-07 03:50:56.073 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:50:56.077 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:50:56.141 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:51:10.923 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:51:10.975 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:51:10.975 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:51:13.032 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:51:13.032 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:51:13.032 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:50:59.236
2015-12-07 03:51:13.032 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:51:13.130 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:51:13.130 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:13.160 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:51:13.160 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:51:13.442 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:13.443 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:13.444 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locViewBtn"/[533,173]>
2015-12-07 03:51:13.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:13.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:13.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:13.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:13.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locViewBtn"/[533,173]>
2015-12-07 03:51:15.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:15.539 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:15.555 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:15.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:15.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:15.757 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:15.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:15.758 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/killButton"/[1110,173]>
2015-12-07 03:51:15.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:15.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:15.830 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:15.841 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:15.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/killButton"/[1110,173]>
2015-12-07 03:51:17.695 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:17.695 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:17.721 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:17.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:17.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:17.924 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:17.924 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:17.925 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-07 03:51:17.926 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:17.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:17.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:18.018 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:18.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-07 03:51:19.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:19.354 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:19.371 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:19.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:19.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:19.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:19.529 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:19.531 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/autoFadeLeft"/[469,680]>
2015-12-07 03:51:19.531 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:19.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:19.607 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:19.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:19.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/autoFadeLeft"/[469,680]>
2015-12-07 03:51:20.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:20.958 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:20.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:20.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:21.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:21.155 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:21.155 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:21.156 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp1"/[84,419]>
2015-12-07 03:51:21.158 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:21.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:21.228 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:21.244 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:21.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp1"/[84,419]>
2015-12-07 03:51:22.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:22.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:22.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:22.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:22.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:22.768 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:22.768 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:22.769 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp7"/[383,549]>
2015-12-07 03:51:22.770 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:22.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:22.846 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:22.858 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:22.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp7"/[383,549]>
2015-12-07 03:51:24.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:24.200 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:24.215 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:24.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:24.322 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:24.394 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:24.394 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:24.395 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/toggleMoreButton"/[639,571]>
2015-12-07 03:51:24.396 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:24.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:24.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:24.486 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:24.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/toggleMoreButton"/[639,571]>
2015-12-07 03:51:26.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:26.539 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:26.557 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:26.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:26.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:26.763 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:26.763 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 87}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:26.764 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-07 03:51:26.765 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:26.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:26.839 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:26.855 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:26.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-07 03:51:28.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:28.700 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:28.719 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:28.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:28.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:28.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:28.895 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 87}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:28.896 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/recordButton"/[192,270]>
2015-12-07 03:51:28.897 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:28.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:51:28.969 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:28.985 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:28.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/recordButton"/[192,270]>
2015-12-07 03:51:32.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:51:32.361 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:32.381 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:51:32.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:51:32.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:51:32.486 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:51:32.486 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:51:32.487 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   11 <ExplAct Reset app>
2015-12-07 03:51:32.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:51:32.487 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-07 03:51:58.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:51:58.671 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:51:58.745 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:52:12.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:52:12.783 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:52:12.783 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:52:14.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:52:14.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:52:14.839 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:52:01.276
2015-12-07 03:52:14.839 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:52:14.918 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:52:14.918 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:14.961 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:52:14.961 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:52:15.113 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:15.113 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:15.114 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/collectionBtn"/[55,55]>
2015-12-07 03:52:15.114 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:15.114 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:15.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:15.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:15.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/collectionBtn"/[55,55]>
2015-12-07 03:52:16.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:16.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:16.654 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:52:16.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:17.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:17.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:17.250 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:17.252 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/mixViewBtn"/[639,173]>
2015-12-07 03:52:17.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:17.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:17.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:17.327 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:17.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/mixViewBtn"/[639,173]>
2015-12-07 03:52:20.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:20.976 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:20.993 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:20.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:21.084 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:21.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:21.155 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:21.156 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:TextView/"My Mixes"/""/[1046,140]>
2015-12-07 03:52:21.156 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:21.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:21.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:21.237 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:21.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"My Mixes"/""/[1046,140]>
2015-12-07 03:52:23.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:23.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:23.760 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:52:23.760 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:23.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:23.896 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:23.896 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:23.898 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-07 03:52:23.898 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:23.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:23.969 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:23.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:23.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-07 03:52:26.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:26.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:26.536 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:52:26.536 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:26.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:26.658 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:26.659 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:26.660 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/"Playlists"/""/[179,140]>
2015-12-07 03:52:26.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:26.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:26.732 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:26.746 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:26.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Playlists"/""/[179,140]>
2015-12-07 03:52:29.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:29.173 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:29.186 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:29.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:29.255 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:29.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:29.320 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:29.321 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[640,496]>
2015-12-07 03:52:29.321 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:29.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:29.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:29.404 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:29.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[640,496]>
2015-12-07 03:52:30.929 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:30.929 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:30.945 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:30.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:31.013 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:31.080 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:31.080 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:31.081 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-07 03:52:31.082 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:31.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:31.161 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:31.173 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:31.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-07 03:52:33.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:33.263 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:33.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:33.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:33.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:33.430 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:33.430 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:33.431 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-07 03:52:33.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:33.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:33.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:33.511 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:33.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-07 03:52:35.771 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:35.771 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:35.792 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:52:35.792 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:35.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:35.927 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:35.928 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:35.929 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-07 03:52:35.929 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:35.929 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:36.008 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:36.019 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:36.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-07 03:52:38.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:38.422 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:38.443 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:52:38.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:38.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:38.813 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:38.813 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:38.814 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.mixvibes.crossdjfree:id/GridLayout1"/[620,725]>
2015-12-07 03:52:38.815 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:38.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:38.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:38.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:38.884 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.mixvibes.crossdjfree:id/GridLayout1"/[620,725]>
2015-12-07 03:52:41.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:41.513 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:41.535 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:52:41.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:41.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:41.942 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:41.943 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:41.944 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[64,70]>
2015-12-07 03:52:41.944 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:41.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:42.018 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:42.028 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:42.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[64,70]>
2015-12-07 03:52:44.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:44.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:44.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 03:52:44.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:44.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:44.580 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:44.581 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:44.582 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-07 03:52:44.582 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:44.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:44.642 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:44.659 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:44.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-07 03:52:47.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:47.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:47.290 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:47.290 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:47.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:47.438 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:47.438 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:47.439 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-07 03:52:47.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:47.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:47.520 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:47.533 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:47.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-07 03:52:50.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:50.049 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:50.067 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:52:50.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:50.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:50.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:50.423 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:50.425 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:TextView/"Artists"/""/[422,140]>
2015-12-07 03:52:50.425 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:50.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:52:50.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:50.512 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:52:50.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Artists"/""/[422,140]>
2015-12-07 03:52:52.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:52:52.789 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:52:52.811 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:52:52.811 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:52:52.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:52:52.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:52:52.944 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 27}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:52:52.945 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:52:52.945 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   26 <ExplAct Reset app>
2015-12-07 03:52:52.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:52:52.946 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-07 03:53:19.279 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:53:19.283 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:53:19.347 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:53:33.401 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:53:33.452 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:53:33.452 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:53:35.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:53:35.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:53:35.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:53:21.626
2015-12-07 03:53:35.510 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:53:35.598 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:53:35.598 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:53:35.642 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 03:53:35.642 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:53:35.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:53:35.779 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:53:35.780 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 03:53:35.780 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:53:35.780 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-07 03:53:35.780 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:53:35.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:53:35.867 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:53:35.867 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:53:35.867 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mixvibes.crossdjfree}
2015-12-07 03:53:37.186 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:53:37.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:53:37.262 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:53:37.263 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:53:37.403 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:53:37.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-07 03:53:55.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:53:55.099 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-07 03:54:21.743 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:54:21.745 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:54:21.807 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:54:35.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:54:35.749 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:54:35.750 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:54:37.808 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:54:37.808 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:54:37.808 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:54:23.496
2015-12-07 03:54:37.808 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:54:37.910 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:54:37.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:54:37.943 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:54:37.943 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:54:38.073 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:54:38.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:54:38.074 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,742]>
2015-12-07 03:54:38.074 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:54:38.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:54:38.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:54:38.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:54:38.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,742]>
2015-12-07 03:54:42.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:54:42.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:54:42.309 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:54:42.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:54:42.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:54:42.606 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:54:42.606 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 78}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:54:42.607 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 03:54:42.607 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:54:42.607 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-07 03:55:10.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:55:10.504 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:55:10.572 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:55:23.477 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:55:23.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:55:23.526 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:55:25.589 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:55:25.589 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:55:25.589 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:55:12.226
2015-12-07 03:55:25.589 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:55:25.684 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:55:25.684 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:55:25.714 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:55:25.714 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:55:25.816 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:55:25.817 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:55:25.817 INFO  o.d.e.strategy.ExplorationStrategy         0m 47s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,742]>
2015-12-07 03:55:25.818 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:55:25.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:55:25.893 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:55:25.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:55:25.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,742]>
2015-12-07 03:55:27.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:55:27.851 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:55:27.855 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:55:27.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:55:27.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:55:27.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:55:27.980 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:55:27.980 INFO  o.d.e.strategy.ExplorationStrategy         0m 49s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 03:55:27.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:55:27.980 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-07 03:55:54.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:55:54.818 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:55:54.882 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:56:08.587 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:56:08.631 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:56:08.631 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:56:10.683 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:56:10.683 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:56:10.683 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:55:56.606
2015-12-07 03:56:10.683 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:56:10.770 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:56:10.770 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:56:10.814 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:56:10.815 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:56:10.920 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:56:10.920 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:56:10.921 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: GUI state after reset doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.mxtech.videoplayer.ad Widgets count = 15>
2015-12-07 03:56:10.921 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 03:56:10.921 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-07 03:56:10.921 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 03:56:10.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:56:11.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:56:11.009 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 03:56:11.009 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mxtech.videoplayer.ad}
2015-12-07 03:56:11.917 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 03:56:11.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:56:11.979 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:56:11.979 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 03:56:12.051 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 03:56:12.120 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-07 03:56:24.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.naver.linewebtoon_v1.0.6-inlined.apk, device)
2015-12-07 03:56:24.596 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.naver.linewebtoon
2015-12-07 03:56:50.131 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:56:50.134 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:56:50.210 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:57:04.588 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:57:04.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:57:04.624 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:57:06.671 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:57:06.672 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 03:57:20.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:57:20.782 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.bild.android
2015-12-07 03:57:46.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:57:46.369 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:57:46.432 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:58:02.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:58:02.273 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:58:02.273 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:58:04.326 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:58:04.326 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:58:04.327 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:57:48.086
2015-12-07 03:58:04.327 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:58:04.411 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:58:04.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:04.505 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 51
2015-12-07 03:58:04.505 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:58:04.790 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:04.790 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 68}, DeviceLogs{apiLogs#=51, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:04.791 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,861]>
2015-12-07 03:58:04.791 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:04.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:04.864 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:04.876 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:04.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,861]>
2015-12-07 03:58:09.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:09.636 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:09.661 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 03:58:09.661 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:10.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:10.104 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:10.104 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 18}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:10.105 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:58:10.105 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:10.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:10.173 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:10.182 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:10.182 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:58:13.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:13.173 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:13.217 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 03:58:13.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:13.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:13.486 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:13.486 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 68}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:13.487 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ListView/""/"com.netbiscuits.bild.android:id/viewStub"/[400,656]>
2015-12-07 03:58:13.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:13.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:13.561 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:13.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:13.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.netbiscuits.bild.android:id/viewStub"/[400,656]>
2015-12-07 03:58:17.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:17.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:17.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:58:17.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:17.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:17.338 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:17.338 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:17.339 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:58:17.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:17.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:17.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:17.435 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:17.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:58:19.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:19.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:19.447 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:58:19.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:19.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:19.634 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:19.634 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 68}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:19.635 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,876]>
2015-12-07 03:58:19.635 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:19.635 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:19.713 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:19.724 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:19.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,876]>
2015-12-07 03:58:23.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:23.033 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:23.064 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 03:58:23.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:23.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:23.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:23.202 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:23.203 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[399,292]>
2015-12-07 03:58:23.203 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:23.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:23.273 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:23.284 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:23.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,292]>
2015-12-07 03:58:25.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:25.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:25.185 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:25.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:25.276 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:25.333 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:25.333 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:25.334 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-07 03:58:25.334 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:25.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:25.405 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:25.417 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:25.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-07 03:58:27.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:27.408 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:27.426 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:27.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:27.489 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:27.560 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:27.560 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:27.561 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[399,644]>
2015-12-07 03:58:27.561 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:27.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:27.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:27.648 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:27.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,644]>
2015-12-07 03:58:29.610 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:29.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:29.629 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:29.629 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:29.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:29.753 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:29.754 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:29.755 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:View/""/""/[499,656]>
2015-12-07 03:58:29.755 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:29.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:29.831 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:29.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:29.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[499,656]>
2015-12-07 03:58:34.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:34.409 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:34.432 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 03:58:34.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:34.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:34.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:34.649 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 108}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:34.649 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[109,820]>
2015-12-07 03:58:34.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:34.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:34.729 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:34.742 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:34.742 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[109,820]>
2015-12-07 03:58:37.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:37.871 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:37.887 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:37.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:38.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:38.142 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:38.142 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:38.143 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[401,239]>
2015-12-07 03:58:38.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:38.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:38.221 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:38.237 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:38.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[401,239]>
2015-12-07 03:58:40.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:40.426 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:40.443 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:40.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:40.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:40.665 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:40.665 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:40.667 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[205,320]>
2015-12-07 03:58:40.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:40.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:40.738 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:40.747 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:40.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[205,320]>
2015-12-07 03:58:42.610 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:42.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:42.625 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:42.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:42.727 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:42.786 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:42.787 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:42.788 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:CheckBox/""/""/[43,1181]>
2015-12-07 03:58:42.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:42.788 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:42.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:42.877 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:42.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/""/[43,1181]>
2015-12-07 03:58:44.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:44.787 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:44.801 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:44.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:44.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:44.982 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:44.982 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:44.984 INFO  o.d.e.strategy.ExplorationStrategy         0m 40s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:CheckBox/""/""/[401,1102]>
2015-12-07 03:58:44.984 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:44.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:58:45.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:45.067 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:45.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/""/[401,1102]>
2015-12-07 03:58:46.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:58:46.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:58:46.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:58:46.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:58:47.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:58:47.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:58:47.132 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:58:47.133 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 03:58:47.133 INFO  o.d.e.strategy.ExplorationStrategy         0m 42s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 03:58:47.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:58:47.134 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.bild.android
2015-12-07 03:59:13.171 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:13.174 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 03:59:13.240 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 03:59:28.519 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 03:59:28.572 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 03:59:28.572 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 03:59:30.624 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 03:59:30.624 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 03:59:30.624 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T03:59:15.206
2015-12-07 03:59:30.624 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 03:59:30.708 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 03:59:30.708 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:30.798 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 52
2015-12-07 03:59:30.798 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 03:59:31.115 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:31.115 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 68}, DeviceLogs{apiLogs#=52, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:31.116 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,331]>
2015-12-07 03:59:31.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:31.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:31.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:31.196 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:31.196 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,331]>
2015-12-07 03:59:35.848 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:35.848 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:35.879 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:59:35.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:36.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:36.733 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:36.733 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 18}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:36.734 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:WebView/""/"com.netbiscuits.bild.android:id/webview"/[400,656]>
2015-12-07 03:59:36.734 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:36.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:36.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:36.827 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:36.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.netbiscuits.bild.android:id/webview"/[400,656]>
2015-12-07 03:59:38.843 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:38.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:38.858 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:38.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:38.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:38.990 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:38.990 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:38.991 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:RadioButton/""/""/[562,554]>
2015-12-07 03:59:38.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:38.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:39.067 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:39.082 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:39.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RadioButton/""/""/[562,554]>
2015-12-07 03:59:40.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:40.965 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:40.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:40.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:41.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:41.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:41.109 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:41.111 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-07 03:59:41.111 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:41.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:41.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:41.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:41.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-07 03:59:43.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:43.079 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:43.098 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:43.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:43.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:43.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:43.232 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:43.233 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:59:43.233 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:43.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:43.308 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:43.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:43.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-07 03:59:45.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:45.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:45.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 03:59:45.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:45.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:46.056 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:46.057 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 68}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:46.058 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.netbiscuits.bild.android:id/news_ticker_item_3"/[400,721]>
2015-12-07 03:59:46.058 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:46.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:46.134 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:46.146 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:46.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.netbiscuits.bild.android:id/news_ticker_item_3"/[400,721]>
2015-12-07 03:59:49.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:49.423 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:49.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 03:59:49.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:49.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:49.589 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:49.590 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:49.591 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[399,528]>
2015-12-07 03:59:49.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:49.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:49.657 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:49.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:49.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,528]>
2015-12-07 03:59:51.556 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:51.557 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:51.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:51.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:51.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:51.717 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:51.717 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:51.718 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:View/""/""/[557,751]>
2015-12-07 03:59:51.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:51.718 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:51.788 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:51.803 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:51.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[557,751]>
2015-12-07 03:59:53.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:53.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:53.927 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:53.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:54.007 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:54.073 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:54.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 61}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:54.074 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:View/""/""/[399,1133]>
2015-12-07 03:59:54.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:54.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:54.150 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:54.171 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:54.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,1133]>
2015-12-07 03:59:56.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:56.162 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:56.177 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:56.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:56.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:56.332 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:56.333 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 61}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:56.334 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:View/""/""/[557,751]>
2015-12-07 03:59:56.334 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:56.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:56.407 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:56.423 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:56.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[557,751]>
2015-12-07 03:59:58.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 03:59:58.425 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:58.440 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:58.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 03:59:58.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 03:59:58.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 03:59:58.573 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 03:59:58.575 INFO  o.d.e.strategy.ExplorationStrategy         1m 53s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:View/""/""/[374,751]>
2015-12-07 03:59:58.575 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 03:59:58.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 03:59:58.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 03:59:58.665 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 03:59:58.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[374,751]>
2015-12-07 04:00:00.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:00:00.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:00.626 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:00:00.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:00:00.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:00:00.755 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 04:00:00.756 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:00:00.757 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:View/""/""/[704,147]>
2015-12-07 04:00:00.757 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 04:00:00.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:00:00.827 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:00.839 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:00:00.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[704,147]>
2015-12-07 04:00:04.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:00:04.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:04.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:00:04.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:00:04.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:00:04.953 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 04:00:04.953 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:00:04.954 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:00:04.954 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:00:04.955 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-07 04:00:04.955 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:00:05.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:05.050 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:00:05.050 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:00:05.050 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.netbiscuits.bild.android}
2015-12-07 04:00:06.127 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:00:06.198 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:06.202 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:00:06.202 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:00:06.256 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:00:06.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-07 04:00:20.247 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-07 04:00:20.247 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.kicker
2015-12-07 04:00:45.884 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:00:45.886 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:00:45.954 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:01:01.606 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:01:01.644 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:01:01.644 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:01:03.684 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:01:03.684 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:01:03.685 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:00:47.616
2015-12-07 04:01:03.685 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:01:03.764 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:01:03.764 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:03.852 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 39
2015-12-07 04:01:03.852 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:01:07.845 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-07 04:01:07.846 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.kicker. Widgets# 146}, DeviceLogs{apiLogs#=39, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:01:07.846 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:View/""/"com.netbiscuits.kicker:id/list_livecenter_match_alarm"/[767,700]>
2015-12-07 04:01:07.847 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-07 04:01:07.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:01:07.907 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:08.106 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 23
2015-12-07 04:01:08.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/"com.netbiscuits.kicker:id/list_livecenter_match_alarm"/[767,700]>
2015-12-07 04:01:10.963 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:01:10.963 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:10.988 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:01:10.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:01:11.349 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:01:11.419 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-07 04:01:11.419 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.kicker. Widgets# 141}, DeviceLogs{apiLogs#=24, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:01:11.420 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/"com.netbiscuits.kicker:id/list_livecenter_match_alarm"/[767,745]>
2015-12-07 04:01:11.420 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-07 04:01:11.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:01:11.498 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:11.512 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:01:11.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/"com.netbiscuits.kicker:id/list_livecenter_match_alarm"/[767,745]>
2015-12-07 04:01:16.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:01:16.058 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:16.094 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 04:01:16.094 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:01:16.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:01:16.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-07 04:01:16.241 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 27}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:01:16.242 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 04:01:16.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-07 04:01:16.242 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.kicker
2015-12-07 04:01:44.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:01:44.462 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:01:44.532 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:02:00.633 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:02:00.668 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:02:00.668 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:02:02.708 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:02:02.708 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:02:02.708 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:01:46.876
2015-12-07 04:02:02.708 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:02:02.787 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:02:02.787 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:02:02.947 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 29
2015-12-07 04:02:02.947 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:02:03.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-07 04:02:03.940 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.kicker. Widgets# 14}, DeviceLogs{apiLogs#=29, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:02:03.940 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: GUI state after reset doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.netbiscuits.kicker Widgets count = 14>
2015-12-07 04:02:03.941 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:02:03.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-07 04:02:03.941 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:02:04.004 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:02:04.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 04:02:04.278 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:02:04.278 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.netbiscuits.kicker}
2015-12-07 04:02:05.303 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:02:05.401 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:02:05.404 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:02:05.404 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:02:05.471 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:02:05.537 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-07 04:02:13.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ng.dailynews_v1.13-inlined.apk, device)
2015-12-07 04:02:13.773 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ng.dailynews
2015-12-07 04:02:39.195 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:02:39.197 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:02:39.263 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:02:49.079 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:02:49.114 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:02:49.114 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:02:51.165 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:02:51.165 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 04:03:25.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:03:25.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.onemanwithcameralomo
2015-12-07 04:03:50.879 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:03:50.882 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:03:50.954 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:04:04.576 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:04:04.616 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:04:04.616 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:04:06.654 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:04:06.654 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:04:06.654 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:03:53.026
2015-12-07 04:04:06.654 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:04:06.745 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:04:06.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:06.778 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-07 04:04:06.778 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:04:06.910 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:04:06.911 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 31}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:04:06.912 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_shoot"/[639,701]>
2015-12-07 04:04:06.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:04:06.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:04:06.974 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:06.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:04:06.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_shoot"/[639,701]>
2015-12-07 04:04:10.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:04:10.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:10.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:04:10.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:04:10.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:04:10.477 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:04:10.478 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 21}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:04:10.478 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_photo"/[1219,368]>
2015-12-07 04:04:10.479 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:04:10.479 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:04:10.556 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:10.572 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:04:10.573 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_photo"/[1219,368]>
2015-12-07 04:04:12.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:04:12.415 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:12.429 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:04:12.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:04:13.045 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:04:13.107 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:04:13.107 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 1}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:04:13.108 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 04:04:13.108 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:04:13.108 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.onemanwithcameralomo
2015-12-07 04:04:39.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:39.524 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:04:39.595 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:04:55.245 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:04:55.283 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:04:55.283 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:04:57.340 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:04:57.340 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:04:57.340 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:04:42.096
2015-12-07 04:04:57.340 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:04:57.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:04:57.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:57.456 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:04:57.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:04:58.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:04:58.160 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 36}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:04:58.161 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_info"/[1242,701]>
2015-12-07 04:04:58.161 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:04:58.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:04:58.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:04:58.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:04:58.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_info"/[1242,701]>
2015-12-07 04:05:00.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:05:00.355 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:00.379 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:05:00.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:05:00.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:05:00.474 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:00.474 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 8}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:00.475 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.onemanwithcameralomo:id/cameraDescriptionDialog"/[640,368]>
2015-12-07 04:05:00.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:00.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:05:00.550 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:00.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:00.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.onemanwithcameralomo:id/cameraDescriptionDialog"/[640,368]>
2015-12-07 04:05:02.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:05:02.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:02.621 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:05:02.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:05:02.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:05:02.746 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:02.747 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 37}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:02.747 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_settings"/[38,701]>
2015-12-07 04:05:02.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:02.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:05:02.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:02.826 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:02.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_settings"/[38,701]>
2015-12-07 04:05:05.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:05:05.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:05.362 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:05:05.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:05:05.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:05:05.483 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:05.484 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 25}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:05.484 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,602]>
2015-12-07 04:05:05.485 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:05.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:05:05.551 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:05.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:05.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,602]>
2015-12-07 04:05:07.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:05:07.106 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:07.119 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:07.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:05:07.204 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:05:07.280 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:07.280 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 25}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:07.281 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,429]>
2015-12-07 04:05:07.282 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:07.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:05:07.355 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:07.363 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:07.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,429]>
2015-12-07 04:05:11.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:05:11.683 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:11.702 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:05:11.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:05:12.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:05:12.169 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:12.169 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 76}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:12.170 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-07 04:05:12.170 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:12.170 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.onemanwithcameralomo
2015-12-07 04:05:40.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:40.111 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:05:40.176 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:05:56.428 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:05:56.811 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:05:56.811 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:05:58.880 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:05:58.881 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:05:58.881 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:05:42.976
2015-12-07 04:05:58.881 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:05:58.956 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:05:58.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:59.005 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:05:59.005 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:05:59.232 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:05:59.232 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 36}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:05:59.233 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_settings"/[38,701]>
2015-12-07 04:05:59.233 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:05:59.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:05:59.308 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:05:59.323 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:05:59.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.onemanwithcameralomo:id/btn_settings"/[38,701]>
2015-12-07 04:06:01.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:06:01.986 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:02.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:06:02.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:06:02.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:06:02.490 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:06:02.490 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 25}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:06:02.491 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,343]>
2015-12-07 04:06:02.491 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:06:02.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:06:02.566 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:02.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:06:02.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,343]>
2015-12-07 04:06:06.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:06:06.205 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:06.221 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:06:06.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:06:06.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:06:06.370 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:06:06.370 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:06:06.371 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-07 04:06:06.371 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:06:06.371 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.onemanwithcameralomo
2015-12-07 04:06:36.093 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:36.095 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:06:36.172 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:06:51.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:06:51.418 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:06:51.418 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:06:53.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:06:53.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:06:53.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:06:38.366
2015-12-07 04:06:53.476 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:06:53.564 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:06:53.564 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:53.620 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:06:53.620 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:06:53.808 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:06:53.808 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 36}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:06:53.811 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:06:53.811 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:06:53.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-07 04:06:53.812 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:06:53.889 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:53.903 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:06:53.903 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:06:53.903 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.onemanwithcameralomo}
2015-12-07 04:06:55.050 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:06:55.127 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:06:55.129 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:06:55.129 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:06:55.219 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:06:55.280 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-07 04:07:50.825 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-07 04:07:50.825 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.outfit7.talkingangelafree
2015-12-07 04:08:16.373 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:08:16.376 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:08:16.453 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:08:32.544 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:08:32.579 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:08:32.579 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:08:34.621 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:08:34.621 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:08:34.621 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:08:18.416
2015-12-07 04:08:34.621 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:08:34.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:08:34.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:08:34.732 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-07 04:08:34.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:08:36.757 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-07 04:08:36.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.outfit7.talkingangelafree. Widgets# 22}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:08:36.757 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.outfit7.talkingangelafree Widgets count = 22>
2015-12-07 04:08:36.757 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:08:36.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-07 04:08:36.758 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:08:36.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:08:36.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-07 04:08:36.925 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:08:36.925 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.outfit7.talkingangelafree}
2015-12-07 04:08:38.759 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:08:38.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:08:38.835 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:08:38.835 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:08:38.911 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:08:38.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-07 04:09:05.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:09:05.899 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-07 04:09:31.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:31.490 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:09:31.555 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:09:47.680 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:09:47.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:09:47.733 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:09:49.788 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:09:49.788 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:09:49.789 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:09:33.256
2015-12-07 04:09:49.789 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:09:49.876 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:09:49.876 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:49.950 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 41
2015-12-07 04:09:49.950 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:09:50.058 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:09:50.059 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 11}, DeviceLogs{apiLogs#=41, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:09:50.060 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-07 04:09:50.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:09:50.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:09:50.139 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:50.158 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:50.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-07 04:09:52.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:09:52.093 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:52.110 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:52.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:09:52.181 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:09:52.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:09:52.241 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:09:52.241 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-07 04:09:52.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:09:52.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:09:52.308 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:52.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:52.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-07 04:09:55.276 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:09:55.276 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:55.306 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:09:55.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:09:55.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:09:55.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:09:55.509 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:09:55.510 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-07 04:09:55.510 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:09:55.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:09:55.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:55.602 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:55.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-07 04:09:58.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:09:58.574 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:58.592 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:58.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:09:58.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:09:58.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:09:58.738 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:09:58.739 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-07 04:09:58.739 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:09:58.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:09:58.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:09:58.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:09:58.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-07 04:10:01.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:01.024 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:01.040 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:01.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:01.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:01.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:01.195 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:01.196 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-07 04:10:01.196 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:01.196 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:01.276 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:01.292 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:01.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-07 04:10:03.477 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:03.477 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:03.494 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:03.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:03.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:03.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:03.647 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:03.648 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-07 04:10:03.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:03.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:03.724 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:03.737 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:03.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-07 04:10:06.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:06.139 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:06.155 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:06.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:06.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:06.338 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:06.338 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:06.338 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-07 04:10:06.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:06.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:06.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:06.434 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:06.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-07 04:10:07.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:07.765 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:07.805 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:10:07.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:08.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:08.311 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:08.311 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 18}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:08.312 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-07 04:10:08.312 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:08.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:08.392 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:08.441 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 16
2015-12-07 04:10:08.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-07 04:10:11.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:11.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:11.826 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:10:11.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:11.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:11.957 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:11.957 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=21, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:11.958 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/"Email address"/"com.paypal.android.p2pmobile:id/etEmail"/[400,151]>
2015-12-07 04:10:11.959 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:11.959 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:12.038 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:12.051 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:12.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email address"/"com.paypal.android.p2pmobile:id/etEmail"/[400,151]>
2015-12-07 04:10:13.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:13.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:13.909 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:13.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:13.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:14.029 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:14.029 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:14.030 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"New to PayPal? Sign Up"/"com.paypal.android.p2pmobile:id/authSignup"/[400,406]>
2015-12-07 04:10:14.030 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:14.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:10:14.104 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:14.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:10:14.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"New to PayPal? Sign Up"/"com.paypal.android.p2pmobile:id/authSignup"/[400,406]>
2015-12-07 04:10:16.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:10:16.495 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:10:16.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:10:16.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:10:16.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:10:16.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-07 04:10:16.636 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 7}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:10:16.636 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-07 04:10:16.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-07 04:10:16.636 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-07 04:10:42.723 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 04:11:13.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:11:13.673 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-07 04:11:39.259 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:11:39.261 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:11:39.328 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:11:55.439 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:11:55.474 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:11:55.474 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:11:57.514 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:11:57.514 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:11:57.514 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:11:41.136
2015-12-07 04:11:57.514 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:11:57.592 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:11:57.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:11:57.694 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 64
2015-12-07 04:11:57.694 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:11:57.817 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:11:57.817 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=64, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:11:57.818 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-07 04:11:57.818 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:11:57.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:11:57.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:11:57.908 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 04:11:57.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-07 04:11:59.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:11:59.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:11:59.761 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 04:11:59.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:11:59.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:00.298 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:00.299 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:00.299 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-07 04:12:00.300 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:00.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:00.363 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:00.374 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:00.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-07 04:12:03.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:03.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:03.470 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:12:03.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:03.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:03.578 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:03.578 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:03.579 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-07 04:12:03.579 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:03.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:03.654 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:03.670 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:03.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-07 04:12:07.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:07.810 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:07.915 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 85
2015-12-07 04:12:07.915 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:08.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:08.291 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:08.291 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 46}, DeviceLogs{apiLogs#=85, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:08.292 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/""/""/[757,70]>
2015-12-07 04:12:08.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:08.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:08.368 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:08.381 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:08.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/""/[757,70]>
2015-12-07 04:12:10.789 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:10.789 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:10.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 04:12:10.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:10.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:10.963 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:10.964 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 28}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:10.964 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.picsart.studio:id/si_ui_notification_user_image_layout"/[37,153]>
2015-12-07 04:12:10.965 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:10.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:11.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:11.056 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:11.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.picsart.studio:id/si_ui_notification_user_image_layout"/[37,153]>
2015-12-07 04:12:15.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:15.245 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:15.270 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:12:15.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:15.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:15.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:15.456 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 48}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:15.457 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,421]>
2015-12-07 04:12:15.457 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:15.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:15.532 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:15.547 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:15.547 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,421]>
2015-12-07 04:12:17.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:17.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:17.398 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:17.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:17.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:17.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:17.554 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:17.554 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.picsart.studio:id/shop_item_buy_install_button"/[194,183]>
2015-12-07 04:12:17.555 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:17.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:17.629 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:17.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:17.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.picsart.studio:id/shop_item_buy_install_button"/[194,183]>
2015-12-07 04:12:19.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:19.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:19.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 04:12:19.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:19.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:19.957 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:19.958 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 27}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:19.958 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_socialin_sign_googleplus"/[265,454]>
2015-12-07 04:12:19.959 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:19.959 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:12:20.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:20.047 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:12:20.047 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_socialin_sign_googleplus"/[265,454]>
2015-12-07 04:12:22.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:12:22.450 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:22.469 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:12:22.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:12:22.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:12:22.623 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:12:22.623 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 10}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:12:22.624 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-07 04:12:22.624 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:12:22.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-07 04:12:51.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:12:51.414 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:12:51.482 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:13:07.570 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:13:07.612 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:13:07.612 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:13:09.649 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:13:09.649 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:13:09.649 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:12:53.856
2015-12-07 04:13:09.649 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:13:09.720 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:13:09.720 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:09.784 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 41
2015-12-07 04:13:09.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:13:09.904 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:09.904 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=41, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:09.907 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-07 04:13:09.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:09.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:09.969 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:09.979 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:09.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-07 04:13:13.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:13.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:13.415 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:13:13.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:13.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:13.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:13.553 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 32}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:13.554 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.picsart.studio:id/flickrLayoutId"/[446,668]>
2015-12-07 04:13:13.554 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:13.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:13.612 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:13.620 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:13.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.picsart.studio:id/flickrLayoutId"/[446,668]>
2015-12-07 04:13:20.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:20.492 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:20.588 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 67
2015-12-07 04:13:20.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:20.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:20.925 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:20.925 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 103}, DeviceLogs{apiLogs#=67, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:20.927 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.picsart.studio:id/flickr_picture_layout"/[700,669]>
2015-12-07 04:13:20.927 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:20.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:20.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:21.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:21.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.picsart.studio:id/flickr_picture_layout"/[700,669]>
2015-12-07 04:13:23.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:23.671 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:23.698 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 04:13:23.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:24.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:24.470 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:24.470 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 39}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:24.471 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Lens Flare"/"com.picsart.studio:id/btn_lensFlare"/[573,1102]>
2015-12-07 04:13:24.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:24.472 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:24.540 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:24.549 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:24.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Lens Flare"/"com.picsart.studio:id/btn_lensFlare"/[573,1102]>
2015-12-07 04:13:26.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:26.400 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:26.414 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:26.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:26.769 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:26.837 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:26.837 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 39}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:26.839 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Callout"/"com.picsart.studio:id/btn_callout"/[488,1102]>
2015-12-07 04:13:26.839 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:26.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:26.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:26.954 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:26.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Callout"/"com.picsart.studio:id/btn_callout"/[488,1102]>
2015-12-07 04:13:29.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:29.721 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:29.737 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:29.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:29.829 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:29.904 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:29.904 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:29.905 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.picsart.studio:id/dashboardCancelId"/[32,1106]>
2015-12-07 04:13:29.905 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:29.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:29.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:29.987 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:29.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.picsart.studio:id/dashboardCancelId"/[32,1106]>
2015-12-07 04:13:32.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:32.197 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:32.212 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:32.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:32.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:32.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:32.363 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:32.364 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"Mask"/"com.picsart.studio:id/btn_mask"/[233,1102]>
2015-12-07 04:13:32.365 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:32.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:32.443 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:32.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:32.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Mask"/"com.picsart.studio:id/btn_mask"/[233,1102]>
2015-12-07 04:13:36.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:36.700 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:36.720 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:36.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:37.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:37.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:37.353 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 82}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:37.355 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[264,1094]>
2015-12-07 04:13:37.355 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:37.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:37.432 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:37.445 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:37.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[264,1094]>
2015-12-07 04:13:39.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:39.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:39.608 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:39.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:39.848 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:39.909 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:39.909 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 102}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:39.911 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:RadioButton/""/"com.picsart.studio:id/button_brush"/[496,32]>
2015-12-07 04:13:39.911 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:39.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:39.972 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:39.990 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:39.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RadioButton/""/"com.picsart.studio:id/button_brush"/[496,32]>
2015-12-07 04:13:41.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:41.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:41.992 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:41.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:42.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:42.199 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:42.199 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:42.201 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[789,1094]>
2015-12-07 04:13:42.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:42.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:42.279 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:42.292 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:42.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[789,1094]>
2015-12-07 04:13:44.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:44.615 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:44.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:44.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:44.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:44.903 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:44.903 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:44.905 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[264,1094]>
2015-12-07 04:13:44.906 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:44.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:44.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:44.988 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:44.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[264,1094]>
2015-12-07 04:13:47.135 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:47.135 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:47.152 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:47.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:47.360 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:47.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:47.417 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:47.419 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.picsart.studio:id/mask_dashboardDoneId"/[768,32]>
2015-12-07 04:13:47.420 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:47.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:47.490 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:47.503 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:47.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.picsart.studio:id/mask_dashboardDoneId"/[768,32]>
2015-12-07 04:13:50.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:50.140 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:50.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:50.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:50.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:50.445 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:50.446 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:50.448 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:Button/"Clipart"/"com.picsart.studio:id/btn_clipart"/[743,1102]>
2015-12-07 04:13:50.448 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:50.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:50.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:50.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:50.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Clipart"/"com.picsart.studio:id/btn_clipart"/[743,1102]>
2015-12-07 04:13:54.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:54.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:54.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:54.431 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:55.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:55.522 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:55.523 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 199}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:55.529 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[741,926]>
2015-12-07 04:13:55.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:55.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:13:55.607 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:55.622 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:55.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[741,926]>
2015-12-07 04:13:58.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:13:58.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:58.153 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:58.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:13:58.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:13:58.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:13:58.292 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 39}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:13:58.293 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:13:58.294 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:13:58.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-07 04:13:58.294 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:13:58.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:13:58.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:13:58.382 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:13:58.382 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.picsart.studio}
2015-12-07 04:14:00.306 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:14:00.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:00.370 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:14:00.370 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:14:00.427 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:14:00.497 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-07 04:14:10.929 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:10.929 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-07 04:14:36.488 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:36.491 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:14:36.558 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:14:45.132 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:14:45.421 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:14:45.421 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:14:47.481 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:14:47.481 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:14:47.481 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:14:38.176
2015-12-07 04:14:47.481 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:14:47.558 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:14:47.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:47.670 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 69
2015-12-07 04:14:47.670 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:14:47.787 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:47.788 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=69, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:47.788 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-07 04:14:47.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:47.788 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:47.866 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:47.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:47.884 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-07 04:14:49.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:14:49.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:49.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:49.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:14:49.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:14:49.898 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:49.898 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:49.899 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/UserMarkerButton"/[660,70]>
2015-12-07 04:14:49.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:49.899 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:49.971 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:49.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:49.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/UserMarkerButton"/[660,70]>
2015-12-07 04:14:51.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:14:51.986 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:52.004 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:14:52.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:14:52.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:14:52.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:52.132 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:52.133 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-07 04:14:52.133 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:52.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:52.208 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:52.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:52.224 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-07 04:14:54.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:14:54.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:54.368 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:54.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:14:54.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:14:54.506 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:54.506 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:54.507 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-07 04:14:54.507 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:54.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:54.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:54.594 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:54.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-07 04:14:56.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:14:56.992 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:57.008 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:57.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:14:57.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:14:57.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:57.320 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:57.320 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[401,653]>
2015-12-07 04:14:57.321 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:57.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:57.392 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:57.401 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:57.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[401,653]>
2015-12-07 04:14:59.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:14:59.066 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:59.081 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:59.081 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:14:59.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:14:59.210 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:14:59.210 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:14:59.211 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Favoriten"/"android:id/text1"/[401,610]>
2015-12-07 04:14:59.211 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:14:59.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:14:59.286 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:14:59.298 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:14:59.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Favoriten"/"android:id/text1"/[401,610]>
2015-12-07 04:15:01.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:01.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:01.541 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:15:01.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:01.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:01.646 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:01.647 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:01.647 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:01.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:01.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:01.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:01.734 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:01.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:03.269 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:03.269 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:03.287 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:03.287 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:03.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:03.386 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:03.386 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:03.387 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:03.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:03.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:03.462 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:03.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:03.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:04.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:04.819 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:04.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:04.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:04.885 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:04.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:04.947 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:04.947 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:04.948 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:04.948 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:05.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:05.030 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:05.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:06.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:06.375 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:06.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:06.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:06.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:06.495 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:06.496 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:06.496 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:06.496 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:06.496 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:06.563 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:06.575 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:06.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:07.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:07.913 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:07.928 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:07.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:07.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:08.038 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:08.038 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:08.039 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:08.039 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:08.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:08.111 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:08.125 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:08.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:09.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:09.470 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:09.481 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:09.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:09.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:09.579 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:09.579 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:09.583 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:09.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:09.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:09.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:09.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:09.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:11.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:11.011 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:11.026 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:11.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:11.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:11.133 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:11.134 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:11.134 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:11.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:11.135 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:11.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:11.215 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:11.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-07 04:15:12.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:12.554 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:12.574 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:12.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:12.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:12.668 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:12.668 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:12.669 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:12.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:12.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:12.744 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:12.762 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:12.763 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-07 04:15:14.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:14.106 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:14.122 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:14.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:14.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:14.219 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:14.220 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:14.220 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-07 04:15:14.220 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-07 04:15:14.220 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:14.220 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-07 04:15:40.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:40.950 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:15:41.020 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:15:50.372 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:15:50.423 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:15:50.423 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:15:52.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:15:52.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:15:52.476 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:15:42.946
2015-12-07 04:15:52.476 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:15:52.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:15:52.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:52.668 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 66
2015-12-07 04:15:52.668 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:15:52.776 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:52.776 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=66, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:52.776 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-07 04:15:52.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:52.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:52.851 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:52.870 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:52.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-07 04:15:54.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:54.747 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:54.764 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:54.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:54.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:54.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:54.877 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:54.878 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/LocatingButton"/[720,70]>
2015-12-07 04:15:54.880 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:54.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:54.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:54.961 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:54.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/LocatingButton"/[720,70]>
2015-12-07 04:15:56.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:56.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:56.832 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:56.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:56.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:56.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:56.978 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:56.979 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomIn"/[745,1158]>
2015-12-07 04:15:56.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:56.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:57.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:57.076 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:15:57.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomIn"/[745,1158]>
2015-12-07 04:15:58.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:15:58.407 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:58.432 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 04:15:58.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:15:58.500 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:15:58.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:15:58.571 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:15:58.572 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-07 04:15:58.572 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:15:58.572 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:15:58.642 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:15:58.653 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:15:58.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-07 04:16:00.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:00.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:00.782 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 19
2015-12-07 04:16:00.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:00.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:00.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:00.891 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:00.892 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"Welt"/"com.ptvag.android.adacgasprices:id/WorldButton"/[164,66]>
2015-12-07 04:16:00.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:00.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:00.965 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:00.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:16:00.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Welt"/"com.ptvag.android.adacgasprices:id/WorldButton"/[164,66]>
2015-12-07 04:16:02.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:02.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:02.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-07 04:16:02.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:02.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:03.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:03.025 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=22, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:03.026 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,130]>
2015-12-07 04:16:03.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:03.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:03.097 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:03.109 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:03.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,130]>
2015-12-07 04:16:04.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:04.465 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:04.483 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:04.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:04.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:04.620 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:04.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:04.621 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-07 04:16:04.621 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:04.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:04.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:04.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:04.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-07 04:16:07.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:07.075 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:07.092 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:07.092 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:07.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:07.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:07.203 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:07.203 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"Aktueller Standort"/"android:id/text1"/[401,524]>
2015-12-07 04:16:07.204 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:07.204 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:07.278 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:07.291 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:07.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Aktueller Standort"/"android:id/text1"/[401,524]>
2015-12-07 04:16:09.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:09.376 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:09.394 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:09.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:09.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:09.508 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:09.509 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:09.509 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,687]>
2015-12-07 04:16:09.510 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:09.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:09.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:09.599 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:09.599 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,687]>
2015-12-07 04:16:11.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:11.468 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:11.486 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:11.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:11.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:11.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:11.597 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:11.598 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomOut"/[664,1158]>
2015-12-07 04:16:11.598 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:11.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:11.674 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:11.689 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:11.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomOut"/[664,1158]>
2015-12-07 04:16:13.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:13.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:13.034 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:16:13.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:13.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:13.150 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:13.150 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:13.151 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,70]>
2015-12-07 04:16:13.151 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:13.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:13.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:13.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:13.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,70]>
2015-12-07 04:16:15.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:15.263 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:15.279 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:15.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:15.342 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:15.411 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:15.411 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:15.412 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:TextView/"Kontakte"/"android:id/text1"/[401,782]>
2015-12-07 04:16:15.412 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:15.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:16:15.485 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:15.496 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:15.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Kontakte"/"android:id/text1"/[401,782]>
2015-12-07 04:16:18.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:16:18.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:18.390 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:16:18.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:16:18.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:16:18.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:18.511 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.contacts. Widgets# 16}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:18.512 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   29 <ExplAct Reset app>
2015-12-07 04:16:18.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:18.512 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-07 04:16:44.958 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:44.961 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:16:45.026 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:16:53.973 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:16:54.024 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:16:54.024 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:16:56.082 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:16:56.082 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:16:56.082 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:16:46.686
2015-12-07 04:16:56.082 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:16:56.165 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:16:56.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:56.273 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 67
2015-12-07 04:16:56.273 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:16:56.486 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:16:56.486 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=67, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:16:56.486 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:16:56.487 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:16:56.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-07 04:16:56.487 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:16:56.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:56.574 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:16:56.574 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:16:56.574 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ptvag.android.adacgasprices}
2015-12-07 04:16:57.736 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:16:57.808 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:16:57.811 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:16:57.811 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:16:57.877 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:16:57.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-07 04:17:26.040 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:17:26.040 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-07 04:17:51.621 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:17:51.624 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:17:51.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:18:03.832 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:18:03.878 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:18:03.878 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:18:05.943 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:18:05.943 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:18:05.943 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:17:53.876
2015-12-07 04:18:05.943 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:18:06.033 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:18:06.033 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:06.080 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:18:06.080 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:18:06.179 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:06.180 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:06.180 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-07 04:18:06.180 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:06.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:18:06.255 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:06.268 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:06.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-07 04:18:08.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:18:08.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:08.550 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:18:08.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:18:08.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:18:08.851 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:08.852 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:08.853 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-07 04:18:08.853 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:08.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:18:08.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:08.934 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:08.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-07 04:18:11.304 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:18:11.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:11.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:11.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:18:11.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:18:11.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:11.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:11.462 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/settings"/[672,70]>
2015-12-07 04:18:11.462 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:11.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:18:11.538 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:11.551 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:11.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/settings"/[672,70]>
2015-12-07 04:18:13.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:18:13.580 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:13.604 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:18:13.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:18:13.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:18:13.706 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:13.707 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:13.707 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-07 04:18:13.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:13.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:18:13.785 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:13.801 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:13.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-07 04:18:15.831 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:18:15.831 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:15.848 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:15.848 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:18:15.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:18:15.975 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:15.975 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:15.976 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,761]>
2015-12-07 04:18:15.976 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:15.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:18:16.047 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:16.058 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:18:16.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,761]>
2015-12-07 04:18:20.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:18:20.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:20.097 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:18:20.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:18:20.437 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:18:20.502 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:18:20.503 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.settings. Widgets# 81}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:18:20.506 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-07 04:18:20.506 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:18:20.506 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-07 04:18:46.528 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:46.531 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:18:46.597 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:18:57.741 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:18:57.791 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:18:57.791 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:18:59.840 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:18:59.840 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:18:59.840 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:18:48.226
2015-12-07 04:18:59.840 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:18:59.914 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:18:59.914 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:18:59.961 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:18:59.961 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:19:00.062 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:00.063 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:00.064 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-07 04:19:00.064 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:00.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:00.130 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:00.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:00.144 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-07 04:19:02.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:02.188 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:02.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:02.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:02.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:02.321 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:02.321 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:02.322 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 04:19:02.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:02.322 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-07 04:19:28.428 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:28.430 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:19:28.495 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:19:39.189 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:19:39.242 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:19:39.242 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:19:41.295 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:19:41.295 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:19:41.296 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:19:30.226
2015-12-07 04:19:41.296 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:19:41.390 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:19:41.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:41.429 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:19:41.429 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:19:41.536 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:41.537 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:41.537 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-07 04:19:41.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:41.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:41.613 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:41.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:41.631 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-07 04:19:43.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:43.820 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:43.842 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:19:43.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:44.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:44.130 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:44.130 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:44.131 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[593,344]>
2015-12-07 04:19:44.131 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:44.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:44.195 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:44.206 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:44.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[593,344]>
2015-12-07 04:19:46.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:46.565 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:46.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:46.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:46.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:46.754 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:46.754 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:46.755 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Local"/""/[199,138]>
2015-12-07 04:19:46.755 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:46.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:46.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:46.833 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:46.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Local"/""/[199,138]>
2015-12-07 04:19:48.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:48.173 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:48.187 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:48.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:48.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:48.332 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:48.332 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:48.333 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,344]>
2015-12-07 04:19:48.333 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:48.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:48.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:48.422 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:48.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,344]>
2015-12-07 04:19:50.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:50.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:50.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:50.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:50.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:50.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:50.558 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:50.559 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,695]>
2015-12-07 04:19:50.559 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:50.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:50.632 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:50.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:50.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,695]>
2015-12-07 04:19:52.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:52.621 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:52.639 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:52.639 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:52.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:52.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:52.782 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:52.783 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-07 04:19:52.783 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:52.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:52.857 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:52.875 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:52.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-07 04:19:54.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:54.957 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:54.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:54.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:55.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:55.119 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:55.119 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:55.120 INFO  o.d.e.strategy.ExplorationStrategy         1m 48s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/share"/[757,70]>
2015-12-07 04:19:55.120 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:55.120 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:19:55.190 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:55.205 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:19:55.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/share"/[757,70]>
2015-12-07 04:19:58.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:19:58.713 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:19:58.732 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:19:58.732 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:19:58.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:19:58.937 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:19:58.938 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 49}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:19:58.938 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   17 <ExplAct Reset app>
2015-12-07 04:19:58.939 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:19:58.939 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-07 04:20:25.090 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:20:25.092 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:20:25.158 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:20:36.261 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:20:36.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:20:36.307 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:20:38.359 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:20:38.359 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:20:38.359 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:20:26.776
2015-12-07 04:20:38.359 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:20:38.459 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:20:38.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:20:38.506 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:20:38.506 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:20:38.607 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:20:38.608 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:20:38.608 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:20:38.608 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:20:38.608 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-07 04:20:38.608 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:20:38.683 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:20:38.702 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:20:38.702 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:20:38.702 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.qisiemoji.inputmethod}
2015-12-07 04:20:39.615 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:20:39.701 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:20:39.706 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:20:39.706 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:20:39.771 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:20:39.826 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-07 04:20:50.229 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:20:50.229 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rhmsoft.fm
2015-12-07 04:21:15.712 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:15.714 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:21:15.781 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:21:28.527 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:21:28.562 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:21:28.562 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:21:30.599 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:21:30.599 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:21:30.599 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:21:17.496
2015-12-07 04:21:30.600 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:21:30.674 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:21:30.674 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:30.722 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 19
2015-12-07 04:21:30.722 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:21:31.613 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:21:31.613 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 133}, DeviceLogs{apiLogs#=19, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:21:31.614 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Up"/""/[106,104]>
2015-12-07 04:21:31.614 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:21:31.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:21:31.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:31.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:21:31.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Up"/""/[106,104]>
2015-12-07 04:21:35.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:21:35.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:35.174 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:21:35.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:21:35.271 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:21:35.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:21:35.339 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 75}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:21:35.340 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[609,1165]>
2015-12-07 04:21:35.340 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:21:35.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:21:35.401 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:35.417 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:21:35.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[609,1165]>
2015-12-07 04:21:37.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:21:37.268 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:37.351 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:21:37.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:21:37.629 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:21:37.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:21:37.707 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 41}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:21:37.708 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ListView/""/"com.rhmsoft.fm:id/entryList"/[400,634]>
2015-12-07 04:21:37.708 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:21:37.709 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:21:37.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:37.803 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:21:37.804 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.rhmsoft.fm:id/entryList"/[400,634]>
2015-12-07 04:21:40.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:21:40.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:21:40.952 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:21:40.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:21:41.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:21:41.084 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:21:41.084 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:21:41.085 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-07 04:21:41.085 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:21:41.085 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rhmsoft.fm
2015-12-07 04:22:12.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:12.500 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:22:12.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:22:24.790 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:22:24.835 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:22:24.835 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:22:26.871 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:22:26.871 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:22:26.871 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:22:14.956
2015-12-07 04:22:26.871 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:22:26.948 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:22:26.948 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:27.000 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 19
2015-12-07 04:22:27.000 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:22:27.976 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:22:27.977 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 133}, DeviceLogs{apiLogs#=19, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:22:27.978 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,512]>
2015-12-07 04:22:27.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:22:27.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:22:28.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:28.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:22:28.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,512]>
2015-12-07 04:22:30.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:22:30.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:30.965 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:22:30.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:22:31.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:22:31.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:22:31.217 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 81}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:22:31.218 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,284]>
2015-12-07 04:22:31.218 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:22:31.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:22:31.281 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:31.292 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:22:31.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,284]>
2015-12-07 04:22:33.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:22:33.519 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:33.534 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:22:33.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:22:33.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:22:33.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:22:33.669 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:22:33.670 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[399,688]>
2015-12-07 04:22:33.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:22:33.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:22:33.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:33.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:22:33.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[399,688]>
2015-12-07 04:22:36.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:22:36.734 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:22:36.753 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:22:36.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:22:36.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:22:36.969 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:22:36.970 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{"Complete action using" dialog box.}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:22:36.970 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-07 04:22:36.971 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:22:36.971 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rhmsoft.fm
2015-12-07 04:23:03.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:03.024 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:23:03.105 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:23:14.446 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:23:14.481 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:23:14.481 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:23:16.520 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:23:16.520 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:23:16.520 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:23:05.056
2015-12-07 04:23:16.520 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:23:16.604 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:23:16.604 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:16.651 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 04:23:16.651 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:23:17.616 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:23:17.617 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 169}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:23:17.618 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,569]>
2015-12-07 04:23:17.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:23:17.618 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:23:17.689 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:17.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:17.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,569]>
2015-12-07 04:23:20.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:23:20.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:20.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:20.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:23:20.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:23:20.293 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:23:20.293 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 69}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:23:20.294 INFO  o.d.e.strategy.ExplorationStrategy         1m 48s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Multi"/""/[177,104]>
2015-12-07 04:23:20.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:23:20.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:23:20.359 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:20.374 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:20.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Multi"/""/[177,104]>
2015-12-07 04:23:22.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:23:22.400 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:22.420 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:22.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:23:22.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:23:22.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:23:22.558 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 65}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:23:22.559 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[313,1172]>
2015-12-07 04:23:22.560 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:23:22.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:23:22.635 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:22.647 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:22.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[313,1172]>
2015-12-07 04:23:25.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:23:25.585 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:25.598 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:25.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:23:25.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:23:25.760 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:23:25.761 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 65}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:23:25.762 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[609,1165]>
2015-12-07 04:23:25.762 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:23:25.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:23:25.830 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:25.842 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:23:25.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[609,1165]>
2015-12-07 04:23:31.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:23:31.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:31.162 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:23:31.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:23:31.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:23:31.301 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:23:31.302 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 36}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:23:31.303 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-07 04:23:31.303 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:23:31.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rhmsoft.fm
2015-12-07 04:23:59.490 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:23:59.493 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:23:59.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:24:11.422 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:24:11.458 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:24:11.458 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:24:13.497 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:24:13.497 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:24:13.497 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:24:01.556
2015-12-07 04:24:13.497 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:24:13.576 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:24:13.576 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:24:13.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-07 04:24:13.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:24:14.549 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:24:14.549 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rhmsoft.fm. Widgets# 169}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:24:14.551 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:24:14.551 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:24:14.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-07 04:24:14.551 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:24:14.616 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:24:14.628 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:24:14.628 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:24:14.628 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.rhmsoft.fm}
2015-12-07 04:24:15.574 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:24:15.652 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:24:15.655 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:24:15.655 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:24:15.709 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:24:15.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device) - DONE
2015-12-07 04:24:26.704 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rtli.clipfish_v3.2-inlined.apk, device)
2015-12-07 04:24:26.704 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rtli.clipfish
2015-12-07 04:24:52.238 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:24:52.240 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:24:52.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:25:04.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:25:04.782 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:25:04.782 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:25:06.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:25:06.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:25:06.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:24:54.126
2015-12-07 04:25:06.838 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:25:06.934 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:25:06.934 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:25:06.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 04:25:06.971 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:25:09.028 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rtli.clipfish_v3.2-inlined.apk, device) - DONE
2015-12-07 04:25:09.028 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:25:09.029 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't belong to the app. The GUI state: <GUI state: home screen>
2015-12-07 04:25:09.029 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:25:09.029 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.rtli.clipfish_v3.2-inlined.apk, device)
2015-12-07 04:25:09.029 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:25:09.104 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:25:09.107 DEBUG o.d.exploration.device.DeviceLogsHandler ! Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Rethrowing.
2015-12-07 04:25:09.107 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught TcpServerUnreachableException while performing device actions of RunnableTerminateExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 04:25:24.277 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rtlinteractive.rtlnow_v1.2.2-inlined.apk, device)
2015-12-07 04:25:24.277 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rtlinteractive.rtlnow
2015-12-07 04:25:49.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:25:49.808 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:25:49.874 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:26:03.166 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:26:03.206 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:26:03.206 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:26:05.260 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:26:05.260 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:26:05.260 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:25:51.716
2015-12-07 04:26:05.260 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:26:05.348 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:26:05.348 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:26:05.392 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 04:26:05.392 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:26:05.488 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rtlinteractive.rtlnow_v1.2.2-inlined.apk, device) - DONE
2015-12-07 04:26:05.489 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.rtlinteractive.rtlnow. Widgets# 6}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:26:05.489 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.rtlinteractive.rtlnow Widgets count = 6>
2015-12-07 04:26:05.489 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:26:05.489 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.rtlinteractive.rtlnow_v1.2.2-inlined.apk, device)
2015-12-07 04:26:05.489 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:26:05.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:26:05.576 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:26:05.576 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:26:05.576 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.rtlinteractive.rtlnow}
2015-12-07 04:26:06.620 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:26:06.694 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:26:06.697 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:26:06.697 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:26:06.766 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:26:06.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.rtlinteractive.rtlnow_v1.2.2-inlined.apk, device) - DONE
2015-12-07 04:26:20.697 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:26:20.697 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.runtastic.android.pedometer.lite
2015-12-07 04:26:46.357 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:26:46.360 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:26:46.424 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:27:02.537 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:27:02.584 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:27:02.584 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:27:04.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:27:04.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:27:04.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:26:48.156
2015-12-07 04:27:04.634 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:27:04.718 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:27:04.718 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:04.762 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 04:27:04.762 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:27:04.898 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:27:04.899 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 16}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:27:04.900 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Sign in with Google"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_google"/[400,472]>
2015-12-07 04:27:04.900 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:27:04.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:27:04.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:04.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:27:04.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign in with Google"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_google"/[400,472]>
2015-12-07 04:27:08.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:27:08.350 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:08.373 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:27:08.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:27:08.523 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:27:08.598 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:27:08.599 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.gms. Widgets# 16}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:27:08.599 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 04:27:08.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:27:08.599 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.runtastic.android.pedometer.lite
2015-12-07 04:27:34.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:34.978 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:27:35.044 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:27:51.153 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:27:51.202 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:27:51.202 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:27:53.262 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:27:53.262 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:27:53.262 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:27:36.776
2015-12-07 04:27:53.262 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:27:53.354 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:27:53.354 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:53.401 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 04:27:53.401 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:27:53.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:27:53.528 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 16}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:27:53.528 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Remind me later"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_try_app"/[400,1170]>
2015-12-07 04:27:53.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:27:53.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:27:53.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:53.614 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:27:53.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Remind me later"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_try_app"/[400,1170]>
2015-12-07 04:27:56.100 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:27:56.100 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:56.119 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:27:56.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:27:56.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:27:56.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:27:56.239 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 21}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:27:56.239 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"NEXT"/"com.runtastic.android.pedometer.lite:id/benefits_skip"/[757,70]>
2015-12-07 04:27:56.240 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:27:56.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:27:56.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:56.324 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:27:56.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"NEXT"/"com.runtastic.android.pedometer.lite:id/benefits_skip"/[757,70]>
2015-12-07 04:27:58.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:27:58.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:58.449 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 04:27:58.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:27:58.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:27:58.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:27:58.559 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 21}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:27:58.559 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Join now!"/"com.runtastic.android.pedometer.lite:id/benefits_register_now"/[400,1167]>
2015-12-07 04:27:58.560 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:27:58.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:27:58.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:27:58.638 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:27:58.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Join now!"/"com.runtastic.android.pedometer.lite:id/benefits_register_now"/[400,1167]>
2015-12-07 04:28:00.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:00.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:00.537 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:28:00.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:00.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:00.651 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:00.652 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 16}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:00.652 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Join now"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_sign_up"/[488,654]>
2015-12-07 04:28:00.653 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:00.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:28:00.728 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:00.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:00.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Join now"/"com.runtastic.android.pedometer.lite:id/fragment_login_selection_sign_up"/[488,654]>
2015-12-07 04:28:03.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:03.227 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:03.249 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:28:03.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:03.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:03.411 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:03.411 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 47}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:03.412 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_email_layout"/[400,395]>
2015-12-07 04:28:03.412 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:03.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:28:03.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:03.505 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:03.506 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_email_layout"/[400,395]>
2015-12-07 04:28:05.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:05.780 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:05.796 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:05.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:05.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:05.948 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:05.949 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:05.949 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_email"/[522,395]>
2015-12-07 04:28:05.950 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:05.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:28:06.030 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:06.046 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:06.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_email"/[522,395]>
2015-12-07 04:28:07.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:07.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:07.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:07.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:07.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:07.544 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:07.544 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:07.545 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_password"/[522,547]>
2015-12-07 04:28:07.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:07.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:28:07.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:07.638 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:07.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_password"/[522,547]>
2015-12-07 04:28:08.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:08.996 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:09.012 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:09.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:09.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:09.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:09.160 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android.pedometer.lite. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:09.161 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ImageView/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_image"/[80,199]>
2015-12-07 04:28:09.161 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:09.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:28:09.239 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:09.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:28:09.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.runtastic.android.pedometer.lite:id/fragment_registration_image"/[80,199]>
2015-12-07 04:28:11.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:28:11.710 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:28:11.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-07 04:28:11.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:28:11.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:28:11.876 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device) - DONE
2015-12-07 04:28:11.876 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 21}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:28:11.877 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-07 04:28:11.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android.pedometer.lite_v1.4-inlined.apk, device)
2015-12-07 04:28:11.877 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.runtastic.android.pedometer.lite
2015-12-07 04:28:39.279 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 04:29:06.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android_v5.2.1-inlined.apk, device)
2015-12-07 04:29:06.594 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.runtastic.android
2015-12-07 04:29:32.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:29:32.139 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:29:32.203 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:29:48.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:29:48.364 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:29:48.364 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:29:50.400 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:29:50.400 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:29:50.400 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:29:33.876
2015-12-07 04:29:50.400 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:29:50.485 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:29:50.485 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:29:50.584 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:29:50.584 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:29:54.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.runtastic.android_v5.2.1-inlined.apk, device) - DONE
2015-12-07 04:29:54.785 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.runtastic.android. Widgets# 11}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:29:54.785 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.runtastic.android Widgets count = 11>
2015-12-07 04:29:54.785 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:29:54.785 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.runtastic.android_v5.2.1-inlined.apk, device)
2015-12-07 04:29:54.785 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:29:54.863 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:29:54.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-07 04:29:54.925 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:29:54.926 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.runtastic.android}
2015-12-07 04:29:55.941 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:29:56.013 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:29:56.016 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:29:56.016 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:29:56.083 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:29:56.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.runtastic.android_v5.2.1-inlined.apk, device) - DONE
2015-12-07 04:30:12.286 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:30:12.286 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shazam.android
2015-12-07 04:30:37.830 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:30:37.832 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:30:37.903 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:30:53.913 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:30:53.960 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:30:53.960 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:30:56.019 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:30:56.019 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:30:56.019 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:30:39.756
2015-12-07 04:30:56.019 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:30:56.097 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:30:56.097 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:30:56.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 57
2015-12-07 04:30:56.236 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:30:56.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:30:56.353 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 18}, DeviceLogs{apiLogs#=57, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:30:56.354 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"debugg7@gmail.com"/"com.shazam.android:id/email_account_select"/[400,803]>
2015-12-07 04:30:56.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:30:56.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:30:56.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:30:56.427 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:30:56.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"debugg7@gmail.com"/"com.shazam.android:id/email_account_select"/[400,803]>
2015-12-07 04:30:58.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:30:58.615 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:30:58.651 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-07 04:30:58.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:30:58.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:30:58.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:30:58.756 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.gms. Widgets# 14}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:30:58.757 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-07 04:30:58.757 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:30:58.757 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shazam.android
2015-12-07 04:31:24.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:24.690 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:31:24.754 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:31:39.690 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:31:39.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:31:39.731 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:31:41.777 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:31:41.777 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:31:41.777 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:31:26.396
2015-12-07 04:31:41.777 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:31:41.848 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:31:41.848 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:41.945 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 57
2015-12-07 04:31:41.945 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:31:42.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:42.060 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 18}, DeviceLogs{apiLogs#=57, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:42.061 INFO  o.d.e.strategy.ExplorationStrategy         0m 45s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Next"/"com.shazam.android:id/button_next"/[600,1171]>
2015-12-07 04:31:42.061 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:42.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:42.134 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:42.145 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:31:42.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Next"/"com.shazam.android:id/button_next"/[600,1171]>
2015-12-07 04:31:43.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:43.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:44.427 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-07 04:31:44.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:31:45.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:31:45.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:45.551 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 18}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:45.552 INFO  o.d.e.strategy.ExplorationStrategy         0m 49s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Skip"/"com.shazam.android:id/button_skip"/[199,1171]>
2015-12-07 04:31:45.552 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:45.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:45.628 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:45.760 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-07 04:31:45.760 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Skip"/"com.shazam.android:id/button_skip"/[199,1171]>
2015-12-07 04:31:47.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:47.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:47.605 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-07 04:31:47.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:31:47.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:31:47.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:47.907 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 26}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:47.908 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 04:31:47.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:47.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:47.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:48.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:31:48.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-07 04:31:50.433 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:50.433 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:50.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 04:31:50.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:31:50.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:31:50.840 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:50.840 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 11}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:50.841 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-07 04:31:50.841 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:50.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:50.919 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:50.935 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:31:50.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-07 04:31:53.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:53.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:53.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 04:31:53.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:31:54.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:31:54.348 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:54.348 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 24}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:54.350 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,279]>
2015-12-07 04:31:54.350 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:54.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:54.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:54.432 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:31:54.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,279]>
2015-12-07 04:31:57.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:57.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:57.594 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-07 04:31:57.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:31:57.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:31:57.971 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:31:57.972 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 30}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:31:57.972 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Sign in"/"com.shazam.android:id/button"/[399,881]>
2015-12-07 04:31:57.973 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:31:57.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:31:58.040 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:58.078 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:31:58.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign in"/"com.shazam.android:id/button"/[399,881]>
2015-12-07 04:31:59.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:31:59.914 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:31:59.936 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-07 04:31:59.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:32:00.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:32:00.993 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:32:00.994 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 30}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:32:00.994 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[91,70]>
2015-12-07 04:32:00.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:32:00.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:32:01.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:32:01.127 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:32:01.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[91,70]>
2015-12-07 04:32:03.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:32:03.791 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:32:03.839 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-07 04:32:03.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:32:05.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:32:05.342 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:32:05.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 30}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:32:05.343 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Sign into Facebook"/"com.shazam.android:id/button"/[399,462]>
2015-12-07 04:32:05.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:32:05.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:32:05.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:32:05.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:32:05.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign into Facebook"/"com.shazam.android:id/button"/[399,462]>
2015-12-07 04:32:07.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:32:07.258 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:32:07.333 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-07 04:32:07.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:32:08.816 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:32:09.146 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device) - DONE
2015-12-07 04:32:09.147 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shazam.android. Widgets# 5}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:32:09.147 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-07 04:32:09.148 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shazam.android_v4.9.1-14091210-c329e9a-inlined.apk, device)
2015-12-07 04:32:09.148 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shazam.android
2015-12-07 04:32:37.907 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-07 04:33:11.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:33:11.143 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shpock.android
2015-12-07 04:33:36.677 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:33:36.679 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:33:36.744 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:33:52.833 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:33:52.975 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:33:52.975 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:33:55.028 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:33:55.028 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:33:55.028 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:33:38.916
2015-12-07 04:33:55.028 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:33:55.116 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:33:55.116 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:33:55.255 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 60
2015-12-07 04:33:55.255 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:33:55.492 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:33:55.492 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 15}, DeviceLogs{apiLogs#=60, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:33:55.493 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"Skip"/"com.shpock.android:id/tut_close"/[400,1106]>
2015-12-07 04:33:55.493 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:33:55.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:33:55.555 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:33:55.566 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:33:55.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Skip"/"com.shpock.android:id/tut_close"/[400,1106]>
2015-12-07 04:33:59.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:33:59.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:33:59.769 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 04:33:59.769 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:33:59.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:33:59.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:33:59.907 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:33:59.908 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"shpock.com/privacy"/"com.shpock.android:id/error_location_link"/[472,316]>
2015-12-07 04:33:59.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:33:59.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:33:59.978 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:33:59.988 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:33:59.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"shpock.com/privacy"/"com.shpock.android:id/error_location_link"/[472,316]>
2015-12-07 04:34:06.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:34:06.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:34:06.076 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:34:06.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:34:06.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:34:06.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:34:06.235 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:34:06.236 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-07 04:34:06.236 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:34:06.236 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shpock.android
2015-12-07 04:34:38.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:34:38.504 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:34:38.573 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:34:54.669 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:34:54.702 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:34:54.702 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:34:57.205 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:34:57.206 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:34:57.206 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:34:40.516
2015-12-07 04:34:57.206 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:34:57.293 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:34:57.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:34:57.458 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 58
2015-12-07 04:34:57.458 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:34:57.613 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:34:57.613 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 15}, DeviceLogs{apiLogs#=58, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:34:57.614 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Sign up / Log in"/"com.shpock.android:id/tut_register"/[400,1015]>
2015-12-07 04:34:57.614 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:34:57.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:34:57.691 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:34:57.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:34:57.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign up / Log in"/"com.shpock.android:id/tut_register"/[400,1015]>
2015-12-07 04:34:59.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:34:59.890 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:34:59.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-07 04:34:59.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:00.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:00.187 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:00.187 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 27}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:00.188 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Log in with E-mail + SMS"/"com.shpock.android:id/myshpock_tab_profile_email_button"/[399,965]>
2015-12-07 04:35:00.188 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:00.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:00.264 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:00.277 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:00.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Log in with E-mail + SMS"/"com.shpock.android:id/myshpock_tab_profile_email_button"/[399,965]>
2015-12-07 04:35:03.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:03.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:03.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-07 04:35:03.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:03.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:03.542 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:03.543 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:03.545 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:EditText/""/"com.shpock.android:id/login_email_password_text"/[226,606]>
2015-12-07 04:35:03.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:03.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:03.615 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:03.629 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:03.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.shpock.android:id/login_email_password_text"/[226,606]>
2015-12-07 04:35:06.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:06.146 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:06.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:06.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:06.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:06.305 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:06.305 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:06.306 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"forgot your password?"/"com.shpock.android:id/login_email_forgot_password_button"/[313,712]>
2015-12-07 04:35:06.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:06.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:06.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:06.396 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:06.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"forgot your password?"/"com.shpock.android:id/login_email_forgot_password_button"/[313,712]>
2015-12-07 04:35:10.255 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:10.255 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:10.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-07 04:35:10.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:10.337 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:10.402 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:10.404 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 18}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:10.405 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/"Your e-mail address"/"com.shpock.android:id/login_forgot_password_email_text"/[400,279]>
2015-12-07 04:35:10.405 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:10.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:10.478 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:10.490 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:10.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Your e-mail address"/"com.shpock.android:id/login_forgot_password_email_text"/[400,279]>
2015-12-07 04:35:12.330 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:12.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:12.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:12.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:12.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:12.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:12.462 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:12.462 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[37,70]>
2015-12-07 04:35:12.463 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:12.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:12.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:12.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:12.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[37,70]>
2015-12-07 04:35:14.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:14.574 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:14.594 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-07 04:35:14.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:14.661 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:14.721 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:14.721 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 40}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:14.722 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:EditText/""/"com.shpock.android:id/login_email_password_text"/[226,606]>
2015-12-07 04:35:14.722 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:14.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:14.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:14.806 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:14.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.shpock.android:id/login_email_password_text"/[226,606]>
2015-12-07 04:35:17.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:17.067 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:17.082 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:17.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:17.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:17.237 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:17.237 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:17.238 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"Log in"/"com.shpock.android:id/login_email_login_button"/[139,712]>
2015-12-07 04:35:17.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:17.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:17.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:17.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:17.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Log in"/"com.shpock.android:id/login_email_login_button"/[139,712]>
2015-12-07 04:35:19.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:19.650 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:19.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:19.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:19.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:19.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:19.799 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 40}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:19.800 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"Log in"/""/[200,134]>
2015-12-07 04:35:19.800 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:19.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:19.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:19.894 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:19.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Log in"/""/[200,134]>
2015-12-07 04:35:21.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:21.232 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:21.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:21.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:21.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:21.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:21.387 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 40}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:21.388 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Register"/"com.shpock.android:id/login_email_register_button"/[139,933]>
2015-12-07 04:35:21.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:21.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:21.461 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:21.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:21.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Register"/"com.shpock.android:id/login_email_register_button"/[139,933]>
2015-12-07 04:35:23.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:23.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:23.601 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:23.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:23.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:23.825 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:23.825 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:23.826 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageView/""/"com.shpock.android:id/register_email_avatar"/[119,441]>
2015-12-07 04:35:23.826 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:23.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:23.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:23.914 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:23.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.shpock.android:id/register_email_avatar"/[119,441]>
2015-12-07 04:35:25.960 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:25.960 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:25.978 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:25.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:26.014 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:26.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:26.076 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:26.076 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/"Take a picture"/"android:id/text1"/[400,586]>
2015-12-07 04:35:26.077 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:26.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:35:26.307 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:26.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:35:26.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Take a picture"/"android:id/text1"/[400,586]>
2015-12-07 04:35:28.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:35:28.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:28.243 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-07 04:35:28.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:35:30.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:35:30.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:35:30.387 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.GoogleCamera. Widgets# 25}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:35:30.388 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   17 <ExplAct Reset app>
2015-12-07 04:35:30.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:35:30.388 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.shpock.android
2015-12-07 04:35:59.990 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:35:59.993 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:36:00.061 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:36:15.416 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:36:15.453 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:36:15.453 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:36:17.507 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:36:17.508 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:36:17.508 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:36:01.666
2015-12-07 04:36:17.508 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:36:17.588 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:36:17.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:36:17.705 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 60
2015-12-07 04:36:17.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:36:17.824 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:36:17.825 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.shpock.android. Widgets# 15}, DeviceLogs{apiLogs#=60, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:36:17.825 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-07 04:36:17.826 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-07 04:36:17.826 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device)
2015-12-07 04:36:17.826 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-07 04:36:17.886 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:36:17.899 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:36:17.899 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-07 04:36:17.899 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.shpock.android}
2015-12-07 04:36:18.795 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-07 04:36:18.893 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:36:18.896 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:36:18.896 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-07 04:36:19.072 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-07 04:36:19.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.shpock.android_v2.4.5-inlined.apk, device) - DONE
2015-12-07 04:36:39.840 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.snapchat.android_v5.0.34.6-inlined.apk, device)
2015-12-07 04:36:39.840 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.snapchat.android
2015-12-07 04:37:05.458 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:37:05.461 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-07 04:37:05.535 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-07 04:37:21.738 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-07 04:37:21.785 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-07 04:37:21.785 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-07 04:37:23.845 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-07 04:37:23.845 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-07 04:37:23.845 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-07T04:37:07.366
2015-12-07 04:37:23.845 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-07 04:37:23.936 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-07 04:37:23.936 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:37:23.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 16
2015-12-07 04:37:23.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-07 04:37:24.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.snapchat.android_v5.0.34.6-inlined.apk, device) - DONE
2015-12-07 04:37:24.241 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.snapchat.android. Widgets# 24}, DeviceLogs{apiLogs#=16, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-07 04:37:24.256 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"LOG IN"/"com.snapchat.android:id/login_and_signup_page_fragment_login_button"/[400,1013]>
2015-12-07 04:37:24.256 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.snapchat.android_v5.0.34.6-inlined.apk, device)
2015-12-07 04:37:24.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-07 04:37:24.326 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:37:24.338 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:37:24.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"LOG IN"/"com.snapchat.android:id/login_and_signup_page_fragment_login_button"/[400,1013]>
2015-12-07 04:37:27.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-07 04:37:27.368 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-07 04:37:27.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-07 04:37:27.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-07 04:37:27.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-07 04:37:27.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.snapchat.android_v5.0.34.6-inlined.apk, device) - DONE
2015-12-07 04:37:27.568 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.snapchat.android. Widgets# 26}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-07 04:37:27.589 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct EnterTxt: debugg7                / resId: com.snapchat.android:id/login_username_email_field>
