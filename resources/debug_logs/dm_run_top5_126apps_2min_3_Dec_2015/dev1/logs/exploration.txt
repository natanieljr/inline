2015-12-03 01:04:08.465 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:08.467 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-03 01:04:34.953 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:34.963 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:04:35.059 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:04:46.945 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:04:46.997 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:04:46.998 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:04:49.060 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:04:49.062 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:04:49.086 TRACE o.d.exploration.device.DeviceTimeDiff    computeDiff(device) result:
Current time   : 2015-12-03 01:04:49.082
Device time    : 2015-12-03 01:01:47.230
Resulting diff : PT-3M-1.852S
2015-12-03 01:04:49.090 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:04:37.512
2015-12-03 01:04:49.091 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:04:49.204 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:04:49.204 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:49.262 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:04:49.263 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:04:49.369 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:49.537 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:49.614 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:49.626 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:49.627 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:49.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:49.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:49.757 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:51.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:51.134 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:51.153 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:51.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:51.191 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:51.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:51.266 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:51.281 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:51.282 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:51.283 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:51.360 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:51.375 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:51.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:52.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:52.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:52.740 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:52.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:52.775 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:52.846 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:52.848 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:52.855 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:52.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:52.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:52.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:52.941 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:52.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:54.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:54.287 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:54.301 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:54.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:54.338 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:54.407 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:54.409 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:54.417 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:54.419 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:54.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:54.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:54.510 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:54.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:55.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:55.859 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:55.875 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:55.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:55.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:55.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:55.978 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:55.986 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:55.988 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:55.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:56.064 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:56.085 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:56.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:57.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:57.424 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:57.439 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:57.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:57.472 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:57.540 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:57.542 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:57.551 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:57.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:57.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:57.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:57.637 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:57.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:58.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:04:58.979 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:58.998 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:59.007 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:04:59.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:04:59.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:04:59.120 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:04:59.127 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:04:59.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:04:59.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:04:59.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:04:59.215 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:04:59.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:00.556 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:00.556 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:00.573 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:00.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:00.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:00.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:00.673 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:00.681 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:00.682 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:00.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:00.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:00.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:00.778 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:02.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:02.117 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:02.133 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:02.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:02.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:02.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:02.237 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:02.246 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:02.248 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:02.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:02.317 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:02.331 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:02.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:03.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:03.675 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:03.694 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:03.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:03.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:03.809 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:03.810 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:03.818 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:03.819 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:03.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:03.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:03.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:03.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:05.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:05.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:05.264 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:05.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:05.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:05.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:05.365 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:05.372 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:05.373 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:05.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:05.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:05.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:05.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:06.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:06.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:06.819 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:06.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:06.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:06.918 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:06.919 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:06.927 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:06.928 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:06.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:06.995 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:07.010 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:07.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:08.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:08.356 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:08.375 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:08.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:08.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:08.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:08.512 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:08.519 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:08.520 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:08.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:08.583 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:08.596 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:08.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:09.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:09.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:09.963 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:09.963 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:09.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:10.071 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:10.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:10.080 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:10.082 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:10.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:10.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:10.167 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:10.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:11.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:11.509 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:11.529 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:11.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:11.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:11.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:11.648 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:11.652 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:05:11.654 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 01:05:11.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:11.656 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-03 01:05:37.636 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:37.640 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:05:37.719 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:05:49.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:05:49.990 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:05:49.991 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:05:52.056 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:05:52.056 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:05:52.058 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:05:40.182
2015-12-03 01:05:52.058 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:05:52.177 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:05:52.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:52.216 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:05:52.217 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:05:52.315 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:52.316 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:52.324 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:52.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:52.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:52.395 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:52.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:52.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:53.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:53.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:53.768 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:53.768 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:53.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:53.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:53.878 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:53.887 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:53.889 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:53.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:53.961 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:53.977 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:53.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:55.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:55.323 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:55.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:55.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:55.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:55.453 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:55.454 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:55.462 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:55.464 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:55.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:55.536 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:55.550 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:55.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:56.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:56.891 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:56.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:56.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:56.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:57.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:57.010 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:57.017 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:57.018 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:57.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:57.087 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:57.100 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:57.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:58.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:05:58.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:58.459 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:58.460 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:05:58.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:05:58.577 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:05:58.578 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:05:58.585 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:05:58.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:05:58.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:05:58.662 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:05:58.676 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:05:58.678 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:00.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:00.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:00.036 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:00.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:00.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:00.165 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:00.166 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:00.173 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:00.174 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:00.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:00.252 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:00.271 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:00.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:01.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:01.645 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:01.662 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:01.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:01.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:01.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:01.760 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:01.767 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:01.769 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:01.769 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:01.844 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:01.864 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:01.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:03.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:03.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:03.219 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:03.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:03.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:03.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:03.340 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:03.348 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:03.349 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:03.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:03.425 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:03.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:03.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:04.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:04.781 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:04.796 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:04.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:04.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:04.910 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:04.911 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:04.918 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:04.919 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:04.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:04.998 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:05.019 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:05.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:06.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:06.354 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:06.370 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:06.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:06.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:06.469 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:06.470 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:06.477 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:06.478 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:06.479 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:06.550 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:06.565 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:06.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:07.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:07.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:07.926 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:07.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:07.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:08.048 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:08.049 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:08.060 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:08.062 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:08.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:08.196 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:08.207 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:08.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:09.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:09.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:09.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:09.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:09.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:09.686 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:09.688 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:09.695 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:09.697 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:09.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:09.768 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:09.781 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:09.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:11.123 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:11.124 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:11.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:11.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:11.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:11.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:11.242 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:11.251 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:11.253 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:11.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:11.331 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:11.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:11.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:12.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:12.694 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:12.710 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:12.711 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:12.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:12.807 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:12.808 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:12.817 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:12.818 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:12.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:06:12.895 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:12.908 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:12.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 01:06:14.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:06:14.247 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:14.268 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:14.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:06:14.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:06:14.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:14.389 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:14.393 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:06:14.394 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-03 01:06:14.395 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:14.395 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package air.com.demute.TaoMix
2015-12-03 01:06:40.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:40.453 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:06:40.559 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:06:52.505 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:06:52.562 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:06:52.562 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:06:54.622 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:06:54.623 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:06:54.625 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:06:43.062
2015-12-03 01:06:54.625 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:06:54.745 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:06:54.745 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:54.780 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:06:54.781 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:06:54.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:06:54.909 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{air.com.demute.TaoMix. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:06:54.913 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:06:54.920 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:06:54.926 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device)
2015-12-03 01:06:54.926 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:06:55.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:55.027 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:06:55.028 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:06:55.028 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package air.com.demute.TaoMix}
2015-12-03 01:06:56.027 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:06:56.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:06:56.119 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:06:56.120 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:06:56.208 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:06:56.288 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=air.com.demute.TaoMix_v1.1.13-inlined.apk, device) - DONE
2015-12-03 01:07:09.622 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:09.622 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-03 01:07:35.342 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:35.346 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:07:35.445 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:07:48.021 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:07:48.078 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:07:48.079 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:07:50.136 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:07:50.137 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:07:50.139 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:07:37.422
2015-12-03 01:07:50.139 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:07:50.267 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:07:50.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:50.308 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 01:07:50.308 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:07:50.443 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:07:50.445 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:07:50.453 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-03 01:07:50.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:50.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:07:50.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:50.546 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:50.547 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-03 01:07:52.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:07:52.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:52.516 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:52.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:07:52.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:07:52.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:07:52.706 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:07:52.715 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:07:52.716 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:52.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:07:52.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:52.814 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:52.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:07:56.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:07:56.283 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:56.300 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:56.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:07:56.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:07:56.523 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:07:56.524 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:07:56.532 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-03 01:07:56.534 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:56.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:07:56.616 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:56.631 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:56.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-03 01:07:58.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:07:58.043 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:58.057 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:58.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:07:58.144 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:07:58.221 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:07:58.223 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:07:58.235 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:07:58.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:58.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:07:58.333 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:58.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:07:58.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:07:59.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:07:59.706 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:07:59.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:07:59.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:07:59.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:07:59.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:07:59.901 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:07:59.909 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-03 01:07:59.911 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:07:59.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:07:59.990 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:00.004 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:00.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-03 01:08:01.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:01.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:01.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:01.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:01.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:01.605 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:01.606 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:01.615 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:01.616 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:01.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:01.688 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:01.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:01.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:03.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:03.105 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:03.129 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:08:03.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:03.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:03.288 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:03.290 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:03.299 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-03 01:08:03.300 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:03.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:03.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:03.393 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:03.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-03 01:08:05.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:05.494 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:05.509 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:05.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:05.607 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:05.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:05.693 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:05.710 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-03 01:08:05.713 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:05.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:05.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:05.813 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:05.814 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-03 01:08:07.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:07.940 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:07.956 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:07.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:08.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:08.153 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:08.155 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:08.166 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:08.167 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:08.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:08.246 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:08.260 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:08.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:10.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:10.122 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:10.149 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:08:10.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:10.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:10.328 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:10.329 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:10.341 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-03 01:08:10.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:10.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:10.428 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:10.442 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:10.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-03 01:08:12.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:12.493 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:12.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:12.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:12.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:12.709 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:12.711 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:12.729 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-03 01:08:12.731 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:12.731 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:12.813 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:12.829 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:12.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-03 01:08:14.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:14.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:14.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:14.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:15.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:15.087 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:15.089 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:15.101 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:15.103 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:15.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:15.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:15.201 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:15.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:08:17.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:17.046 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:17.075 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:08:17.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:17.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:17.256 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:17.257 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:17.272 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-03 01:08:17.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:17.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:17.350 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:17.364 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:17.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-03 01:08:19.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:19.420 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:19.438 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:19.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:19.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:19.623 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:19.624 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:19.636 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-03 01:08:19.638 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:19.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:08:19.705 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:19.719 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:19.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-03 01:08:21.168 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:08:21.168 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:21.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:08:21.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:08:21.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:08:21.367 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:08:21.369 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:08:21.377 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:08:21.380 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 01:08:21.381 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:08:21.382 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-03 01:08:47.349 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:08:47.353 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:08:47.483 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:08:58.126 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:08:58.172 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:08:58.172 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:09:00.231 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:09:00.232 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:09:00.233 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:08:49.422
2015-12-03 01:09:00.233 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:09:00.350 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:09:00.350 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:00.395 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 01:09:00.395 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:09:00.513 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:00.515 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:00.530 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-03 01:09:00.531 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:00.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:00.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:00.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:00.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-03 01:09:02.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:02.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:02.193 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:02.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:02.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:02.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:02.360 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:02.374 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-03 01:09:02.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:02.375 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:02.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:02.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:02.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-03 01:09:03.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:03.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:03.832 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:03.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:03.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:04.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:04.026 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:04.041 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:09:04.043 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:04.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:04.126 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:04.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:04.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:09:06.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:06.526 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:06.544 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:06.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:06.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:06.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:06.789 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:06.805 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-03 01:09:06.808 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:06.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:06.894 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:06.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:06.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-03 01:09:08.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:08.889 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:08.909 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:08.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:08.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:09.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:09.074 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:09.087 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:09:09.088 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:09.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:09.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:09.189 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:09.191 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-03 01:09:10.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:10.642 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:10.660 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:10.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:10.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:10.862 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:10.864 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:10.884 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[91,70]>
2015-12-03 01:09:10.886 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:10.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:10.982 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:10.996 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:10.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[91,70]>
2015-12-03 01:09:13.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:13.374 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:13.388 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:13.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:13.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:13.645 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:13.647 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 45}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:13.663 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:09:13.666 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:13.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:13.757 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:13.772 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:13.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-03 01:09:15.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:15.234 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:15.247 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:15.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:15.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:15.426 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:15.427 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 45}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:15.446 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[105,70]>
2015-12-03 01:09:15.448 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:15.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:15.529 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:15.541 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:15.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[105,70]>
2015-12-03 01:09:17.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:17.945 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:17.960 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:17.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:18.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:18.163 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:18.164 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:18.178 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,518]>
2015-12-03 01:09:18.181 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:18.182 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:18.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:18.291 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:18.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,518]>
2015-12-03 01:09:19.627 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:19.627 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:19.643 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:19.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:19.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:19.831 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:19.832 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:19.852 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,392]>
2015-12-03 01:09:19.854 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:19.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:19.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:19.991 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:19.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,392]>
2015-12-03 01:09:21.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:21.341 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:21.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:21.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:21.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:21.588 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:21.589 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:21.609 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,455]>
2015-12-03 01:09:21.611 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:21.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:21.694 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:21.713 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:21.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,455]>
2015-12-03 01:09:23.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:23.046 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:23.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:23.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:23.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:23.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:23.243 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:23.263 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,140]>
2015-12-03 01:09:23.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:23.265 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:23.346 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:23.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:23.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,140]>
2015-12-03 01:09:24.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:24.705 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:24.718 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:24.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:24.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:24.927 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:24.928 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:24.951 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:ListView/""/"animaonline.android.wikiexplorer:id/left_drawer"/[133,455]>
2015-12-03 01:09:24.956 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:24.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:25.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:25.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:25.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"animaonline.android.wikiexplorer:id/left_drawer"/[133,455]>
2015-12-03 01:09:26.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:26.408 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:26.421 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:26.422 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:26.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:26.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:26.661 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:26.683 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,644]>
2015-12-03 01:09:26.685 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:26.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:09:26.774 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:26.791 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:26.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"animaonline.android.wikiexplorer:id/relativeLayout1"/[133,644]>
2015-12-03 01:09:28.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:09:28.131 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:28.149 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:09:28.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:09:28.265 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:09:28.350 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:09:28.352 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 59}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:09:28.366 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:09:28.369 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-03 01:09:28.371 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:09:28.372 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-03 01:09:54.431 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:09:54.435 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:09:54.521 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:10:07.160 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:10:07.218 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:10:07.219 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:10:09.273 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:10:09.275 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:10:09.279 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:09:56.892
2015-12-03 01:10:09.279 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:10:09.416 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:10:09.417 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:09.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 01:10:09.455 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:10:09.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:10:09.599 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:10:09.610 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:10:09.613 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:10:09.615 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-03 01:10:09.616 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:10:09.699 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:09.716 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:10:09.717 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:10:09.717 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package animaonline.android.wikiexplorer}
2015-12-03 01:10:10.751 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:10:10.858 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:10.862 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:10:10.862 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:10:10.950 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:10:11.034 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-03 01:10:20.094 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:10:20.094 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-03 01:10:45.886 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:45.890 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:10:45.971 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:10:56.141 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:10:56.180 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:10:56.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:10:58.231 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:10:58.232 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:10:58.234 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:10:47.922
2015-12-03 01:10:58.235 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:10:58.346 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:10:58.346 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:58.429 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 01:10:58.429 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:10:58.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:10:58.554 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:10:58.563 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-03 01:10:58.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:10:58.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:10:58.645 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:10:58.664 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:10:58.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-03 01:11:00.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:00.164 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:00.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:00.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:00.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:00.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:00.295 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:00.308 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-03 01:11:00.310 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:00.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:00.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:00.405 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:00.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-03 01:11:02.366 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:02.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:02.398 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:11:02.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:02.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:02.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:02.572 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:02.582 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ListView/""/"arlind.Shqip:id/list_channelset"/[400,129]>
2015-12-03 01:11:02.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:02.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:02.662 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:02.678 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:02.680 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"arlind.Shqip:id/list_channelset"/[400,129]>
2015-12-03 01:11:04.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:04.842 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:04.859 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:04.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:04.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:05.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:05.025 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:05.037 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:11:05.039 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:05.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:05.120 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:05.138 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:05.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:11:07.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:07.251 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:07.277 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:11:07.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:07.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:07.404 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:07.406 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:07.414 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:11:07.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:07.416 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-03 01:11:33.586 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:33.590 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:11:33.679 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:11:44.130 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:11:44.181 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:11:44.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:11:46.223 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:11:46.224 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:11:46.225 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:11:36.022
2015-12-03 01:11:46.225 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:11:46.320 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:11:46.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:46.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 22
2015-12-03 01:11:46.419 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:11:46.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:46.662 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 13}, DeviceLogs{apiLogs#=22, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:46.674 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Info"/"android:id/text1"/[400,129]>
2015-12-03 01:11:46.677 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:46.678 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:46.789 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:46.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:11:46.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Info"/"android:id/text1"/[400,129]>
2015-12-03 01:11:48.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:48.717 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:48.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:48.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:48.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:49.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:49.074 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 8}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:49.084 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-03 01:11:49.086 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:49.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:49.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:49.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:49.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-03 01:11:51.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:51.118 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:51.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:11:51.144 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:51.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:51.304 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:51.305 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:51.315 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:11:51.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:51.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:11:51.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:51.416 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:11:51.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:11:53.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:11:53.493 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:11:53.522 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:11:53.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:11:53.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:11:53.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:11:53.648 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:11:53.654 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 01:11:53.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:11:53.656 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-03 01:12:19.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:19.729 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:12:19.810 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:12:29.982 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:12:30.026 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:12:30.026 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:12:32.072 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:12:32.073 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:12:32.074 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:12:22.082
2015-12-03 01:12:32.075 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:12:32.165 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:12:32.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:32.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 01:12:32.234 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:12:32.351 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:12:32.352 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:12:32.374 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-03 01:12:32.378 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:12:32.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:12:32.456 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:32.472 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:12:32.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-03 01:12:34.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:12:34.470 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:34.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:12:34.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:12:34.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:12:34.690 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:12:34.692 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:12:34.703 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:12:34.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:12:34.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:12:34.792 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:34.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:12:34.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-03 01:12:36.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:12:36.860 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:12:36.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:12:36.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:12:36.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:12:37.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:12:37.025 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:12:37.031 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-03 01:12:37.033 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:12:37.033 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-03 01:13:02.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:13:02.980 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:13:03.058 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:13:13.057 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:13:13.104 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:13:13.104 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:13:15.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:13:15.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:13:15.160 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:13:04.972
2015-12-03 01:13:15.161 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:13:15.259 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:13:15.259 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:13:15.334 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 01:13:15.334 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:13:15.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:13:15.441 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:13:15.446 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:13:15.447 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:13:15.449 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-03 01:13:15.449 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:13:15.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:13:15.569 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:13:15.570 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:13:15.570 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package arlind.Shqip}
2015-12-03 01:13:16.458 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:13:16.528 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:13:16.531 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:13:16.531 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:13:16.606 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:13:16.684 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-03 01:13:52.915 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=cn.wps.moffice_eng_v6.1.1-inlined.apk, device)
2015-12-03 01:13:52.915 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package cn.wps.moffice_eng
2015-12-03 01:14:18.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:14:18.548 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:14:18.635 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:14:34.796 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:14:34.849 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:14:34.849 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:14:36.889 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:14:36.890 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:14:49.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:14:49.023 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-03 01:15:14.851 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:14.855 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:15:14.937 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:15:23.098 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:15:23.145 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:15:23.145 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:15:25.187 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:15:25.188 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:15:25.191 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:15:16.862
2015-12-03 01:15:25.191 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:15:25.291 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:15:25.291 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:25.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:15:25.317 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:15:25.548 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:15:25.551 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:15:25.563 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Sky, Time And Light Settings"/"com.adermark.forestpondfree:id/btnSkyTimeLightSettings"/[400,819]>
2015-12-03 01:15:25.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:15:25.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:15:25.649 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:25.663 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:15:25.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sky, Time And Light Settings"/"com.adermark.forestpondfree:id/btnSkyTimeLightSettings"/[400,819]>
2015-12-03 01:15:27.730 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:15:27.730 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:27.745 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:15:27.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:15:27.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:15:27.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:15:27.983 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:15:27.996 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-03 01:15:27.998 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:15:27.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:15:28.082 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:28.096 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:15:28.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-03 01:15:35.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:15:35.464 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:15:35.487 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:15:35.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:15:36.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:15:36.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:15:36.131 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 88}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:15:36.138 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-03 01:15:36.139 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:15:36.139 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-03 01:16:04.867 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:16:04.870 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:16:04.950 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:16:13.156 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:16:13.194 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:16:13.195 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:16:15.243 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:16:15.244 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:16:15.245 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:16:06.982
2015-12-03 01:16:15.245 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:16:15.348 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:16:15.348 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:16:15.376 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:16:15.376 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:16:15.590 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:16:15.593 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:16:15.610 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Get Full Version!"/"com.adermark.forestpondfree:id/btnUnlockSettings"/[400,210]>
2015-12-03 01:16:15.613 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:16:15.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:16:15.699 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:16:15.712 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:16:15.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get Full Version!"/"com.adermark.forestpondfree:id/btnUnlockSettings"/[400,210]>
2015-12-03 01:16:22.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:16:22.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:16:22.264 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:16:22.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:16:22.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:16:22.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:16:22.692 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:16:22.702 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:16:22.704 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:16:22.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-03 01:16:52.001 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:16:52.005 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:16:52.086 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:17:00.617 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:17:00.657 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:17:00.657 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:17:02.707 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:17:02.708 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:17:02.709 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:16:54.402
2015-12-03 01:17:02.709 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:17:02.816 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:17:02.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:02.845 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:17:02.846 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:17:03.073 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:17:03.075 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:17:03.095 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckBox/"Bird Hunt Mode"/"com.adermark.forestpondfree:id/cbBirdHuntMode"/[400,432]>
2015-12-03 01:17:03.098 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:17:03.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:17:03.189 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:03.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:03.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Bird Hunt Mode"/"com.adermark.forestpondfree:id/cbBirdHuntMode"/[400,432]>
2015-12-03 01:17:05.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:17:05.205 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:05.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:05.223 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:17:05.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:17:05.435 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:17:05.436 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:17:05.454 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"General Wallpaper Settings"/"com.adermark.forestpondfree:id/btnWallpaperSettings"/[400,1135]>
2015-12-03 01:17:05.457 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:17:05.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:17:05.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:05.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:05.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"General Wallpaper Settings"/"com.adermark.forestpondfree:id/btnWallpaperSettings"/[400,1135]>
2015-12-03 01:17:07.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:17:07.522 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:07.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:07.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:17:07.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:17:07.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:17:07.729 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:17:07.746 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-03 01:17:07.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:17:07.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:17:07.838 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:07.854 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:07.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Juicy Clouds"/"com.adermark.forestpondfree:id/btnPromo"/[400,284]>
2015-12-03 01:17:20.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:17:20.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:20.159 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:17:20.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:17:20.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:17:20.604 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:17:20.605 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 88}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:17:20.618 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 01:17:20.621 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:17:20.621 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adermark.forestpondfree
2015-12-03 01:17:48.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:48.874 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:17:48.952 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:17:57.162 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:17:57.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:17:57.216 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:17:59.265 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:17:59.266 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:17:59.269 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:17:51.022
2015-12-03 01:17:59.270 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:17:59.373 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:17:59.374 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:59.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:17:59.406 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:17:59.641 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:17:59.642 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adermark.forestpondfree. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:17:59.651 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:17:59.653 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:17:59.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device)
2015-12-03 01:17:59.657 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:17:59.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:17:59.756 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:17:59.757 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:17:59.757 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.adermark.forestpondfree}
2015-12-03 01:18:00.822 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:18:00.899 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:18:00.902 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:18:00.903 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:18:00.977 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:18:01.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adermark.forestpondfree_v1.06-inlined.apk, device) - DONE
2015-12-03 01:18:17.786 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:18:17.786 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-03 01:18:43.501 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:18:43.505 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:18:43.584 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:18:55.960 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:18:56.016 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:18:56.016 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:18:58.067 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:18:58.068 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:18:58.071 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:18:45.692
2015-12-03 01:18:58.071 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:18:58.171 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:18:58.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:18:58.211 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:18:58.211 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:18:58.397 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:18:58.400 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:18:58.411 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-03 01:18:58.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:18:58.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:18:58.493 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:18:58.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:18:58.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-03 01:19:00.395 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:00.396 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:00.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:00.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:00.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:00.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:00.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:00.632 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-03 01:19:00.634 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:00.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:00.709 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:00.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:00.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-03 01:19:02.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:02.671 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:02.684 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:02.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:02.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:02.875 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:02.876 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:02.892 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-03 01:19:02.894 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:02.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:02.973 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:02.989 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:02.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-03 01:19:04.335 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:04.335 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:04.351 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:04.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:04.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:04.550 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:04.552 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:04.567 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-03 01:19:04.569 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:04.570 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:04.647 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:04.662 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:04.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-03 01:19:06.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:06.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:06.558 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:06.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:06.680 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:06.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:06.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:06.771 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-03 01:19:06.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:06.774 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:06.863 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:06.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:06.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-03 01:19:08.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:08.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:08.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:08.778 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:08.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:08.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:08.984 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:09.000 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-03 01:19:09.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:09.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:09.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:09.092 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:09.094 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-03 01:19:11.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:11.072 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:11.089 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:11.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:11.182 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:11.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:11.266 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:11.282 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-03 01:19:11.284 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:11.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:11.365 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:11.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:11.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-03 01:19:12.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:19:12.730 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:12.761 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:19:12.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:19:14.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:19:14.991 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:14.993 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 24}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:15.000 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-03 01:19:15.003 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:15.004 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-03 01:19:43.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:43.414 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:19:43.498 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:19:56.075 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:19:56.125 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:19:56.125 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:19:58.176 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:19:58.177 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:19:58.178 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:19:45.622
2015-12-03 01:19:58.179 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:19:58.278 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:19:58.278 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:58.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:19:58.320 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:19:58.490 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:19:58.492 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:19:58.506 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-03 01:19:58.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:19:58.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:19:58.597 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:19:58.614 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:19:58.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-03 01:20:00.573 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:00.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:00.585 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:00.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:00.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:00.807 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:00.808 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:00.822 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-03 01:20:00.824 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:00.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:00.898 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:00.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:00.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-03 01:20:02.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:02.804 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:02.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:02.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:02.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:03.046 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:03.047 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:03.064 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-03 01:20:03.066 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:03.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:03.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:03.174 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:03.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-03 01:20:05.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:05.042 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:05.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:05.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:05.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:05.269 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:05.270 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:05.284 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-03 01:20:05.288 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:05.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:05.375 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:05.394 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:05.395 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-03 01:20:07.257 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:07.258 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:07.272 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:07.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:07.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:07.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:07.488 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:07.505 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-03 01:20:07.507 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:07.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:07.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:07.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:07.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-03 01:20:08.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:08.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:08.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:08.972 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:09.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:09.175 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:09.177 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:09.198 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 01:20:09.200 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:09.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:09.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:09.310 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:09.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 01:20:11.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:11.326 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:11.344 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:11.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:11.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:11.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:11.517 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:11.530 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-03 01:20:11.531 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:11.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:11.615 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:11.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:11.631 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-03 01:20:14.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:14.040 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:14.069 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:20:14.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:14.181 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:14.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:14.251 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:14.263 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-03 01:20:14.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:14.265 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:14.337 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:14.352 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:14.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-03 01:20:16.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:16.405 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:16.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:16.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:16.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:16.640 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:16.641 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:16.654 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-03 01:20:16.657 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:16.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:16.736 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:16.757 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:16.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-03 01:20:18.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:18.938 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:18.975 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:20:18.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:19.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:19.142 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:19.143 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:19.160 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,509]>
2015-12-03 01:20:19.162 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:19.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:19.250 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:19.265 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:19.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,509]>
2015-12-03 01:20:21.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:21.531 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:21.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:20:21.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:21.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:21.682 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:21.684 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:21.698 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,582]>
2015-12-03 01:20:21.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:21.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:21.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:21.800 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:21.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,582]>
2015-12-03 01:20:23.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:23.398 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:23.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:23.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:23.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:23.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:23.553 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:23.569 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,684]>
2015-12-03 01:20:23.572 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:23.572 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:23.653 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:23.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:23.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,684]>
2015-12-03 01:20:25.013 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:25.014 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:25.029 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:25.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:25.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:25.204 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:25.205 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:25.222 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-03 01:20:25.225 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:25.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:25.308 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:25.324 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:25.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-03 01:20:26.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:26.666 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:26.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:26.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:26.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:26.870 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:26.872 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:26.888 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-03 01:20:26.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:26.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:20:26.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:26.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:26.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-03 01:20:29.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:20:29.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:29.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:20:29.071 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:20:29.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:20:29.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:20:29.260 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:20:29.271 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:20:29.274 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   24 <ExplAct Reset app>
2015-12-03 01:20:29.276 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:20:29.276 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-03 01:20:55.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:20:55.405 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:20:55.482 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:21:08.120 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:21:08.166 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:21:08.166 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:21:10.224 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:21:10.224 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:21:10.226 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:20:57.702
2015-12-03 01:21:10.226 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:21:10.336 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:21:10.336 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:21:10.379 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:21:10.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:21:10.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:21:10.575 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:21:10.583 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:21:10.585 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:21:10.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-03 01:21:10.587 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:21:10.671 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:21:10.696 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:21:10.696 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:21:10.696 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.adobe.reader}
2015-12-03 01:21:11.626 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:21:11.690 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:21:11.694 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:21:11.694 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:21:11.799 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:21:11.880 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-03 01:21:29.396 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:21:29.396 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-03 01:21:55.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:21:55.024 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:21:55.108 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:22:06.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:22:06.990 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:22:06.990 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:22:09.038 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:22:09.040 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:22:09.045 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:21:56.992
2015-12-03 01:22:09.045 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:22:09.166 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:22:09.166 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:09.226 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:22:09.226 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:22:09.532 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:09.536 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:09.549 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-03 01:22:09.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:09.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:09.632 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:09.648 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:09.649 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-03 01:22:11.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:11.819 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:11.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:11.838 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:12.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:12.151 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:12.153 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 56}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:12.170 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-03 01:22:12.173 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:12.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:12.248 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:12.262 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:12.265 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-03 01:22:14.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:14.721 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:14.746 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:14.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:15.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:15.876 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:15.878 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 95}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:15.898 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-03 01:22:15.901 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:15.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:15.984 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:15.997 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:15.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-03 01:22:19.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:19.749 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:19.831 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:22:19.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:19.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:20.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:20.068 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:20.086 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-03 01:22:20.089 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:20.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:20.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:20.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:20.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-03 01:22:22.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:22.968 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:22.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:22.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:23.467 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:23.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:23.554 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:23.576 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-03 01:22:23.577 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:23.578 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:23.658 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:23.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:23.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-03 01:22:25.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:25.532 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:25.551 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:25.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:25.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:25.751 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:25.752 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:25.771 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-03 01:22:25.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:25.774 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:25.867 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:25.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:25.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-03 01:22:28.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:28.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:28.546 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:22:28.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:28.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:28.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:28.729 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:28.748 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-03 01:22:28.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:28.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:28.835 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:28.847 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:28.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-03 01:22:30.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:30.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:30.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:30.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:31.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:31.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:31.127 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:31.145 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-03 01:22:31.147 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:31.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:31.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:31.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:31.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-03 01:22:33.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:33.081 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:33.096 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:33.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:33.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:33.244 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:33.245 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:33.263 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-03 01:22:33.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:33.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:33.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:33.353 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:33.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-03 01:22:35.182 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:35.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:35.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:35.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:35.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:35.337 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:35.338 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:35.360 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-03 01:22:35.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:35.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:35.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:35.466 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:35.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-03 01:22:36.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:36.806 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:36.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:36.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:36.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:36.949 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:36.951 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:36.976 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-03 01:22:36.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:36.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:37.079 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:37.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:37.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-03 01:22:38.431 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:38.431 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:38.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:38.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:38.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:38.621 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:38.623 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:38.640 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-03 01:22:38.643 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:38.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:38.731 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:38.758 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:38.759 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-03 01:22:40.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:40.093 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:40.111 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:40.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:40.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:40.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:40.276 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:40.297 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-03 01:22:40.298 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:40.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:40.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:40.384 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:40.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-03 01:22:42.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:42.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:42.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:42.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:42.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:42.361 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:42.363 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:42.383 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-03 01:22:42.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:42.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:22:42.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:42.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:42.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-03 01:22:43.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:22:43.821 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:22:43.834 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:22:43.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:22:43.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:22:43.971 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:22:43.973 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:22:43.988 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:22:43.992 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 01:22:43.994 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:22:43.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-03 01:23:10.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:10.184 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:23:10.257 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:23:22.403 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:23:22.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:23:22.456 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:23:24.511 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:23:24.512 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:23:24.513 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:23:12.152
2015-12-03 01:23:24.514 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:23:24.629 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:23:24.629 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:24.698 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:23:24.699 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:23:24.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:24.945 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:24.973 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-03 01:23:24.975 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:24.975 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:25.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:25.074 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:25.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-03 01:23:26.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:26.913 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:26.933 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:26.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:27.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:27.127 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:27.130 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:27.155 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-03 01:23:27.158 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:27.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:27.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:27.264 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:27.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-03 01:23:29.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:29.244 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:29.260 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:29.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:29.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:29.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:29.592 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:29.614 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/evMinusButton"/[50,159]>
2015-12-03 01:23:29.616 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:29.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:29.704 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:29.730 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:29.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/evMinusButton"/[50,159]>
2015-12-03 01:23:31.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:31.827 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:31.854 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:31.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:32.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:32.164 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:32.166 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:32.186 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-03 01:23:32.189 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:32.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:32.279 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:32.296 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:32.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/focusButton"/[500,50]>
2015-12-03 01:23:34.358 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:34.358 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:34.378 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:34.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:34.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:34.676 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:34.678 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 41}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:34.698 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-03 01:23:34.701 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:34.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:34.781 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:34.796 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:34.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-03 01:23:36.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:36.944 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:36.960 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:36.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:37.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:37.193 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:37.194 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 51}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:37.217 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:GridView/""/"com.almalence.opencam:id/focusmodeGrid"/[273,199]>
2015-12-03 01:23:37.220 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:37.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:37.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:37.322 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:37.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/"com.almalence.opencam:id/focusmodeGrid"/[273,199]>
2015-12-03 01:23:38.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:38.710 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:38.724 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:38.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:38.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:38.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:38.983 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 51}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:39.008 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-03 01:23:39.011 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:39.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:39.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:39.118 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:39.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/evButton"/[100,50]>
2015-12-03 01:23:41.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:41.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:41.049 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:41.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:41.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:41.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:41.244 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 43}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:41.261 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonGallery"/[133,1155]>
2015-12-03 01:23:41.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:41.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:23:41.348 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:41.362 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:23:41.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonGallery"/[133,1155]>
2015-12-03 01:23:44.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:23:44.492 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:23:44.529 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:23:44.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:23:44.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:23:44.769 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:23:44.771 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{"Complete action using" dialog box.}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:23:44.786 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   25 <ExplAct Reset app>
2015-12-03 01:23:44.789 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:23:44.789 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-03 01:24:10.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:24:10.820 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:24:10.897 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:24:21.508 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:24:21.563 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:24:21.564 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:24:23.610 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:24:23.611 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:24:23.612 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:24:12.812
2015-12-03 01:24:23.613 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:24:23.727 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:24:23.727 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:24:23.775 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:24:23.775 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:24:23.991 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:24:23.993 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:24:24.003 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:24:24.006 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:24:24.008 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-03 01:24:24.009 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:24:24.086 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:24:24.099 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:24:24.100 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:24:24.100 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.almalence.opencam}
2015-12-03 01:24:25.057 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:24:25.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:24:25.132 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:24:25.133 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:24:25.210 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:24:25.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-03 01:24:46.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device)
2015-12-03 01:24:46.100 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.AnatomyLearning.Anatomy3DViewer3
2015-12-03 01:25:11.760 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:25:11.764 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:25:11.846 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:25:20.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:25:20.779 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:25:20.780 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:25:22.838 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:25:22.839 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:25:22.842 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:25:14.322
2015-12-03 01:25:22.843 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:25:22.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:25:22.941 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:25:22.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:25:22.984 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:25:23.091 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device) - DONE
2015-12-03 01:25:23.095 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.AnatomyLearning.Anatomy3DViewer3. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:25:23.101 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.AnatomyLearning.Anatomy3DViewer3 Widgets count = 5>
2015-12-03 01:25:23.103 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:25:23.105 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device)
2015-12-03 01:25:23.105 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:25:23.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:25:23.197 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:25:23.198 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:25:23.198 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.AnatomyLearning.Anatomy3DViewer3}
2015-12-03 01:25:24.249 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:25:24.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:25:24.324 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:25:24.324 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:25:24.429 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:25:24.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.AnatomyLearning.Anatomy3DViewer3_v1.0-inlined.apk, device) - DONE
2015-12-03 01:25:34.905 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:25:34.905 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-03 01:26:00.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:26:00.525 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:26:00.598 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:26:11.495 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:26:11.532 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:26:11.533 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:26:13.578 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:26:13.579 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:26:13.583 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:26:02.782
2015-12-03 01:26:13.583 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:26:13.697 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:26:13.697 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:26:13.760 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 01:26:13.761 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:26:13.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:26:13.944 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:26:13.959 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[401,662]>
2015-12-03 01:26:13.961 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:26:13.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:26:14.047 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:26:14.066 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:26:14.067 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[401,662]>
2015-12-03 01:26:20.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:26:20.586 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:26:20.622 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:26:20.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:26:20.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:26:21.003 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:26:21.005 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 86}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:26:21.013 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-03 01:26:21.015 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:26:21.015 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-03 01:26:49.211 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:26:49.215 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:26:49.288 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:26:59.479 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:26:59.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:26:59.526 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:27:01.570 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:27:01.571 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:27:01.572 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:26:51.482
2015-12-03 01:27:01.572 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:27:01.679 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:27:01.679 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:01.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:27:01.739 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:27:01.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:01.915 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:01.931 INFO  o.d.e.strategy.ExplorationStrategy         0m 47s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[401,570]>
2015-12-03 01:27:01.933 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:01.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:27:02.016 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:02.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:02.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[401,570]>
2015-12-03 01:27:07.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:27:07.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:07.127 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:27:07.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:27:07.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:27:07.555 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:07.556 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 86}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:07.567 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 01:27:07.570 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:07.570 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-03 01:27:35.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:35.786 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:27:35.870 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:27:46.235 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:27:46.283 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:27:46.283 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:27:48.335 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:27:48.336 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:27:48.337 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:27:37.732
2015-12-03 01:27:48.337 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:27:48.434 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:27:48.434 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:48.514 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:27:48.515 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:27:48.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:48.689 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:48.711 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"com.androidwasabi.livewallpaper.g3:id/ad_list"/[401,616]>
2015-12-03 01:27:48.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:48.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:27:48.791 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:48.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:48.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.androidwasabi.livewallpaper.g3:id/ad_list"/[401,616]>
2015-12-03 01:27:50.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:27:50.273 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:50.293 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:50.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:27:50.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:27:50.463 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:50.464 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:50.480 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Skip"/"android:id/button2"/[401,752]>
2015-12-03 01:27:50.482 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:50.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:27:50.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:50.617 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:50.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Skip"/"android:id/button2"/[401,752]>
2015-12-03 01:27:51.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:27:51.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:51.986 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:27:51.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:27:52.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:27:52.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:52.135 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 22}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:52.150 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"More FREE Apps"/"com.androidwasabi.livewallpaper.g3:id/app_wall"/[597,482]>
2015-12-03 01:27:52.153 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:52.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:27:52.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:52.246 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:52.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"More FREE Apps"/"com.androidwasabi.livewallpaper.g3:id/app_wall"/[597,482]>
2015-12-03 01:27:56.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:27:56.194 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:56.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 01:27:56.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:27:56.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:27:56.365 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:27:56.367 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 24}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:27:56.388 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[400,329]>
2015-12-03 01:27:56.390 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:27:56.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:27:56.457 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:27:56.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:27:56.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,329]>
2015-12-03 01:28:01.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:28:01.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:28:01.041 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:28:01.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:28:01.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:28:01.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:28:01.415 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 83}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:28:01.428 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 01:28:01.430 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:28:01.430 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.androidwasabi.livewallpaper.g3
2015-12-03 01:28:29.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:28:29.510 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:28:29.590 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:28:39.048 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:28:39.092 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:28:39.093 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:28:41.142 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:28:41.142 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:28:41.144 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:28:31.452
2015-12-03 01:28:41.144 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:28:41.239 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:28:41.239 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:28:41.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:28:41.322 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:28:41.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:28:41.501 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.androidwasabi.livewallpaper.g3. Widgets# 25}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:28:41.508 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:28:41.510 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:28:41.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device)
2015-12-03 01:28:41.513 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:28:41.592 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:28:41.607 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:28:41.608 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:28:41.608 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.androidwasabi.livewallpaper.g3}
2015-12-03 01:28:42.640 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:28:42.713 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:28:42.717 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:28:42.717 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:28:42.806 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:28:42.884 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.androidwasabi.livewallpaper.g3_v1.0.2-inlined.apk, device) - DONE
2015-12-03 01:29:03.180 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:29:03.181 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-03 01:29:28.880 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:28.884 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:29:28.967 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:29:41.818 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:29:41.870 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:29:41.871 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:29:43.920 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:29:43.922 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:29:43.925 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:29:31.112
2015-12-03 01:29:43.925 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:29:44.025 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:29:44.025 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:44.071 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:29:44.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:29:44.216 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:29:44.220 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:29:44.236 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:29:44.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:29:44.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:29:44.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:44.335 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:29:44.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:29:46.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:29:46.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:46.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-03 01:29:46.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:29:46.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:29:46.961 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:29:46.963 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 41}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:29:46.980 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-03 01:29:46.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:29:46.982 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:29:47.064 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:47.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:29:47.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-03 01:29:49.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:29:49.483 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:49.537 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 01:29:49.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:29:49.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:29:49.822 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:29:49.824 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 54}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:29:49.838 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"Protect another device"/"com.antivirus:id/protect_another_device"/[399,1175]>
2015-12-03 01:29:49.840 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:29:49.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:29:49.920 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:49.935 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:29:49.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Protect another device"/"com.antivirus:id/protect_another_device"/[399,1175]>
2015-12-03 01:29:57.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:29:57.272 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:29:57.299 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:29:57.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:29:57.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:29:57.942 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:29:57.944 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 85}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:29:57.957 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 01:29:57.959 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:29:57.960 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-03 01:30:26.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:26.068 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:30:26.142 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:30:39.395 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:30:39.446 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:30:39.446 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:30:41.509 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:30:41.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:30:41.511 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:30:28.342
2015-12-03 01:30:41.512 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:30:41.595 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:30:41.595 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:41.642 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:30:41.643 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:30:41.772 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:30:41.774 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:30:41.798 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:30:41.800 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:30:41.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:30:41.890 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:41.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:30:41.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:30:43.772 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:30:43.772 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:43.788 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:30:43.788 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:30:43.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:30:43.929 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:30:43.931 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:30:43.944 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:30:43.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:30:43.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:30:44.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:44.049 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:30:44.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:30:46.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:30:46.288 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:46.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-03 01:30:46.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:30:46.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:30:46.531 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:30:46.533 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 41}, DeviceLogs{apiLogs#=21, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:30:46.551 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Buy PRO Now"/"com.antivirus:id/buy_pro"/[209,1160]>
2015-12-03 01:30:46.552 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:30:46.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:30:46.618 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:46.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:30:46.643 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Buy PRO Now"/"com.antivirus:id/buy_pro"/[209,1160]>
2015-12-03 01:30:48.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:30:48.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:30:48.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:30:48.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:30:48.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:30:48.783 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:30:48.785 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 5}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:30:48.793 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-03 01:30:48.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:30:48.797 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.antivirus
2015-12-03 01:31:14.791 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:14.795 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:31:14.872 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:31:27.975 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:31:28.026 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:31:28.027 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:31:30.076 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:31:30.077 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:31:30.078 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:31:16.762
2015-12-03 01:31:30.079 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:31:30.186 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:31:30.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:30.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:31:30.231 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:31:30.362 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:30.364 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:30.380 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   10 <ExplAct LC? 1 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:31:30.382 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:30.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:30.460 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:30.480 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:30.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:31:33.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:33.391 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:33.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:33.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:33.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:33.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:33.567 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:33.582 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:31:33.585 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:33.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:33.672 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:33.688 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:33.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By tapping "Continue", you accept AVG's
License Agreement and Privacy Policy "/"com.antivirus:id/text_terms_and_privacy_hyperlink"/[399,1100]>
2015-12-03 01:31:35.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:35.047 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:35.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:35.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:35.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:35.213 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:35.215 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:35.233 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:31:35.237 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:35.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:35.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:35.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:35.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/button_activation"/[399,1166]>
2015-12-03 01:31:37.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:37.569 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:37.619 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-03 01:31:37.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:37.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:37.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:37.825 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 41}, DeviceLogs{apiLogs#=21, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:37.840 INFO  o.d.e.strategy.ExplorationStrategy         1m 53s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-03 01:31:37.842 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:37.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:37.925 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:37.948 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:31:37.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/"com.antivirus:id/continue_with_free"/[589,1160]>
2015-12-03 01:31:40.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:40.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:40.362 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-03 01:31:40.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:40.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:40.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:40.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 54}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:40.634 INFO  o.d.e.strategy.ExplorationStrategy         1m 56s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.antivirus:id/anti_theft"/[201,347]>
2015-12-03 01:31:40.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:40.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:40.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:40.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:40.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.antivirus:id/anti_theft"/[201,347]>
2015-12-03 01:31:43.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:43.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:43.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 01:31:43.338 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:43.523 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:43.602 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:43.604 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 50}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:43.623 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,362]>
2015-12-03 01:31:43.625 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:43.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:31:43.694 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:43.706 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:43.708 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,362]>
2015-12-03 01:31:45.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:31:45.535 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:45.550 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:31:45.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:31:46.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:31:46.644 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:31:46.646 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.antivirus. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:31:46.655 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:31:46.657 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:31:46.659 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device)
2015-12-03 01:31:46.659 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:31:46.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:46.767 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:31:46.767 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:31:46.767 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.antivirus}
2015-12-03 01:31:49.549 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:31:49.618 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:31:49.621 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:31:49.622 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:31:49.716 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:31:49.793 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.antivirus_v4.1.2-inlined.apk, device) - DONE
2015-12-03 01:32:01.858 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-03 01:32:01.858 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-03 01:32:28.199 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:32:28.202 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:32:28.275 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:32:38.618 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:32:38.669 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:32:38.669 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:32:40.721 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:32:40.722 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:32:40.724 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:32:30.412
2015-12-03 01:32:40.724 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:32:40.820 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:32:40.821 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:32:40.848 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:32:40.848 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:32:40.998 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-03 01:32:41.002 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.apusapps.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:32:41.017 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[583,701]>
2015-12-03 01:32:41.020 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-03 01:32:41.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:32:41.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:32:41.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:32:41.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[583,701]>
2015-12-03 01:32:43.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:32:43.357 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:32:43.361 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:32:43.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:32:43.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:32:43.516 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-03 01:32:43.518 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:32:43.526 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-03 01:32:43.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-03 01:32:43.528 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-03 01:33:09.435 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:33:09.438 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:33:09.509 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:33:19.308 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:33:19.360 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:33:19.360 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:33:21.415 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:33:21.416 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:33:21.419 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:33:11.612
2015-12-03 01:33:21.420 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:33:21.544 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:33:21.544 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:33:21.568 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:33:21.569 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:33:21.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-03 01:33:21.737 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.apusapps.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:33:21.752 INFO  o.d.e.strategy.ExplorationStrategy         0m 40s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[219,701]>
2015-12-03 01:33:21.754 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-03 01:33:21.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:33:21.841 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:33:21.856 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:33:21.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[219,701]>
2015-12-03 01:33:27.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:33:27.264 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:33:27.286 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:33:27.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:33:27.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:33:27.664 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device) - DONE
2015-12-03 01:33:27.666 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 70}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:33:27.678 INFO  o.d.e.strategy.ExplorationStrategy         0m 46s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 01:33:27.680 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.apusapps.launcher_v1.4.0-inlined.apk, device)
2015-12-03 01:33:27.680 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.apusapps.launcher
2015-12-03 01:33:30.815 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:33:43.439 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:33:43.439 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-03 01:34:11.464 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:11.468 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:34:11.560 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:34:24.511 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:34:24.547 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:34:24.547 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:34:26.592 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:34:26.593 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:34:26.595 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:34:13.742
2015-12-03 01:34:26.595 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:34:26.681 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:34:26.681 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:26.763 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:34:26.763 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:34:27.391 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:27.395 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 9}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:27.406 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-03 01:34:27.408 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:27.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:27.493 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:27.510 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:27.512 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-03 01:34:30.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:30.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:30.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:30.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:30.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:30.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:30.418 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:30.433 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:34:30.435 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:30.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:30.517 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:30.531 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:30.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:34:31.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:31.892 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:31.910 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:31.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:31.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:32.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:32.074 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:32.093 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[400,879]>
2015-12-03 01:34:32.095 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:32.096 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:32.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:32.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:32.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,879]>
2015-12-03 01:34:33.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:33.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:33.553 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:33.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:33.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:33.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:33.729 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:33.746 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[640,1145]>
2015-12-03 01:34:33.750 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:33.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:33.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:33.849 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:33.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[640,1145]>
2015-12-03 01:34:35.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:35.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:35.216 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:35.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:35.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:35.379 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:35.381 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:35.395 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/""/""/[769,25]>
2015-12-03 01:34:35.398 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:35.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:35.472 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:35.488 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:35.489 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[769,25]>
2015-12-03 01:34:37.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:37.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:37.668 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:34:37.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:37.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:37.803 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:37.805 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 15}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:37.826 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Retry"/"android:id/button1"/[219,701]>
2015-12-03 01:34:37.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:37.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:37.898 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:37.912 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:37.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Retry"/"android:id/button1"/[219,701]>
2015-12-03 01:34:39.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:39.937 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:39.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:34:39.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:40.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:40.112 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:40.114 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:40.129 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,785]>
2015-12-03 01:34:40.133 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:40.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:40.218 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:40.233 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:40.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,785]>
2015-12-03 01:34:43.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:43.283 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:43.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:34:43.307 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:43.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:43.435 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:43.437 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:43.453 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-03 01:34:43.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:43.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:43.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:43.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:43.556 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.audioguidia.myweather:id/searchEditText"/[312,201]>
2015-12-03 01:34:45.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:45.408 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:45.442 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:34:45.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:45.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:45.556 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:45.558 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:45.579 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-03 01:34:45.582 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:45.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:45.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:45.695 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:45.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-03 01:34:48.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:48.317 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:48.349 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:34:48.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:48.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:48.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:48.501 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 14}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:48.515 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-03 01:34:48.517 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:48.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:48.600 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:48.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:48.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[401,757]>
2015-12-03 01:34:50.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:50.482 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:50.498 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:50.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:50.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:50.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:50.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:50.633 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-03 01:34:50.635 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:50.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:50.719 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:50.737 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:50.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-03 01:34:52.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:52.087 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:52.109 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:34:52.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:52.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:52.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:52.254 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:52.277 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-03 01:34:52.279 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:52.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:34:52.378 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:52.392 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:52.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"com.audioguidia.myweather:id/searchOKbutton"/[400,290]>
2015-12-03 01:34:54.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:34:54.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:34:54.571 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:34:54.572 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:34:54.635 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:34:54.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:34:54.720 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.googlequicksearchbox. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:34:54.728 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 01:34:54.729 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:34:54.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-03 01:35:20.828 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:20.832 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:35:20.910 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:35:34.201 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:35:34.247 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:35:34.247 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:35:36.298 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:35:36.299 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:35:36.301 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:35:23.132
2015-12-03 01:35:36.301 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:35:36.411 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:35:36.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:36.472 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-03 01:35:36.474 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:35:36.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:35:36.575 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:35:36.593 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-03 01:35:36.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:35:36.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:35:36.685 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:36.706 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:35:36.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-03 01:35:38.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:35:38.784 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:38.815 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:35:38.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:35:38.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:35:38.955 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:35:38.956 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:35:38.974 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Search a location"/"android:id/button2"/[583,701]>
2015-12-03 01:35:38.976 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:35:38.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:35:39.046 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:39.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:35:39.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Search a location"/"android:id/button2"/[583,701]>
2015-12-03 01:35:41.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:35:41.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:42.010 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:35:42.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:35:42.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:35:42.153 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:35:42.155 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 12}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:35:42.173 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-03 01:35:42.176 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:35:42.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:35:42.258 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:42.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:35:42.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Speak"/"com.audioguidia.myweather:id/speakButton"/[699,200]>
2015-12-03 01:35:45.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:35:45.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:35:45.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:35:45.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:35:46.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:35:46.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:35:46.127 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.googlequicksearchbox. Widgets# 9}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:35:46.139 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   18 <ExplAct Reset app>
2015-12-03 01:35:46.143 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:35:46.144 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.audioguidia.myweather
2015-12-03 01:36:13.284 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:36:13.288 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:36:13.361 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:36:26.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:36:26.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:36:26.567 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:36:28.624 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:36:28.625 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:36:28.627 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:36:15.492
2015-12-03 01:36:28.627 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:36:28.725 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:36:28.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:36:28.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-03 01:36:28.778 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:36:29.334 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:36:29.336 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.audioguidia.myweather. Widgets# 8}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:36:29.342 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:36:29.344 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:36:29.346 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device)
2015-12-03 01:36:29.347 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:36:29.429 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:36:29.466 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:36:29.467 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:36:29.468 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.audioguidia.myweather}
2015-12-03 01:36:30.379 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:36:30.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:36:30.462 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:36:30.463 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:36:30.539 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:36:30.607 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.audioguidia.myweather_v1.8.4-inlined.apk, device) - DONE
2015-12-03 01:36:47.931 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:36:47.931 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-03 01:37:14.472 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:14.475 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:37:14.551 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:37:27.605 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:37:27.660 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:37:27.660 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:37:29.724 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:37:29.725 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:37:29.728 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:37:16.692
2015-12-03 01:37:29.728 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:37:29.840 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:37:29.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:29.883 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:37:29.884 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:37:30.053 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:37:30.057 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:37:30.073 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.avira.android:id/welcomeItemNumber"/[400,960]>
2015-12-03 01:37:30.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:37:30.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:37:30.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:30.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:30.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.avira.android:id/welcomeItemNumber"/[400,960]>
2015-12-03 01:37:32.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:37:32.489 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:32.505 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:32.506 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:37:32.570 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:37:32.653 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:37:32.655 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:37:32.671 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Create new account"/"com.avira.android:id/welcomeCreateAccountButton"/[400,1065]>
2015-12-03 01:37:32.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:37:32.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:37:32.756 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:32.776 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:32.778 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Create new account"/"com.avira.android:id/welcomeCreateAccountButton"/[400,1065]>
2015-12-03 01:37:35.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:37:35.336 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:35.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:37:35.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:37:35.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:37:35.539 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:37:35.541 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 25}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:37:35.555 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/create_account_next"/[707,117]>
2015-12-03 01:37:35.557 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:37:35.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:37:35.648 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:35.660 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:35.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/create_account_next"/[707,117]>
2015-12-03 01:37:37.797 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:37:37.797 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:37.812 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:37.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:37:37.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:37:37.970 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:37:37.972 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:37:37.989 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"(EULA)"/"com.avira.android:id/eulaLinkTextView"/[399,728]>
2015-12-03 01:37:37.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:37:37.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:37:38.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:38.088 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:37:38.091 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"(EULA)"/"com.avira.android:id/eulaLinkTextView"/[399,728]>
2015-12-03 01:37:40.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:37:40.418 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:37:40.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:37:40.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:37:40.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:37:41.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:37:41.011 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 10}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:37:41.017 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:37:41.019 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:37:41.019 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-03 01:38:07.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:07.185 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:38:07.267 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:38:18.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:38:19.051 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:38:19.051 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:38:21.099 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:38:21.100 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:38:21.101 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:38:09.102
2015-12-03 01:38:21.101 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:38:21.206 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:38:21.206 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:21.246 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:38:21.247 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:38:21.404 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:21.406 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:21.421 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[420,960]>
2015-12-03 01:38:21.424 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:21.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:21.500 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:21.518 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:21.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[420,960]>
2015-12-03 01:38:23.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:23.944 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:23.960 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:23.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:24.047 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:24.122 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:24.124 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:24.146 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-03 01:38:24.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:24.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:24.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:24.248 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:24.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-03 01:38:26.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:26.544 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:26.578 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:38:26.578 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:26.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:26.747 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:26.749 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:26.767 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-03 01:38:26.770 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:26.771 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:26.856 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:26.872 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:26.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-03 01:38:28.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:28.914 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:28.933 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:28.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:29.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:29.080 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:29.082 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:29.100 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-03 01:38:29.103 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:29.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:29.194 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:29.206 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:29.208 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"NEXT >"/"com.avira.android:id/login_next"/[707,100]>
2015-12-03 01:38:31.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:31.042 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:31.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:31.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:31.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:31.204 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:31.206 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:31.229 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,422]>
2015-12-03 01:38:31.232 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:31.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:31.319 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:31.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:31.338 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.avira.android:id/registration_password"/[399,422]>
2015-12-03 01:38:32.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:32.724 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:32.739 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:32.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:32.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:32.893 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:32.895 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 21}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:32.911 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Forgot your password?"/"com.avira.android:id/registration_forgot_password_link"/[399,535]>
2015-12-03 01:38:32.913 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:32.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:38:33.000 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:33.017 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:38:33.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot your password?"/"com.avira.android:id/registration_forgot_password_link"/[399,535]>
2015-12-03 01:38:36.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:38:36.665 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:38:36.688 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:38:36.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:38:36.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:38:36.873 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:38:36.875 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:38:36.887 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-03 01:38:36.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:38:36.891 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.avira.android
2015-12-03 01:39:07.409 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:07.413 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:39:07.499 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:39:20.124 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:39:20.174 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:39:20.174 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:39:22.229 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:39:22.230 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:39:22.232 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:39:09.582
2015-12-03 01:39:22.232 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:39:22.344 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:39:22.344 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:22.385 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:39:22.386 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:39:22.549 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:39:22.551 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:39:22.571 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[380,960]>
2015-12-03 01:39:22.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:39:22.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:39:22.660 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:22.678 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:22.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[380,960]>
2015-12-03 01:39:24.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:39:24.524 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:24.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:24.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:39:24.618 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:39:24.706 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:39:24.708 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:39:24.730 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,960]>
2015-12-03 01:39:24.734 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:39:24.735 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:39:24.826 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:24.842 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:24.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,960]>
2015-12-03 01:39:27.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:39:27.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:27.156 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:27.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:39:27.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:39:27.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:39:27.325 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:39:27.342 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-03 01:39:27.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:39:27.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:39:27.432 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:27.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:27.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Already have an account? Log in"/"com.avira.android:id/welcomeLoginButton"/[400,1140]>
2015-12-03 01:39:30.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:39:30.216 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:30.244 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:39:30.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:39:30.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:39:30.406 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:39:30.408 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.avira.android. Widgets# 20}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:39:30.415 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:39:30.416 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:39:30.419 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device)
2015-12-03 01:39:30.420 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:39:30.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:30.520 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:39:30.521 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:39:30.521 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.avira.android}
2015-12-03 01:39:31.520 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:39:31.605 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:39:31.609 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:39:31.609 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:39:31.740 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:39:31.815 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.avira.android_v3.5-inlined.apk, device) - DONE
2015-12-03 01:40:28.325 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:40:28.326 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-03 01:40:54.076 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:40:54.081 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:40:54.170 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:41:10.364 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:41:10.398 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:41:10.399 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:41:12.445 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:41:12.446 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:41:12.449 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:40:56.122
2015-12-03 01:41:12.449 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:41:12.549 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:41:12.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:12.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-03 01:41:12.604 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:41:12.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:41:12.899 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:41:12.914 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/""/[120,229]>
2015-12-03 01:41:12.916 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:41:12.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:41:13.001 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:13.033 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:41:13.035 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[120,229]>
2015-12-03 01:41:14.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:41:14.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:14.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:41:14.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:41:14.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:41:15.035 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:41:15.036 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:41:15.051 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Already registered? Log in"/"com.babbel.mobile.android.en:id/appStartLoginButton"/[640,692]>
2015-12-03 01:41:15.053 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:41:15.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:41:15.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:15.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:41:15.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Already registered? Log in"/"com.babbel.mobile.android.en:id/appStartLoginButton"/[640,692]>
2015-12-03 01:41:17.573 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:41:17.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:17.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:41:17.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:41:17.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:41:17.767 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:41:17.769 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:41:17.787 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.babbel.mobile.android.en:id/login_register_button"/[640,704]>
2015-12-03 01:41:17.790 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:41:17.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:41:17.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:17.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:41:17.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.babbel.mobile.android.en:id/login_register_button"/[640,704]>
2015-12-03 01:41:20.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:41:20.284 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:20.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:41:20.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:41:20.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:41:20.485 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:41:20.487 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 20}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:41:20.508 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_registerWithGoogleButton"/[640,376]>
2015-12-03 01:41:20.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:41:20.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:41:20.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:20.613 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:41:20.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.babbel.mobile.android.en:id/register_registerWithGoogleButton"/[640,376]>
2015-12-03 01:41:24.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:41:24.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:24.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:41:24.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:41:24.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:41:24.628 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:41:24.629 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.gms. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:41:24.637 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:41:24.638 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:41:24.639 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-03 01:41:50.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:41:50.766 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:41:50.854 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:42:07.106 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:42:07.143 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:42:07.143 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:42:09.182 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:42:09.183 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:42:09.184 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:41:53.162
2015-12-03 01:42:09.185 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:42:09.265 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:42:09.265 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:09.313 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 14
2015-12-03 01:42:09.314 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:42:09.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:42:09.674 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 13}, DeviceLogs{apiLogs#=14, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:42:09.690 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Start"/"com.babbel.mobile.android.en:id/appStartStartButton"/[640,589]>
2015-12-03 01:42:09.693 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:42:09.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:42:09.779 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:09.811 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:42:09.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Start"/"com.babbel.mobile.android.en:id/appStartStartButton"/[640,589]>
2015-12-03 01:42:12.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:42:12.481 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:12.509 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:42:12.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:42:12.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:42:12.681 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:42:12.682 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:42:12.697 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"55 - 64"/"com.babbel.mobile.android.en:id/ageButtonYounger64"/[639,718]>
2015-12-03 01:42:12.699 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:42:12.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:42:12.778 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:12.794 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:42:12.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"55 - 64"/"com.babbel.mobile.android.en:id/ageButtonYounger64"/[639,718]>
2015-12-03 01:42:15.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:42:15.523 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:15.558 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:42:15.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:42:15.623 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:42:15.709 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:42:15.712 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:42:15.730 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Other"/"com.babbel.mobile.android.en:id/answerButton5"/[639,718]>
2015-12-03 01:42:15.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:42:15.732 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:42:15.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:15.830 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:42:15.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Other"/"com.babbel.mobile.android.en:id/answerButton5"/[639,718]>
2015-12-03 01:42:19.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:42:19.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:42:19.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:42:19.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:42:19.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:42:19.742 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device) - DONE
2015-12-03 01:42:19.744 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.babbel.mobile.android.en. Widgets# 21}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:42:19.752 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 01:42:19.755 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.babbel.mobile.android.en_v4.3.3-inlined.apk, device)
2015-12-03 01:42:19.755 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.babbel.mobile.android.en
2015-12-03 01:42:46.020 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:42:58.805 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:42:58.805 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-03 01:43:24.365 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:24.368 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:43:24.453 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:43:35.315 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:43:35.355 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:43:35.355 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:43:37.397 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:43:37.398 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:43:37.400 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:43:26.462
2015-12-03 01:43:37.400 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:43:37.510 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:43:37.510 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:37.556 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:43:37.556 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:43:37.708 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:43:37.713 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:43:37.730 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-03 01:43:37.733 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:43:37.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:43:37.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:37.833 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:37.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-03 01:43:40.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:43:40.079 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:40.119 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:43:40.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:43:40.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:43:40.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:43:40.273 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 17}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:43:40.291 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Spinner/""/"com.baviux.pillreminder:id/yearSpinner"/[400,141]>
2015-12-03 01:43:40.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:43:40.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:43:40.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:40.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:40.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.baviux.pillreminder:id/yearSpinner"/[400,141]>
2015-12-03 01:43:42.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:43:42.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:42.433 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:42.433 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:43:42.479 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:43:42.555 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:43:42.557 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:43:42.569 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ListView/""/""/[392,298]>
2015-12-03 01:43:42.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:43:42.571 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:43:42.646 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:42.659 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:42.661 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[392,298]>
2015-12-03 01:43:47.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:43:47.507 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:47.520 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:47.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:43:47.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:43:47.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:43:47.733 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:43:47.749 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[581,1170]>
2015-12-03 01:43:47.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:43:47.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:43:47.825 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:47.840 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:43:47.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[581,1170]>
2015-12-03 01:43:52.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:43:52.370 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:43:52.404 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 01:43:52.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:43:52.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:43:52.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:43:52.671 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:43:52.681 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:43:52.684 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:43:52.685 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-03 01:44:21.648 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:21.651 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:44:21.737 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:44:33.714 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:44:33.752 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:44:33.752 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:44:35.796 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:44:35.797 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:44:35.798 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:44:23.812
2015-12-03 01:44:35.799 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:44:35.882 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:44:35.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:35.922 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:44:35.922 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:44:36.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:36.077 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:36.096 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Go to settings menu"/"com.baviux.pillreminder:id/settingsButton"/[399,686]>
2015-12-03 01:44:36.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:36.100 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:36.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:36.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:36.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Go to settings menu"/"com.baviux.pillreminder:id/settingsButton"/[399,686]>
2015-12-03 01:44:38.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:38.408 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:38.448 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:44:38.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:38.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:38.578 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:38.580 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:38.603 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Close"/"android:id/button1"/[400,719]>
2015-12-03 01:44:38.605 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:38.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:38.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:38.710 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:38.712 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Close"/"android:id/button1"/[400,719]>
2015-12-03 01:44:40.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:40.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:40.622 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:40.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:40.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:41.071 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:41.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:41.095 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,811]>
2015-12-03 01:44:41.098 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:41.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:41.178 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:41.195 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:41.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,811]>
2015-12-03 01:44:43.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:43.318 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:43.340 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:43.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:43.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:43.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:43.520 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:43.538 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,626]>
2015-12-03 01:44:43.542 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:43.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:43.630 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:43.646 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:43.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[400,626]>
2015-12-03 01:44:45.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:45.191 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:45.207 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:45.208 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:45.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:45.356 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:45.358 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:45.383 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,858]>
2015-12-03 01:44:45.386 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:45.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:45.483 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:45.495 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:45.498 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[400,858]>
2015-12-03 01:44:47.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:47.352 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:47.370 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:47.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:47.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:47.623 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:47.625 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:47.646 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-03 01:44:47.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:47.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:47.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:47.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:47.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,330]>
2015-12-03 01:44:50.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:50.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:50.158 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 01:44:50.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:50.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:50.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:50.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:50.481 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,595]>
2015-12-03 01:44:50.483 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:50.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:50.563 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:50.583 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:50.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,595]>
2015-12-03 01:44:52.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:52.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:52.822 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:44:52.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:53.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:53.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:53.162 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 22}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:53.181 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,279]>
2015-12-03 01:44:53.183 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:53.184 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:53.264 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:53.281 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:53.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,279]>
2015-12-03 01:44:55.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:55.468 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:55.484 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:55.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:55.571 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:55.641 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:55.643 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:55.665 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"59"/""/[452,550]>
2015-12-03 01:44:55.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:55.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:55.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:55.773 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:55.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"59"/""/[452,550]>
2015-12-03 01:44:57.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:57.714 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:57.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:57.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:57.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:44:57.892 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:44:57.895 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:44:57.915 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:EditText/"59"/"android:id/numberpicker_input"/[452,626]>
2015-12-03 01:44:57.918 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:44:57.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:44:58.002 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:58.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:58.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"59"/"android:id/numberpicker_input"/[452,626]>
2015-12-03 01:44:59.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:44:59.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:44:59.885 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:44:59.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:44:59.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:45:00.061 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:45:00.063 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:45:00.086 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,603]>
2015-12-03 01:45:00.089 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:45:00.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:45:00.179 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:00.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:00.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,603]>
2015-12-03 01:45:02.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:45:02.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:02.385 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:02.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:45:02.472 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:45:02.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:45:02.570 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:45:02.595 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,193]>
2015-12-03 01:45:02.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:45:02.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:45:02.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:02.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:02.705 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,193]>
2015-12-03 01:45:04.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:45:04.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:04.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:04.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:45:04.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:45:04.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:45:04.982 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:45:05.004 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:CheckedTextView/"4 days before"/"android:id/text1"/[400,691]>
2015-12-03 01:45:05.008 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:45:05.009 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:45:05.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:05.106 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:05.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"4 days before"/"android:id/text1"/[400,691]>
2015-12-03 01:45:07.168 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:45:07.168 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:07.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:07.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:45:07.265 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:45:07.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:45:07.347 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:45:07.365 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-03 01:45:07.367 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:45:07.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:45:07.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:07.471 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:07.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,656]>
2015-12-03 01:45:09.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:45:09.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:45:09.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:45:09.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:45:09.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:45:09.207 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-03 01:45:09.210 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:45:09.224 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:45:09.227 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   21 <ExplAct Reset app>
2015-12-03 01:45:09.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-03 01:45:09.231 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-03 01:45:35.254 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:45:51.148 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:45:51.148 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ben.lianmeng
2015-12-03 01:46:16.777 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:16.781 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:46:16.858 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:46:27.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:46:27.365 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:46:27.366 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:46:29.433 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:46:29.434 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:46:29.436 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:46:18.672
2015-12-03 01:46:29.437 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:46:29.540 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:46:29.540 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:29.583 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:46:29.584 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:46:29.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:29.730 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:29.746 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/"com.ben.lianmeng:id/imageview_soundswitch"/[33,69]>
2015-12-03 01:46:29.748 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:29.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:29.829 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:29.847 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:29.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.ben.lianmeng:id/imageview_soundswitch"/[33,69]>
2015-12-03 01:46:31.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:31.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:31.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:31.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:31.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:31.864 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:31.866 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:31.884 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorFemale"/[399,938]>
2015-12-03 01:46:31.886 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:31.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:31.972 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:31.989 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:31.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorFemale"/[399,938]>
2015-12-03 01:46:35.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:35.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:35.099 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 01:46:35.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:35.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:35.432 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:35.434 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 57}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:35.451 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnSettings"/[33,123]>
2015-12-03 01:46:35.453 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:35.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:35.524 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:35.537 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:35.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnSettings"/[33,123]>
2015-12-03 01:46:37.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:37.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:37.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:37.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:37.571 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:37.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:37.669 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 68}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:37.696 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-03 01:46:37.699 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:37.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:37.787 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:37.805 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:37.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-03 01:46:39.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:39.648 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:39.665 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:39.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:39.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:39.919 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:39.921 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:39.943 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-03 01:46:39.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:39.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:40.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:40.048 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:40.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1014]>
2015-12-03 01:46:42.102 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:42.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:42.129 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:46:42.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:42.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:42.357 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:42.360 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:42.386 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:46:42.389 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:42.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:42.474 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:42.490 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:42.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:46:44.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:44.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:44.586 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:46:44.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:44.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:44.865 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:44.866 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:44.891 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:GridView/""/""/[400,965]>
2015-12-03 01:46:44.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:44.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:44.983 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:44.997 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:44.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/""/[400,965]>
2015-12-03 01:46:47.048 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:47.048 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:47.072 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:46:47.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:47.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:47.325 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:47.328 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:47.354 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[71,692]>
2015-12-03 01:46:47.357 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:47.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:47.437 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:47.460 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:47.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[71,692]>
2015-12-03 01:46:48.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:48.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:48.811 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:48.812 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:48.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:49.041 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:49.043 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:49.072 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1158]>
2015-12-03 01:46:49.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:49.076 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:49.162 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:49.176 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:49.178 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[133,1158]>
2015-12-03 01:46:51.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:51.221 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:51.250 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:46:51.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:51.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:51.516 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:51.518 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:51.545 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnBackIndex"/[53,64]>
2015-12-03 01:46:51.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:51.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:51.628 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:51.650 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:51.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnBackIndex"/[53,64]>
2015-12-03 01:46:54.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:54.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:54.211 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:46:54.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:54.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:54.383 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:54.385 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 15}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:54.402 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-03 01:46:54.404 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:54.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:54.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:54.520 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:54.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnEditorMale"/[399,312]>
2015-12-03 01:46:57.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:46:57.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:57.425 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 01:46:57.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:46:57.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:46:57.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:46:57.787 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ben.lianmeng. Widgets# 58}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:46:57.813 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-03 01:46:57.816 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:46:57.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:46:57.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:46:57.919 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:46:57.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.ben.lianmeng:id/btnShare"/[753,64]>
2015-12-03 01:47:01.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:47:01.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:47:01.289 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:47:01.290 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:47:01.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:47:01.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device) - DONE
2015-12-03 01:47:01.555 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 49}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:47:01.570 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 01:47:01.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ben.lianmeng_v1.0-inlined.apk, device)
2015-12-03 01:47:01.573 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ben.lianmeng
2015-12-03 01:47:27.745 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:47:45.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:47:45.259 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-03 01:48:10.847 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:10.851 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:48:10.935 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:48:27.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:48:27.125 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:48:27.125 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:48:29.179 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:48:29.180 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:48:29.182 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:48:13.022
2015-12-03 01:48:29.182 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:48:29.277 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:48:29.278 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:29.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-03 01:48:29.338 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:48:29.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:48:29.782 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:48:29.799 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,620]>
2015-12-03 01:48:29.803 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:48:29.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:48:29.888 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:29.904 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:48:29.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,620]>
2015-12-03 01:48:32.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:48:32.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:32.094 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:48:32.094 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:48:32.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:48:32.239 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:48:32.241 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 16}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:48:32.258 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_login"/[399,870]>
2015-12-03 01:48:32.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:48:32.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:48:32.348 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:32.367 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:48:32.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_login"/[399,870]>
2015-12-03 01:48:34.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:48:34.918 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:34.954 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:48:34.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:48:35.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:48:35.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:48:35.120 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 18}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:48:35.134 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/back"/[32,65]>
2015-12-03 01:48:35.136 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:48:35.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:48:35.214 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:35.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:48:35.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/back"/[32,65]>
2015-12-03 01:48:37.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:48:37.327 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:48:37.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:48:37.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:48:37.433 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:48:37.530 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:48:37.531 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:48:37.541 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 01:48:37.544 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:48:37.544 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-03 01:49:03.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:03.137 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:49:03.222 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:49:19.417 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:49:19.473 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:49:19.474 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:49:21.511 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:49:21.513 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:49:21.515 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:49:05.232
2015-12-03 01:49:21.515 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:49:21.640 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:49:21.640 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:21.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:49:21.703 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:49:22.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:22.121 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:22.146 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,413]>
2015-12-03 01:49:22.150 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:22.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:22.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:22.252 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:22.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[243,413]>
2015-12-03 01:49:24.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:24.435 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:24.472 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:49:24.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:24.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:24.628 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:24.630 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 16}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:24.651 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/start"/[399,789]>
2015-12-03 01:49:24.654 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:24.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:24.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:24.762 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:24.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/start"/[399,789]>
2015-12-03 01:49:26.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:26.979 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:27.018 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:49:27.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:27.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:27.197 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:27.199 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:27.215 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-03 01:49:27.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:27.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:27.301 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:27.322 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:27.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-03 01:49:29.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:29.213 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:29.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:29.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:29.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:29.446 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:29.448 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:29.466 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Monnaie"/"com.bookmark.money:id/currency"/[447,216]>
2015-12-03 01:49:29.469 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:29.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:29.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:29.564 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:29.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Monnaie"/"com.bookmark.money:id/currency"/[447,216]>
2015-12-03 01:49:32.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:32.834 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:32.848 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:32.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:33.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:33.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:33.197 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 64}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:33.221 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.bookmark.money:id/RelativeLayout1"/[400,195]>
2015-12-03 01:49:33.225 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:33.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:33.316 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:33.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:33.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.bookmark.money:id/RelativeLayout1"/[400,195]>
2015-12-03 01:49:35.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:35.490 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:35.507 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:35.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:35.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:35.701 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:35.703 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:35.723 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_save"/[400,1170]>
2015-12-03 01:49:35.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:35.727 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:35.808 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:35.823 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:35.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.bookmark.money:id/btn_save"/[400,1170]>
2015-12-03 01:49:37.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:37.707 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:37.723 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:37.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:37.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:37.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:37.915 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:37.940 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-03 01:49:37.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:37.944 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:38.033 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:38.052 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:38.055 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TableRow/""/"com.bookmark.money:id/pageAmount"/[400,284]>
2015-12-03 01:49:40.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:40.225 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:40.241 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:40.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:40.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:40.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:40.476 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:40.502 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:40.505 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:40.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:40.589 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:40.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:40.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:42.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:42.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:42.534 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:42.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:42.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:42.733 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:42.735 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:42.753 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:42.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:42.757 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:42.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:42.860 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:42.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:44.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:44.753 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:44.769 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:44.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:44.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:45.005 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:45.007 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:45.034 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:45.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:45.037 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:45.121 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:45.139 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:45.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:47.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:47.021 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:47.039 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:47.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:47.179 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:47.267 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:47.269 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:47.295 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"2"/"com.bookmark.money:id/button2"/[302,1050]>
2015-12-03 01:49:47.297 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:47.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:47.377 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:47.395 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:47.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"2"/"com.bookmark.money:id/button2"/[302,1050]>
2015-12-03 01:49:49.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:49.300 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:49.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:49.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:49.437 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:49.523 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:49.526 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:49.554 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:49.557 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:49.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:49.650 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:49.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:49.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"6"/"com.bookmark.money:id/button6"/[496,954]>
2015-12-03 01:49:51.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:51.546 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:51.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:51.564 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:51.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:51.772 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:51.775 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:51.808 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"5"/"com.bookmark.money:id/button5"/[302,954]>
2015-12-03 01:49:51.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:51.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:51.896 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:51.911 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:51.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"5"/"com.bookmark.money:id/button5"/[302,954]>
2015-12-03 01:49:53.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:53.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:53.831 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:53.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:54.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:54.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:54.243 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:54.269 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/button16"/[691,762]>
2015-12-03 01:49:54.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:54.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:49:54.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:54.363 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:54.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.bookmark.money:id/button16"/[691,762]>
2015-12-03 01:49:55.728 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:49:55.729 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:49:55.744 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:49:55.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:49:55.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:49:55.947 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:49:55.949 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:49:55.968 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 01:49:55.972 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   20 <ExplAct Reset app>
2015-12-03 01:49:55.975 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:49:55.976 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.bookmark.money
2015-12-03 01:50:21.892 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:50:21.896 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:50:21.973 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:50:38.171 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:50:38.223 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:50:38.223 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:50:40.278 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:50:40.279 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:50:40.281 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:50:24.192
2015-12-03 01:50:40.281 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:50:40.392 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:50:40.392 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:50:40.461 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:50:40.462 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:50:40.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:50:40.893 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.bookmark.money. Widgets# 72}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:50:40.907 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:50:40.910 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:50:40.913 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device)
2015-12-03 01:50:40.914 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:50:41.004 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:50:41.022 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:50:41.023 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:50:41.024 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.bookmark.money}
2015-12-03 01:50:41.900 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:50:41.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:50:41.970 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:50:41.970 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:50:42.087 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:50:42.169 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.bookmark.money_vandroid-2.3.1-inlined.apk, device) - DONE
2015-12-03 01:50:58.271 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:50:58.271 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-03 01:51:23.888 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:23.891 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:51:23.970 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:51:32.993 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:51:33.047 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:51:33.048 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:51:35.101 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:51:35.102 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:51:35.105 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:51:25.932
2015-12-03 01:51:35.106 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:51:35.209 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:51:35.210 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:35.261 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 16
2015-12-03 01:51:35.262 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:51:35.415 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:51:35.419 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=16, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:51:35.438 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageView/""/"com.CartoonAvatar.PhotoMaker:id/imageview_soundswitch"/[33,69]>
2015-12-03 01:51:35.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:51:35.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:51:35.523 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:35.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:51:35.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.CartoonAvatar.PhotoMaker:id/imageview_soundswitch"/[33,69]>
2015-12-03 01:51:37.380 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:51:37.381 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:37.396 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:51:37.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:51:37.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:51:37.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:51:37.548 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:51:37.568 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorFemale"/[399,962]>
2015-12-03 01:51:37.570 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:51:37.571 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:51:37.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:37.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:51:37.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorFemale"/[399,962]>
2015-12-03 01:51:40.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:51:40.440 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:40.483 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 01:51:40.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:51:40.731 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:51:40.803 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:51:40.805 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 57}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:51:40.828 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSettings"/[33,123]>
2015-12-03 01:51:40.831 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:51:40.831 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:51:40.899 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:40.911 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:51:40.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnSettings"/[33,123]>
2015-12-03 01:51:43.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:51:43.718 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:43.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:51:43.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:51:44.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:51:44.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:51:44.131 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 27}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:51:44.150 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[400,607]>
2015-12-03 01:51:44.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:51:44.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:51:44.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:44.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:51:44.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,607]>
2015-12-03 01:51:47.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:51:47.466 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:51:47.492 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:51:47.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:51:47.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:51:47.693 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:51:47.696 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:51:47.710 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 01:51:47.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:51:47.715 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-03 01:52:15.715 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:15.719 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:52:15.801 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:52:25.717 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:52:25.758 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:52:25.758 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:52:27.800 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:52:27.802 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:52:27.803 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:52:18.032
2015-12-03 01:52:27.804 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:52:27.912 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:52:27.912 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:28.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 20
2015-12-03 01:52:28.032 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:52:28.183 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:28.186 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:28.205 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorMale"/[399,285]>
2015-12-03 01:52:28.208 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:28.210 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:28.299 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:28.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:28.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnEditorMale"/[399,285]>
2015-12-03 01:52:30.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:30.993 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:31.035 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 01:52:31.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:31.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:31.389 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:31.391 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 57}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:31.414 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:52:31.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:31.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:31.504 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:31.547 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:52:31.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:52:35.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:35.677 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:35.710 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 01:52:35.711 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:35.809 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:35.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:35.881 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 30}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:35.903 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:52:35.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:35.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:35.983 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:35.998 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:36.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:52:39.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:39.373 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:39.389 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:39.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:39.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:39.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:39.559 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:39.581 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:View/""/""/[640,1145]>
2015-12-03 01:52:39.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:39.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:39.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:39.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:39.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[640,1145]>
2015-12-03 01:52:41.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:41.022 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:41.039 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:41.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:41.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:41.219 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:41.221 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:41.244 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[19,1185]>
2015-12-03 01:52:41.246 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:41.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:41.324 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:41.341 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:41.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[19,1185]>
2015-12-03 01:52:43.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:43.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:43.578 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:43.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:43.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:43.755 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:43.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:43.780 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:52:43.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:43.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:43.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:43.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:43.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,637]>
2015-12-03 01:52:46.478 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:46.479 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:46.494 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:46.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:46.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:46.678 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:46.680 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:46.704 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[399,879]>
2015-12-03 01:52:46.708 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:46.709 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:46.803 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:46.816 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:46.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,879]>
2015-12-03 01:52:48.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:48.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:48.186 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:48.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:48.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:48.341 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:48.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:48.362 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/""/""/[769,25]>
2015-12-03 01:52:48.364 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:48.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:48.444 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:48.459 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:48.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[769,25]>
2015-12-03 01:52:50.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:50.560 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:50.592 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:52:50.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:50.785 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:50.871 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:50.873 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:50.899 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:52:50.902 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:50.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:50.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:50.983 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:50.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[667,821]>
2015-12-03 01:52:53.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:53.312 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:53.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:52:53.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:53.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:53.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:53.598 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 58}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:53.624 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-03 01:52:53.628 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:53.629 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:53.707 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:53.730 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:52:53.732 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/"com.CartoonAvatar.PhotoMaker:id/btnShare"/[753,64]>
2015-12-03 01:52:55.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:52:55.064 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:55.089 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 01:52:55.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:52:55.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:52:55.349 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:52:55.352 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:52:55.371 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[639,692]>
2015-12-03 01:52:55.373 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:52:55.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:52:55.447 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:52:55.473 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:52:55.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[639,692]>
2015-12-03 01:53:00.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:53:00.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:53:00.284 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 01:53:00.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:53:00.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:53:00.480 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:53:00.482 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.talk. Widgets# 13}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:53:00.493 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   18 <ExplAct Reset app>
2015-12-03 01:53:00.496 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:53:00.497 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.CartoonAvatar.PhotoMaker
2015-12-03 01:53:27.759 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:53:27.762 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:53:27.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:53:37.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:53:37.422 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:53:37.423 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:53:39.474 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:53:39.475 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:53:39.477 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:53:30.132
2015-12-03 01:53:39.477 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:53:39.565 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:53:39.565 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:53:39.629 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 19
2015-12-03 01:53:39.630 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:53:39.765 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:53:39.767 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.CartoonAvatar.PhotoMaker. Widgets# 15}, DeviceLogs{apiLogs#=19, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:53:39.781 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:53:39.784 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:53:39.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device)
2015-12-03 01:53:39.789 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:53:39.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:53:39.894 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:53:39.895 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:53:39.895 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.CartoonAvatar.PhotoMaker}
2015-12-03 01:53:40.798 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:53:40.872 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:53:40.876 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:53:40.876 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:53:40.973 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:53:41.057 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.CartoonAvatar.PhotoMaker_v1.1-inlined.apk, device) - DONE
2015-12-03 01:53:59.409 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.cleanmaster.mguard_v5.8.3-inlined.apk, device)
2015-12-03 01:53:59.410 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.cleanmaster.mguard
2015-12-03 01:54:24.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:54:24.908 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:54:24.991 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:54:41.127 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:54:41.190 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:54:41.190 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:55:03.782 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 01:55:20.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-03 01:55:20.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.contextlogic.geek
2015-12-03 01:55:46.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:55:46.611 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:55:46.689 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:56:02.810 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:56:02.855 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:56:02.855 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:56:04.899 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:56:04.900 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:56:04.902 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:55:48.542
2015-12-03 01:56:04.902 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:56:05.018 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:56:05.018 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:56:05.068 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-03 01:56:05.069 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:56:05.329 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-03 01:56:05.333 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.geek. Widgets# 55}, DeviceLogs{apiLogs#=17, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:56:05.350 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[136,69]>
2015-12-03 01:56:05.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-03 01:56:05.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:56:05.428 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:56:05.443 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:56:05.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[136,69]>
2015-12-03 01:58:15.772 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 01:58:15.772 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:58:15.799 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 01:58:15.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 01:58:16.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 01:58:16.107 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-03 01:58:16.109 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.geek. Widgets# 53}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 01:58:16.119 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 01:58:16.121 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 01:58:16.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device)
2015-12-03 01:58:16.125 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 01:58:16.198 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:58:16.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:58:16.214 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 01:58:16.214 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.contextlogic.geek}
2015-12-03 01:58:17.107 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 01:58:17.185 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:58:17.189 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:58:17.189 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 01:58:17.281 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 01:58:17.357 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.geek_v1.1.1-inlined.apk, device) - DONE
2015-12-03 01:58:33.965 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-03 01:58:33.965 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.contextlogic.wish
2015-12-03 01:58:59.518 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:58:59.522 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 01:58:59.606 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 01:59:15.687 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 01:59:15.735 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 01:59:15.735 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 01:59:17.780 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 01:59:17.781 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 01:59:17.783 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T01:59:01.522
2015-12-03 01:59:17.784 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 01:59:17.878 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 01:59:17.878 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:59:17.951 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 01:59:17.952 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 01:59:18.215 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-03 01:59:18.219 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.wish. Widgets# 47}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 01:59:18.240 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[662,228]>
2015-12-03 01:59:18.243 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-03 01:59:18.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 01:59:18.329 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 01:59:18.346 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 01:59:18.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[662,228]>
2015-12-03 02:01:27.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:01:27.647 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:01:27.676 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:01:27.677 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:01:27.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:01:27.966 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-03 02:01:27.968 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.contextlogic.wish. Widgets# 47}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:01:27.978 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:01:27.981 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:01:27.983 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device)
2015-12-03 02:01:27.984 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:01:28.065 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:01:28.078 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:01:28.079 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:01:28.079 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.contextlogic.wish}
2015-12-03 02:01:29.187 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:01:29.266 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:01:29.270 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:01:29.270 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:01:29.356 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:01:29.442 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.contextlogic.wish_v3.10.5-inlined.apk, device) - DONE
2015-12-03 02:01:44.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:01:44.413 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-03 02:02:10.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:10.035 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:02:10.110 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:02:24.310 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:02:24.350 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:02:24.351 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:02:26.400 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:02:26.401 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:02:26.402 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:02:11.942
2015-12-03 02:02:26.403 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:02:26.486 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:02:26.486 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:26.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:02:26.533 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:02:26.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:26.828 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 76}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:26.847 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_settings"/[589,952]>
2015-12-03 02:02:26.849 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:26.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:26.925 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:26.940 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:26.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_settings"/[589,952]>
2015-12-03 02:02:29.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:29.656 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:29.690 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:02:29.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:30.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:30.361 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:30.364 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:30.381 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,281]>
2015-12-03 02:02:30.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:30.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:30.467 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:30.483 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:30.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,281]>
2015-12-03 02:02:32.610 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:32.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:32.627 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:32.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:32.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:33.032 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:33.034 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:33.062 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1045]>
2015-12-03 02:02:33.065 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:33.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:33.156 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:33.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:33.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1045]>
2015-12-03 02:02:35.269 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:35.269 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:35.287 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:35.287 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:35.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:35.696 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:35.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:35.720 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,195]>
2015-12-03 02:02:35.724 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:35.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:35.809 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:35.823 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:35.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,195]>
2015-12-03 02:02:38.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:38.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:38.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:38.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:38.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:38.655 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:38.658 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:38.681 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1200]>
2015-12-03 02:02:38.683 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:38.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:38.769 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:38.784 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:38.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1200]>
2015-12-03 02:02:40.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:40.890 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:40.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:40.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:41.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:41.315 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:41.317 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:41.340 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,1190]>
2015-12-03 02:02:41.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:41.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:41.420 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:41.440 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:41.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,1190]>
2015-12-03 02:02:43.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:43.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:43.553 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:43.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:43.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:43.947 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:43.950 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:43.974 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,577]>
2015-12-03 02:02:43.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:43.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:44.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:44.076 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:44.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,577]>
2015-12-03 02:02:46.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:46.171 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:46.186 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:46.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:46.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:46.617 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:46.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:46.641 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,491]>
2015-12-03 02:02:46.643 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:46.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:46.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:46.745 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:46.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,491]>
2015-12-03 02:02:48.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:48.834 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:48.851 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:48.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:49.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:49.207 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:49.210 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:49.234 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1131]>
2015-12-03 02:02:49.237 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:49.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:49.325 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:49.336 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:49.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1131]>
2015-12-03 02:02:51.471 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:51.471 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:51.487 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:51.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:51.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:51.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:51.894 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:51.921 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:02:51.924 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:51.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:52.006 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:52.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:52.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:02:54.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:54.154 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:54.168 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:54.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:54.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:54.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:54.570 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:54.596 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,491]>
2015-12-03 02:02:54.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:54.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:54.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:54.709 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:54.711 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,491]>
2015-12-03 02:02:56.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:56.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:56.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:56.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:57.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:57.212 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:57.214 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:57.232 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:02:57.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:57.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:02:57.315 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:57.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:57.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:02:59.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:02:59.447 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:02:59.461 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:02:59.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:02:59.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:02:59.923 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:02:59.926 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:02:59.950 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,577]>
2015-12-03 02:02:59.953 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:02:59.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:03:00.036 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:00.051 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:00.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,577]>
2015-12-03 02:03:02.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:03:02.156 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:02.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:02.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:03:02.479 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:03:02.580 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:03:02.582 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:03:02.606 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,663]>
2015-12-03 02:03:02.609 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:03:02.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:03:02.695 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:02.714 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:02.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,663]>
2015-12-03 02:03:04.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:03:04.902 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:04.919 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:04.920 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:03:05.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:03:05.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:03:05.102 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:03:05.113 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:03:05.116 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:03:05.119 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:03:05.120 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devexpert.weather
2015-12-03 02:03:31.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:31.510 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:03:31.594 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:03:46.898 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:03:46.938 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:03:46.939 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:03:48.984 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:03:48.985 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:03:48.987 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:03:33.712
2015-12-03 02:03:48.988 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:03:49.085 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:03:49.086 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:49.131 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:03:49.132 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:03:49.386 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:03:49.388 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 51}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:03:49.413 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-03 02:03:49.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:03:49.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:03:49.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:49.516 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:49.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-03 02:03:53.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:03:53.207 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:53.221 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:53.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:03:53.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:03:53.470 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:03:53.472 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:03:53.496 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_about"/[211,952]>
2015-12-03 02:03:53.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:03:53.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:03:53.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:53.592 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:53.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_about"/[211,952]>
2015-12-03 02:03:56.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:03:56.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:56.979 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:03:56.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:03:57.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:03:57.139 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:03:57.141 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 18}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:03:57.161 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[399,1175]>
2015-12-03 02:03:57.164 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:03:57.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:03:57.244 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:03:57.260 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:03:57.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[399,1175]>
2015-12-03 02:04:01.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:01.699 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:01.714 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:01.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:01.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:02.008 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:02.010 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 76}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:02.031 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_settings"/[589,952]>
2015-12-03 02:04:02.034 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:02.035 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:02.110 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:02.124 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:02.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.devexpert.weather:id/frm_settings"/[589,952]>
2015-12-03 02:04:04.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:04.700 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:04.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:04:04.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:05.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:05.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:05.476 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:05.500 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1200]>
2015-12-03 02:04:05.502 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:05.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:05.587 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:05.603 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:05.607 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1200]>
2015-12-03 02:04:07.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:07.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:07.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:07.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:07.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:08.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:08.027 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:08.056 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1131]>
2015-12-03 02:04:08.059 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:08.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:08.147 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:08.165 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:08.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,1131]>
2015-12-03 02:04:10.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:10.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:10.276 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:10.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:10.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:10.692 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:10.695 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:10.720 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,749]>
2015-12-03 02:04:10.723 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:10.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:10.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:10.819 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:10.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,749]>
2015-12-03 02:04:12.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:12.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:12.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:12.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:13.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:13.414 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:13.416 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:13.444 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:04:13.448 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:13.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:13.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:13.561 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:13.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,195]>
2015-12-03 02:04:15.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:15.654 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:15.670 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:15.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:15.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:16.031 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:16.033 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:16.056 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,367]>
2015-12-03 02:04:16.059 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:16.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:16.143 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:16.164 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:16.168 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,367]>
2015-12-03 02:04:18.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:18.531 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:18.547 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:18.549 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:18.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:18.695 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:18.697 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:18.726 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[505,470]>
2015-12-03 02:04:18.730 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:18.731 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:18.815 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:18.830 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:18.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"com.devexpert.weather:id/btnCancel"/[505,470]>
2015-12-03 02:04:21.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:21.131 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:21.149 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:21.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:21.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:21.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:21.553 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:21.580 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,749]>
2015-12-03 02:04:21.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:21.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:21.676 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:21.692 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:21.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[729,749]>
2015-12-03 02:04:23.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:23.864 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:23.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:23.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:24.144 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:24.230 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:24.233 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 73}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:24.265 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:ImageView/""/"com.devexpert.weather:id/img_up"/[41,74]>
2015-12-03 02:04:24.268 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:24.269 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:24.356 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:24.374 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:24.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.devexpert.weather:id/img_up"/[41,74]>
2015-12-03 02:04:26.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:26.352 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:26.376 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:04:26.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:26.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:26.663 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:26.665 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 76}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:26.695 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:ImageView/""/""/[768,75]>
2015-12-03 02:04:26.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:26.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:04:26.778 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:26.793 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:26.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[768,75]>
2015-12-03 02:04:28.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:04:28.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:28.868 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:28.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:04:28.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:04:29.013 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:29.015 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devexpert.weather. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:04:29.023 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:04:29.026 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:04:29.028 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device)
2015-12-03 02:04:29.029 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:04:29.105 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:29.117 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:04:29.118 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:04:29.118 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.devexpert.weather}
2015-12-03 02:04:30.074 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:04:30.150 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:04:30.154 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:04:30.154 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:04:30.248 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:04:30.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devexpert.weather_v4.5.2-inlined.apk, device) - DONE
2015-12-03 02:04:39.004 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:04:39.004 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devuni.flashlight
2015-12-03 02:05:05.766 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:05.770 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:05:05.840 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:05:15.548 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:05:15.591 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:05:15.591 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:05:17.633 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:05:17.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:05:17.636 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:05:07.642
2015-12-03 02:05:17.636 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:05:17.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:05:17.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:17.781 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-03 02:05:17.782 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:05:17.953 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:17.959 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 29}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:17.980 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:17.984 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:17.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:18.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:18.073 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:18.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:21.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:21.175 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:21.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:21.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:21.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:21.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:21.672 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:21.694 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:21.697 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:21.699 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:21.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:21.808 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:21.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:23.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:23.974 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:23.996 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:23.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:24.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:24.172 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:24.174 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:24.192 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:24.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:24.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:24.289 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:24.309 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:24.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[736,150]>
2015-12-03 02:05:26.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:26.230 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:26.248 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:26.249 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:26.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:26.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:26.505 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:26.530 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 02:05:26.534 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:26.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:26.619 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:26.637 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:26.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 02:05:28.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:28.500 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:28.515 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:28.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:28.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:28.704 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:28.706 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:28.731 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Spinner/""/""/[556,548]>
2015-12-03 02:05:28.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:28.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:28.817 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:28.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:28.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[556,548]>
2015-12-03 02:05:30.884 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:30.885 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:30.903 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:30.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:30.970 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:31.056 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:31.058 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 7}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:31.077 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckedTextView/"Reverse landscape"/"android:id/text1"/[548,865]>
2015-12-03 02:05:31.079 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:31.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:31.167 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:31.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:31.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Reverse landscape"/"android:id/text1"/[548,865]>
2015-12-03 02:05:33.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:33.575 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:33.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:33.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:33.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:33.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:33.808 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:33.826 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:33.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:33.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:33.920 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:33.934 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:33.936 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:37.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:37.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:37.344 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:05:37.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:37.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:37.554 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:37.556 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 13}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:37.582 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:37.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:37.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:37.680 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:37.700 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:37.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:40.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:40.043 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:40.065 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:40.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:40.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:40.249 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:40.251 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:40.275 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/""/""/[1216,150]>
2015-12-03 02:05:40.278 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:40.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:40.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:40.379 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:40.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1216,150]>
2015-12-03 02:05:43.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:43.675 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:43.691 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:43.692 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:43.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:43.967 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:43.970 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 54}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:43.997 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/""/""/[320,515]>
2015-12-03 02:05:44.000 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:44.000 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:44.087 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:44.104 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:44.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[320,515]>
2015-12-03 02:05:48.114 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:48.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:48.130 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:48.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:48.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:48.301 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:48.303 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:48.323 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"28°C"/""/[320,301]>
2015-12-03 02:05:48.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:48.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:48.412 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:48.428 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:48.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"28°C"/""/[320,301]>
2015-12-03 02:05:50.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:50.286 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:50.304 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:50.305 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:50.378 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:50.463 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:50.465 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:50.489 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"82°F"/""/[320,301]>
2015-12-03 02:05:50.493 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:50.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:50.582 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:50.602 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:50.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"82°F"/""/[320,301]>
2015-12-03 02:05:52.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:52.458 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:52.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:52.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:52.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:52.667 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:52.670 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:52.695 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:52.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:52.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:52.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:52.801 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:52.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[1218,62]>
2015-12-03 02:05:56.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:56.149 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:56.166 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:56.166 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:56.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:56.365 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:56.367 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:56.391 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[621,703]>
2015-12-03 02:05:56.394 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:56.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:05:56.474 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:56.492 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:56.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[621,703]>
2015-12-03 02:05:59.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:05:59.697 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:05:59.714 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:05:59.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:05:59.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:05:59.948 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:05:59.950 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 49}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:05:59.962 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:05:59.965 INFO  o.d.e.strategy.ExplorationStrategy         0m 42s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:05:59.968 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:05:59.968 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.devuni.flashlight
2015-12-03 02:06:26.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:26.240 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:06:26.322 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:06:36.310 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:06:36.350 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:06:36.350 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:06:38.392 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:06:38.393 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:06:38.395 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:06:28.522
2015-12-03 02:06:38.396 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:06:38.503 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:06:38.503 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:38.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-03 02:06:38.564 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:06:38.740 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:06:38.743 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 29}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:06:38.766 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-03 02:06:38.769 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:06:38.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:06:38.860 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:38.873 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:38.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,1172]>
2015-12-03 02:06:41.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:06:41.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:41.093 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:41.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:06:41.172 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:06:41.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:06:41.266 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:06:41.288 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:06:41.291 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:06:41.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:06:41.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:41.403 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:41.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:06:48.915 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:06:48.915 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:48.946 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:06:48.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:06:49.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:06:49.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:06:49.137 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 13}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:06:49.156 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:06:49.159 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:06:49.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:06:49.244 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:49.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:49.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:06:51.970 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:06:51.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:51.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:51.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:06:52.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:06:52.222 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:06:52.225 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 54}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:06:52.247 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:Button/""/""/[400,1004]>
2015-12-03 02:06:52.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:06:52.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:06:52.335 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:52.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:52.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[400,1004]>
2015-12-03 02:06:57.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:06:57.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:57.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:57.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:06:57.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:06:57.639 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:06:57.641 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:06:57.667 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:06:57.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:06:57.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:06:57.755 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:06:57.771 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:06:57.774 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:07:03.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:07:03.455 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:03.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:03.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:07:03.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:07:03.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:03.675 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:07:03.700 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-03 02:07:03.703 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:07:03.705 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:07:03.776 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:03.790 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:03.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-03 02:07:07.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:07:07.284 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:07.301 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:07.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:07:07.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:07:07.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:07.469 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:07:07.495 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 02:07:07.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:07:07.500 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:07:07.591 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:07.606 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:07.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,602]>
2015-12-03 02:07:09.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:07:09.131 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:09.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:09.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:07:09.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:07:09.287 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:09.290 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:07:09.314 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:07:09.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:07:09.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:07:09.405 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:09.424 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:09.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[738,62]>
2015-12-03 02:07:15.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:07:15.446 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:15.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:15.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:07:15.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:07:15.668 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:15.671 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 48}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:07:15.693 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-03 02:07:15.696 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:07:15.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:07:15.767 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:15.780 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:15.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[491,360]>
2015-12-03 02:07:18.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:07:18.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:18.132 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:18.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:07:18.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:07:18.305 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:18.307 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.devuni.flashlight. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:07:18.319 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:07:18.321 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:07:18.325 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device)
2015-12-03 02:07:18.326 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:07:18.414 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:18.433 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:07:18.434 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:07:18.434 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.devuni.flashlight}
2015-12-03 02:07:19.302 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:07:19.378 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:19.385 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:07:19.386 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:07:19.474 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:07:19.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.devuni.flashlight_v5.1.5-inlined.apk, device) - DONE
2015-12-03 02:07:33.869 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device)
2015-12-03 02:07:33.870 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dianxinos.dxbs
2015-12-03 02:07:59.481 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:07:59.485 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:07:59.569 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:08:15.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:08:15.796 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:08:15.796 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:08:17.854 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:08:17.855 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:08:17.857 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:08:01.722
2015-12-03 02:08:17.857 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:08:17.962 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:08:17.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:08:18.078 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 52
2015-12-03 02:08:18.079 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:08:18.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device) - DONE
2015-12-03 02:08:18.248 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dianxinos.dxbs. Widgets# 12}, DeviceLogs{apiLogs#=52, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:08:18.256 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.dianxinos.dxbs Widgets count = 12>
2015-12-03 02:08:18.258 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:08:18.261 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device)
2015-12-03 02:08:18.263 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:08:18.342 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:08:18.363 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:08:18.364 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:08:18.364 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.dianxinos.dxbs}
2015-12-03 02:08:20.356 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:08:20.421 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:08:20.424 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:08:20.425 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:08:20.512 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:08:20.592 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dianxinos.dxbs_v3.8.5-inlined.apk, device) - DONE
2015-12-03 02:08:34.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:08:34.913 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-03 02:09:00.568 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:00.571 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:09:00.652 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:09:16.787 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:09:16.839 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:09:16.839 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:09:18.892 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:09:18.893 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:09:18.895 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:09:03.182
2015-12-03 02:09:18.895 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:09:18.980 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:09:18.980 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:19.024 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:09:19.025 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:09:19.286 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:19.291 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:19.309 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-03 02:09:19.312 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:19.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:19.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:19.407 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:19.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-03 02:09:21.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:21.482 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:21.506 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:21.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:21.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:21.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:21.723 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:21.741 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-03 02:09:21.744 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:21.745 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:21.831 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:21.850 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:21.853 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-03 02:09:24.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:24.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:24.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:24.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:24.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:24.478 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:24.480 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:24.496 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-03 02:09:24.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:24.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:24.587 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:24.607 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:24.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-03 02:09:26.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:26.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:26.492 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:26.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:26.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:26.663 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:26.665 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:26.685 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-03 02:09:26.690 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:26.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:26.790 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:26.807 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:26.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-03 02:09:28.153 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:28.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:28.170 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:28.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:28.255 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:28.340 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:28.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:28.361 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-03 02:09:28.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:28.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:28.462 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:28.479 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:28.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-03 02:09:30.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:30.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:30.863 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:30.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:30.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:31.070 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:31.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:31.095 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-03 02:09:31.097 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:31.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:31.179 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:31.197 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:31.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-03 02:09:33.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:33.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:33.258 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:33.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:33.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:33.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:33.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:33.477 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-03 02:09:33.480 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:33.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:33.565 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:33.583 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:33.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-03 02:09:36.624 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:36.624 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:36.689 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-03 02:09:36.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:36.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:36.833 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:36.835 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:36.854 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[43,70]>
2015-12-03 02:09:36.856 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:36.857 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:36.941 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:36.955 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:36.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[43,70]>
2015-12-03 02:09:40.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:40.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:40.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 02:09:40.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:40.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:40.955 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:40.957 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 66}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:40.974 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-03 02:09:40.976 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:40.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:41.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:41.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:41.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-03 02:09:43.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:43.274 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:43.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:09:43.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:43.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:43.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:43.529 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 35}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:43.551 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-03 02:09:43.555 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:43.556 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:43.645 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:43.685 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:09:43.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-03 02:09:45.896 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:45.896 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:45.942 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:09:45.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:46.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:46.199 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:46.201 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 66}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:46.219 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:09:46.221 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:46.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:46.307 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:46.321 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:46.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:09:48.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:48.354 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:48.396 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:09:48.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:48.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:48.556 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:48.558 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 14}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:48.579 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-03 02:09:48.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:48.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:48.678 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:48.697 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:48.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-03 02:09:51.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:51.034 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:51.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:09:51.077 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:51.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:51.295 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:51.297 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:51.323 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:EditText/"Username or email"/"com.duolingo:id/login"/[400,216]>
2015-12-03 02:09:51.327 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:51.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:51.412 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:51.427 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:51.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Username or email"/"com.duolingo:id/login"/[400,216]>
2015-12-03 02:09:53.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:53.279 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:53.297 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:53.297 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:53.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:53.489 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:53.491 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:53.514 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-03 02:09:53.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:53.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:09:53.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:53.621 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:09:53.624 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-03 02:09:57.951 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:09:57.952 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:09:57.993 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:09:57.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:09:58.189 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:09:58.294 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:09:58.297 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 66}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:09:58.312 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:09:58.316 INFO  o.d.e.strategy.ExplorationStrategy         0m 39s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:09:58.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:09:58.319 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-03 02:10:24.280 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:24.283 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:10:24.360 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:10:39.285 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:10:39.337 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:10:39.337 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:10:41.387 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:10:41.389 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:10:41.391 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:10:26.202
2015-12-03 02:10:41.391 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:10:41.483 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:10:41.484 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:41.557 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:10:41.558 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:10:41.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:41.777 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:41.804 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-03 02:10:41.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:41.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:41.884 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:41.902 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:41.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-03 02:10:43.967 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:10:43.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:43.992 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:43.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:10:44.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:10:44.209 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:44.212 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:44.235 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-03 02:10:44.239 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:44.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:44.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:44.336 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:44.338 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[44,70]>
2015-12-03 02:10:46.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:10:46.787 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:46.811 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:46.812 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:10:46.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:10:47.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:47.027 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:47.052 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-03 02:10:47.056 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:47.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:47.135 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:47.152 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:47.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-03 02:10:49.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:10:49.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:49.229 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:49.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:10:49.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:10:49.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:49.425 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:49.446 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,184]>
2015-12-03 02:10:49.449 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:49.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:49.535 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:49.551 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:10:49.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,184]>
2015-12-03 02:10:54.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:10:54.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:54.710 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-03 02:10:54.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:10:55.014 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:10:55.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:55.101 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 71}, DeviceLogs{apiLogs#=21, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:55.130 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:ImageView/""/"com.duolingo:id/icon"/[399,488]>
2015-12-03 02:10:55.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:55.135 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:55.218 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:55.249 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:10:55.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.duolingo:id/icon"/[399,488]>
2015-12-03 02:10:57.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:10:57.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:57.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-03 02:10:57.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:10:57.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:10:57.996 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:10:57.998 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 31}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:10:58.022 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:TextView/"TEST OUT"/"com.duolingo:id/bar_button"/[710,74]>
2015-12-03 02:10:58.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:10:58.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:10:58.107 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:10:58.131 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:10:58.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"TEST OUT"/"com.duolingo:id/bar_button"/[710,74]>
2015-12-03 02:11:00.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:11:00.405 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:11:00.440 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:11:00.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:11:00.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:11:00.575 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-03 02:11:00.577 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 6}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:11:00.592 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   23 <ExplAct Reset app>
2015-12-03 02:11:00.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-03 02:11:00.597 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-03 02:11:26.544 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:11:39.052 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:11:39.053 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-03 02:12:04.585 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:04.589 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:12:04.664 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:12:21.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:12:21.571 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:12:21.571 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:12:23.636 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:12:23.637 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:12:23.639 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:12:06.402
2015-12-03 02:12:23.639 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:12:23.749 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:12:23.749 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:23.817 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 02:12:23.818 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:12:24.228 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:24.236 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:24.253 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:24.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:24.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:24.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:24.372 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:24.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:26.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:26.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:27.000 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:12:27.001 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:27.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:27.502 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:27.506 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:27.531 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-03 02:12:27.534 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:27.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:27.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:27.638 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:27.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-03 02:12:30.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:30.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:30.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:30.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:30.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:30.876 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:30.880 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 157}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:30.910 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,545]>
2015-12-03 02:12:30.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:30.914 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:31.000 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:31.022 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:31.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,545]>
2015-12-03 02:12:33.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:33.868 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:33.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:33.885 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:34.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:34.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:34.252 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 84}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:34.278 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1045]>
2015-12-03 02:12:34.281 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:34.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:34.357 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:34.371 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:34.374 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1045]>
2015-12-03 02:12:36.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:36.419 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:36.435 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:36.436 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:36.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:36.767 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:36.770 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 81}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:36.795 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:36.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:36.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:36.883 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:36.904 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:36.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:39.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:39.244 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:39.278 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:12:39.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:39.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:39.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:39.762 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:39.791 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[352,303]>
2015-12-03 02:12:39.795 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:39.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:39.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:39.892 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:39.894 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[352,303]>
2015-12-03 02:12:41.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:41.969 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:41.984 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:41.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:42.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:42.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:42.368 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:42.391 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,402]>
2015-12-03 02:12:42.394 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:42.395 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:42.483 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:42.500 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:42.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,402]>
2015-12-03 02:12:44.573 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:44.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:44.602 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:12:44.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:44.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:44.938 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:44.942 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:44.975 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,885]>
2015-12-03 02:12:44.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:44.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:45.060 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:45.075 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:45.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[223,885]>
2015-12-03 02:12:47.183 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:47.183 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:47.209 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:12:47.210 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:47.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:47.566 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:47.568 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:47.596 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:GridView/""/"com.dynamixsoftware.printhand:id/images"/[544,303]>
2015-12-03 02:12:47.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:47.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:47.688 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:47.705 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:47.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/"com.dynamixsoftware.printhand:id/images"/[544,303]>
2015-12-03 02:12:49.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:49.043 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:49.063 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:49.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:49.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:49.403 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:49.405 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 111}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:49.436 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-03 02:12:49.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:49.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:49.523 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:49.538 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:49.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-03 02:12:51.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:51.823 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:51.860 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:12:51.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:52.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:52.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:52.120 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:52.145 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-03 02:12:52.148 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:52.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:52.230 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:52.246 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:52.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,170]>
2015-12-03 02:12:54.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:54.105 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:54.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:54.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:54.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:54.340 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:54.342 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:54.365 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:54.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:54.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:54.446 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:54.462 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:54.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,295]>
2015-12-03 02:12:56.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:56.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:56.619 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:56.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:57.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:57.382 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:57.385 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:57.411 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:CheckedTextView/"Gallery"/"com.dynamixsoftware.printhand:id/text"/[497,241]>
2015-12-03 02:12:57.414 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:57.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:57.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:57.527 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:57.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Gallery"/"com.dynamixsoftware.printhand:id/text"/[497,241]>
2015-12-03 02:12:59.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:12:59.439 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:59.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:59.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:12:59.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:12:59.798 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:12:59.800 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:12:59.831 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:CheckedTextView/"Gmail"/"com.dynamixsoftware.printhand:id/text"/[497,511]>
2015-12-03 02:12:59.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:12:59.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:12:59.924 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:12:59.939 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:12:59.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Gmail"/"com.dynamixsoftware.printhand:id/text"/[497,511]>
2015-12-03 02:13:01.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:01.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:01.894 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:01.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:02.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:02.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:02.255 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 118}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:02.277 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:13:02.281 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:13:02.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:02.286 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-03 02:13:28.451 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:28.455 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:13:28.539 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:13:44.460 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:13:44.509 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:13:44.509 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:13:46.561 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:13:46.563 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:13:46.567 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:13:30.712
2015-12-03 02:13:46.567 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:13:46.698 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:13:46.698 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:46.760 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 02:13:46.761 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:13:47.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:47.309 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:47.341 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1156]>
2015-12-03 02:13:47.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:47.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:47.431 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:47.448 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:47.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,1156]>
2015-12-03 02:13:49.627 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:49.627 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:49.656 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:13:49.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:49.775 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:49.861 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:49.864 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:49.888 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-03 02:13:49.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:49.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:49.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:50.002 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:50.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[700,70]>
2015-12-03 02:13:52.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:52.199 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:52.228 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:13:52.228 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:52.378 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:52.465 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:52.467 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 47}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:52.497 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,670]>
2015-12-03 02:13:52.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:52.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:52.589 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:52.609 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:52.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,670]>
2015-12-03 02:13:54.650 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:54.650 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:54.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:54.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:54.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:54.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:54.917 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:54.942 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:13:54.944 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:54.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:55.030 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:55.047 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:55.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:13:56.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:56.953 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:56.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:13:56.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:57.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:57.183 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:57.186 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:57.212 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[556,70]>
2015-12-03 02:13:57.220 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:57.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:57.305 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:57.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:13:57.328 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[556,70]>
2015-12-03 02:13:59.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:13:59.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:13:59.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:13:59.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:13:59.771 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:13:59.862 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:13:59.866 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 56}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:13:59.893 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-03 02:13:59.897 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:13:59.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:13:59.986 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:00.000 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:00.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-03 02:14:02.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:02.058 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:02.071 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:02.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:02.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:02.210 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:02.213 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:02.240 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[648,209]>
2015-12-03 02:14:02.243 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:02.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:02.327 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:02.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:02.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[648,209]>
2015-12-03 02:14:04.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:04.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:04.637 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 02:14:04.638 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:04.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:04.798 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:04.801 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 9}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:04.819 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:14:04.822 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:04.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:04.910 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:04.927 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:04.929 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:14:06.823 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:06.824 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:06.849 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:14:06.850 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:07.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:07.096 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:07.098 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 56}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:07.126 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,563]>
2015-12-03 02:14:07.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:07.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:07.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:07.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:07.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,563]>
2015-12-03 02:14:09.290 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:09.291 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:09.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:09.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:09.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:09.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:09.600 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:09.628 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,724]>
2015-12-03 02:14:09.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:09.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:09.719 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:09.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:09.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,724]>
2015-12-03 02:14:11.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:11.827 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:11.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:11.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:11.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:11.998 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:12.001 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:12.023 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,773]>
2015-12-03 02:14:12.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:12.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:12.113 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:12.131 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:12.134 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,773]>
2015-12-03 02:14:14.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:14.026 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:14.045 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:14.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:14.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:14.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:14.308 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:14.337 INFO  o.d.e.strategy.ExplorationStrategy         1m 50s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-03 02:14:14.341 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:14.342 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:14.425 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:14.441 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:14.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[767,70]>
2015-12-03 02:14:16.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:16.480 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:16.495 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:16.496 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:16.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:16.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:16.653 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:16.681 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.dynamixsoftware.printhand:id/root"/[400,619]>
2015-12-03 02:14:16.685 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:16.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:16.776 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:16.796 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:16.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.dynamixsoftware.printhand:id/root"/[400,619]>
2015-12-03 02:14:18.677 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:18.677 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:18.692 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:18.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:18.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:18.966 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:18.969 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 58}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:18.994 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:14:18.996 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:18.997 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:14:19.084 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:19.101 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:14:19.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[34,70]>
2015-12-03 02:14:20.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:14:20.445 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:20.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:14:20.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:14:20.631 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:14:20.719 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:14:20.722 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:14:20.744 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:14:20.748 INFO  o.d.e.strategy.ExplorationStrategy         1m 56s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-03 02:14:20.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:14:20.752 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.dynamixsoftware.printhand
2015-12-03 02:14:46.839 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:14:46.844 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:14:46.931 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:15:03.302 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:15:03.356 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:15:03.357 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:15:05.411 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:15:05.412 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:15:05.414 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:14:49.052
2015-12-03 02:15:05.414 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:15:05.501 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:15:05.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:15:05.570 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 02:15:05.571 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:15:06.069 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:15:06.072 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.dynamixsoftware.printhand. Widgets# 67}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:15:06.087 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:15:06.091 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:15:06.094 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device)
2015-12-03 02:15:06.095 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:15:06.176 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:15:06.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:15:06.193 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:15:06.194 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.dynamixsoftware.printhand}
2015-12-03 02:15:07.063 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:15:07.144 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:15:07.147 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:15:07.148 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:15:07.237 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:15:07.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.dynamixsoftware.printhand_v6.1.4-inlined.apk, device) - DONE
2015-12-03 02:15:20.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:15:20.252 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-03 02:15:45.941 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:15:45.945 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:15:46.027 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:16:02.344 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:16:02.388 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:16:02.388 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:16:04.444 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:16:04.446 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:16:04.449 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:15:47.802
2015-12-03 02:16:04.449 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:16:04.562 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:16:04.562 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:04.641 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 28
2015-12-03 02:16:04.642 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:16:04.788 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:16:04.793 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=28, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:16:04.816 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-03 02:16:04.819 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:16:04.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:16:04.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:04.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:04.927 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-03 02:16:06.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:16:06.930 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:06.945 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:06.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:16:07.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:16:07.349 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:16:07.351 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:16:07.374 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-03 02:16:07.378 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:16:07.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:16:07.464 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:07.482 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:07.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-03 02:16:09.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:16:09.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:09.387 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:09.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:16:09.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:16:09.727 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:16:09.729 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:16:09.751 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-03 02:16:09.754 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:16:09.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:16:09.831 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:09.846 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:09.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-03 02:16:11.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:16:11.733 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:11.749 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:11.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:16:12.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:16:12.136 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:16:12.139 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:16:12.163 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-03 02:16:12.166 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:16:12.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:16:12.253 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:12.271 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:16:12.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-03 02:16:16.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:16:16.477 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:16.504 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:16:16.506 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:16:16.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:16:16.861 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:16:16.863 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:16:16.874 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    6 <ExplAct Reset app>
2015-12-03 02:16:16.878 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:16:16.878 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-03 02:16:45.838 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:16:45.842 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:16:45.929 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:17:02.042 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:17:02.082 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:17:02.082 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:17:04.141 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:17:04.142 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:17:04.144 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:16:48.312
2015-12-03 02:17:04.144 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:17:04.250 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:17:04.250 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:04.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 02:17:04.352 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:17:04.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:04.518 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:04.543 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-03 02:17:04.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:04.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:04.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:04.660 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:04.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-03 02:17:07.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:07.399 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:07.550 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-03 02:17:07.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:07.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:07.711 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:07.713 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 15}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:07.732 INFO  o.d.e.strategy.ExplorationStrategy         1m  2s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-03 02:17:07.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:07.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:07.819 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:07.836 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:07.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-03 02:17:09.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:09.721 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:09.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:09.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:10.358 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:10.448 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:10.451 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 128}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:10.476 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-03 02:17:10.479 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:10.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:10.568 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:10.583 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:10.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-03 02:17:13.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:13.256 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:13.293 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:17:13.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:13.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:13.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:13.515 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 29}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:13.537 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-03 02:17:13.541 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:13.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:13.629 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:13.644 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:13.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-03 02:17:19.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:19.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:19.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 25
2015-12-03 02:17:19.995 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:21.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:21.497 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:21.499 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 161}, DeviceLogs{apiLogs#=25, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:21.521 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1201]>
2015-12-03 02:17:21.523 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:21.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:21.606 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:21.629 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:21.631 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,1201]>
2015-12-03 02:17:24.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:24.749 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:24.809 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-03 02:17:24.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:25.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:25.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:25.206 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 79}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:25.235 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[144,70]>
2015-12-03 02:17:25.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:25.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:25.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:25.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:17:25.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[144,70]>
2015-12-03 02:17:27.496 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:27.496 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:27.541 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:17:27.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:27.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:28.079 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:28.081 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 161}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:28.117 INFO  o.d.e.strategy.ExplorationStrategy         1m 23s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:GridView/""/"android:id/list"/[400,656]>
2015-12-03 02:17:28.120 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:28.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:17:28.184 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:28.218 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:17:28.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:GridView/""/"android:id/list"/[400,656]>
2015-12-03 02:17:33.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:17:33.313 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:17:33.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:17:33.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:17:33.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:17:33.590 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:17:33.593 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:17:33.608 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 02:17:33.612 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:17:33.612 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-03 02:18:03.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:18:03.191 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:18:03.283 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:18:19.393 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:18:19.443 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:18:19.444 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:18:21.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:18:21.512 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:18:21.513 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:18:05.492
2015-12-03 02:18:21.514 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:18:21.608 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:18:21.609 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:18:21.686 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 27
2015-12-03 02:18:21.687 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:18:21.843 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:18:21.845 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=27, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:18:21.856 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:18:21.859 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:18:21.863 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-03 02:18:21.864 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:18:21.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:18:21.970 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:18:21.971 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:18:21.971 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ebay.kleinanzeigen}
2015-12-03 02:18:22.971 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:18:23.037 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:18:23.041 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:18:23.041 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:18:23.141 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:18:23.224 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-03 02:18:44.814 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:18:44.815 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-03 02:19:10.739 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:10.743 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:19:10.835 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:19:26.934 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:19:26.969 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:19:26.969 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:19:29.027 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:19:29.028 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:19:29.030 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:19:12.652
2015-12-03 02:19:29.030 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:19:29.133 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:19:29.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:29.201 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 02:19:29.202 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:19:29.479 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:29.484 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 48}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:29.503 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-03 02:19:29.507 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:29.508 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:29.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:29.609 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:29.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-03 02:19:32.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:32.416 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:32.476 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 02:19:32.477 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:32.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:32.689 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:32.691 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:32.713 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-03 02:19:32.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:32.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:32.809 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:32.823 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:32.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-03 02:19:35.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:35.475 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:35.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 02:19:35.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:35.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:35.697 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:35.699 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 16}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:35.722 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-03 02:19:35.726 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:35.727 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:35.818 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:35.834 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:35.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-03 02:19:37.984 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:37.984 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:38.016 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:19:38.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:38.120 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:38.208 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:38.210 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:38.233 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-03 02:19:38.237 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:38.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:38.335 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:38.349 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:38.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-03 02:19:39.689 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:39.689 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:39.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:39.708 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:39.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:39.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:39.897 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:39.921 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-03 02:19:39.925 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:39.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:40.015 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:40.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:40.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-03 02:19:42.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:42.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:42.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:42.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:42.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:42.423 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:42.426 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:42.447 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-03 02:19:42.450 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:42.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:42.535 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:42.551 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:42.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-03 02:19:45.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:45.414 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:45.454 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 02:19:45.455 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:45.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:45.728 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:45.730 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 54}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:45.755 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:19:45.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:45.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:45.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:45.870 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:45.872 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:19:47.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:47.887 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:47.906 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:47.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:47.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:48.052 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:48.054 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:48.079 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-03 02:19:48.082 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:48.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:48.170 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:48.186 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:48.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-03 02:19:50.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:50.617 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:50.660 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 02:19:50.661 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:50.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:50.978 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:50.980 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 49}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:51.000 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-03 02:19:51.005 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:51.006 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:51.098 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:51.118 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:51.120 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-03 02:19:53.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:53.747 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:53.794 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 02:19:53.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:53.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:54.007 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:54.009 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:54.035 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-03 02:19:54.040 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:54.041 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:54.127 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:54.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:54.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-03 02:19:55.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:55.991 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:56.004 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:56.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:56.107 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:56.186 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:56.189 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:56.212 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-03 02:19:56.216 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:56.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:56.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:56.324 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:56.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-03 02:19:58.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:19:58.209 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:58.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:58.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:19:58.342 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:19:58.429 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:19:58.431 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:19:58.453 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-03 02:19:58.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:19:58.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:19:58.546 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:19:58.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:19:58.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-03 02:20:00.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:20:00.682 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:20:00.700 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:20:00.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:20:00.792 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:20:00.878 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:20:00.880 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:20:00.903 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-03 02:20:00.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:20:00.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:20:00.992 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:20:01.010 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:20:01.013 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-03 02:20:08.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:20:08.117 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:20:08.145 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:20:08.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:20:08.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:20:08.448 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:20:08.450 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 66}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:20:08.483 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[58,482]>
2015-12-03 02:20:08.486 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:20:08.487 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:20:08.573 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:20:08.590 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:20:08.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[58,482]>
2015-12-03 02:20:10.635 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:20:10.635 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:20:10.650 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:20:10.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:20:10.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:20:10.911 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-03 02:20:10.914 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 66}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:20:10.933 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:20:10.937 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:20:10.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-03 02:20:10.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-03 02:20:37.058 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:20:47.902 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:20:47.902 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebayschnppchen
2015-12-03 02:21:13.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:21:13.495 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:21:13.578 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:21:26.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:21:26.661 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:21:26.661 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:21:28.708 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:21:28.709 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:21:28.711 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:21:15.312
2015-12-03 02:21:28.711 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:21:28.808 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:21:28.808 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:21:28.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 57
2015-12-03 02:21:28.974 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:21:29.749 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:21:29.755 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 106}, DeviceLogs{apiLogs#=57, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:21:29.778 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,1006]>
2015-12-03 02:21:29.782 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:21:29.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:21:29.867 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:21:29.885 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:21:29.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[125,1006]>
2015-12-03 02:21:42.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:21:42.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:21:42.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 02:21:42.730 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:21:43.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:21:43.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:21:43.573 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 212}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:21:43.603 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[525,615]>
2015-12-03 02:21:43.608 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:21:43.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:21:43.688 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:21:43.704 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:21:43.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[525,615]>
2015-12-03 02:22:04.899 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:22:04.900 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:04.936 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:22:04.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:22:05.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:22:05.574 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:22:05.577 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 169}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:22:05.606 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[211,1019]>
2015-12-03 02:22:05.609 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:22:05.610 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:22:05.690 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:05.704 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:05.708 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[211,1019]>
2015-12-03 02:22:15.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:22:15.907 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:15.923 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:15.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:22:16.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:22:16.375 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:22:16.379 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 169}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:22:16.414 INFO  o.d.e.strategy.ExplorationStrategy         0m 46s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_refresh"/[672,70]>
2015-12-03 02:22:16.417 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:22:16.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:22:16.486 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:16.500 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:16.504 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ebayschnppchen:id/menu_refresh"/[672,70]>
2015-12-03 02:22:36.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:22:36.261 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:36.276 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:36.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:22:36.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:22:36.972 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:22:36.975 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 168}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:22:37.001 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[64,948]>
2015-12-03 02:22:37.004 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:22:37.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:22:37.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:37.095 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:37.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[64,948]>
2015-12-03 02:22:47.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:22:47.261 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:47.275 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:47.276 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:22:47.651 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:22:47.731 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:22:47.734 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 168}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:22:47.762 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[399,811]>
2015-12-03 02:22:47.766 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:22:47.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:22:47.838 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:47.852 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:47.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,811]>
2015-12-03 02:22:58.292 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:22:58.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:58.308 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:58.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:22:58.692 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:22:58.771 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:22:58.774 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 168}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:22:58.798 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[212,997]>
2015-12-03 02:22:58.801 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:22:58.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:22:58.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:22:58.889 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:22:58.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[212,997]>
2015-12-03 02:23:09.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:23:09.816 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:09.832 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:09.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:23:10.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:23:10.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:10.296 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 168}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:23:10.325 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:23:10.329 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:23:10.330 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:23:10.407 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:10.424 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:10.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:23:12.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:23:12.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:12.465 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:12.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:23:12.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:23:12.612 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:12.615 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:23:12.643 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,172]>
2015-12-03 02:23:12.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:23:12.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:23:12.728 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:12.744 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:12.747 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,172]>
2015-12-03 02:23:14.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:23:14.205 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:14.220 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:14.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:23:14.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:23:14.362 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:14.364 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:23:14.385 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-03 02:23:14.388 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:23:14.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:23:14.465 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:14.479 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:14.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,205]>
2015-12-03 02:23:24.568 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:23:24.568 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:24.582 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:24.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:23:25.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:23:25.255 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:25.258 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 168}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:23:25.287 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[754,141]>
2015-12-03 02:23:25.291 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:23:25.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:23:25.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:25.377 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:25.381 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[754,141]>
2015-12-03 02:23:32.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:23:32.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:32.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:23:32.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:23:32.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:23:32.795 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:32.798 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebayschnppchen. Widgets# 87}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:23:32.813 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:23:32.816 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:23:32.819 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device)
2015-12-03 02:23:32.819 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:23:32.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:32.920 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:23:32.921 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:23:32.921 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ebayschnppchen}
2015-12-03 02:23:34.124 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:23:34.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:23:34.207 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:23:34.207 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:23:34.392 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:23:34.477 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebayschnppchen_v1.31-inlined.apk, device) - DONE
2015-12-03 02:23:47.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:23:47.752 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.evgit.sochi2014olympics
2015-12-03 02:24:13.400 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:13.404 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:24:13.494 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:24:27.208 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:24:27.244 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:24:27.244 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:24:29.283 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:24:29.285 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:24:29.287 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:24:15.312
2015-12-03 02:24:29.287 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:24:29.382 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:24:29.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:29.433 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 02:24:29.434 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:24:51.915 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:24:51.921 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:24:51.942 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:51.945 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:24:51.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:24:52.025 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:52.039 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:52.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:53.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:24:53.393 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:53.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:53.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:24:53.471 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:24:53.556 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:24:53.559 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:24:53.578 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:53.581 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:24:53.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:24:53.661 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:53.679 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:53.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:57.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:24:57.785 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:57.824 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:24:57.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:24:57.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:24:57.960 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:24:57.963 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:24:57.982 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:57.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:24:57.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:24:58.061 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:58.079 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:58.081 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:59.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:24:59.426 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:59.448 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:59.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:24:59.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:24:59.600 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:24:59.603 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:24:59.625 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:24:59.629 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:24:59.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:24:59.711 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:24:59.728 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:24:59.730 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:01.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:01.075 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:01.095 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:01.096 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:01.166 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:01.255 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:01.257 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:01.281 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:01.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:01.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:01.371 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:01.391 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:01.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:04.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:04.300 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:04.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:04.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:04.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:04.484 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:04.488 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:04.518 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:04.521 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:04.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:04.608 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:04.623 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:04.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:05.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:05.979 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:05.996 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:05.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:06.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:06.161 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:06.163 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:06.181 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:06.184 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:06.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:06.266 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:06.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:06.284 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:07.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:07.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:07.655 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:07.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:07.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:07.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:07.808 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:07.829 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:07.833 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:07.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:07.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:07.936 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:07.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:10.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:10.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:10.867 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:10.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:10.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:11.020 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:11.022 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:11.043 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:11.046 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:11.047 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:11.134 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:11.151 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:11.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:12.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:12.503 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:12.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:12.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:12.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:12.684 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:12.686 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:12.703 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:12.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:12.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:12.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:12.810 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:12.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:14.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:14.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:14.184 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:14.185 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:14.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:14.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:14.346 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:14.370 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:14.372 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:14.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:14.461 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:14.481 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:14.483 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:17.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:17.385 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:17.403 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:17.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:17.481 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:17.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:17.571 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:17.588 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:17.592 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:17.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:17.679 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:17.698 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:17.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:19.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:19.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:19.069 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:19.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:19.141 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:19.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:19.237 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:19.260 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:19.263 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:19.264 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:19.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:19.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:19.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:20.718 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:20.718 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:20.736 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:20.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:20.820 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:20.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:20.910 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:20.930 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   15 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:20.933 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:20.934 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:25:21.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:21.051 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:21.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:25:24.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:25:24.089 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:24.108 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:25:24.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:25:24.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:25:24.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:25:24.255 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:25:24.265 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:25:24.268 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:25:24.271 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:25:24.271 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.evgit.sochi2014olympics
2015-12-03 02:25:54.103 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:25:54.108 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:25:54.205 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:26:10.930 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:26:11.001 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:26:11.001 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:26:13.042 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:26:13.043 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:26:13.045 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:25:57.782
2015-12-03 02:26:13.045 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:26:13.129 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:26:13.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:13.180 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 02:26:13.181 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:26:37.828 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:37.830 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:37.854 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:37.858 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:37.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:37.942 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:37.979 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:37.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:39.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:39.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:39.386 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:39.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:39.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:39.524 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:39.526 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:39.544 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:39.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:39.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:39.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:39.637 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:39.641 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:40.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:40.984 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:41.002 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:41.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:41.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:41.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:41.152 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:41.174 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   19 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:41.178 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:41.179 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:41.261 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:41.341 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:26:41.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:44.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:44.314 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:44.342 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:26:44.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:44.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:44.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:44.503 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:44.525 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:44.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:44.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:44.618 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:44.638 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:44.641 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:45.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:45.994 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:46.009 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:46.010 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:46.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:46.165 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:46.167 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:46.191 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:46.194 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:46.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:46.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:46.306 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:46.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:48.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:48.849 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:48.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:48.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:48.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:49.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:49.030 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:49.051 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   22 <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:49.054 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:49.055 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:26:49.141 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:49.159 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:49.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"You are running old version, please update,. Google Play"/"android:id/message"/[400,653]>
2015-12-03 02:26:52.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:26:52.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:52.077 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:52.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:26:52.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:26:52.230 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:26:52.232 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.evgit.sochi2014olympics. Widgets# 12}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:26:52.239 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:26:52.240 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:26:52.244 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device)
2015-12-03 02:26:52.245 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:26:52.327 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:52.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:26:52.346 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:26:52.346 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.evgit.sochi2014olympics}
2015-12-03 02:26:53.871 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:26:53.942 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:26:53.945 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:26:53.946 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:26:54.045 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:26:54.125 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.evgit.sochi2014olympics_v1.9.4-inlined.apk, device) - DONE
2015-12-03 02:27:02.676 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:27:02.676 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-03 02:27:28.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:28.315 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:27:28.399 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:27:39.864 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:27:39.917 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:27:39.917 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:27:41.977 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:27:41.978 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:27:41.980 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:27:30.342
2015-12-03 02:27:41.981 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:27:42.069 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:27:42.069 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:42.168 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 48
2015-12-03 02:27:42.168 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:27:42.292 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:27:42.299 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=48, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:27:42.320 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-03 02:27:42.324 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:27:42.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:27:42.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:42.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:27:42.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-03 02:27:44.296 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:27:44.296 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:44.312 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:27:44.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:27:44.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:27:44.640 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:27:44.643 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:27:44.662 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-03 02:27:44.665 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:27:44.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:27:44.746 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:44.762 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:27:44.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-03 02:27:47.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:27:47.953 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:47.990 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:27:47.991 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:27:48.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:27:48.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:27:48.204 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:27:48.227 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-03 02:27:48.230 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:27:48.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:27:48.312 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:48.332 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:27:48.335 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-03 02:27:52.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:27:52.420 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:27:52.439 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:27:52.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:27:52.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:27:52.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:27:52.672 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.plus. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:27:52.684 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 02:27:52.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:27:52.688 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-03 02:28:21.190 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:21.195 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:28:21.289 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:28:36.619 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:28:36.671 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:28:36.671 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:28:38.737 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:28:38.739 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:28:38.742 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:28:23.422
2015-12-03 02:28:38.743 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:28:38.861 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:28:38.862 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:38.952 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 47
2015-12-03 02:28:38.953 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:28:39.101 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:39.105 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=47, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:39.136 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-03 02:28:39.140 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:39.141 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:39.217 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:39.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:39.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-03 02:28:41.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:41.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:41.164 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:41.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:41.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:41.484 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:41.487 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:41.509 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[585,1158]>
2015-12-03 02:28:41.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:41.513 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:41.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:41.616 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:41.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[585,1158]>
2015-12-03 02:28:43.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:43.538 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:43.559 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:43.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:43.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:43.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:43.786 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:43.806 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:    8 <ExplAct LC? 1 Wdgt:View/""/"com.frogsparks.mytrails:id/map"/[400,670]>
2015-12-03 02:28:43.809 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:43.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:43.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:43.920 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:43.923 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:View/""/"com.frogsparks.mytrails:id/map"/[400,670]>
2015-12-03 02:28:46.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:46.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:46.995 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:46.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:47.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:47.253 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:47.255 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:47.281 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,493]>
2015-12-03 02:28:47.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:47.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:47.388 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:47.404 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:47.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,493]>
2015-12-03 02:28:49.453 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:49.454 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:49.471 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:49.471 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:49.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:49.648 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:49.650 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:49.676 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/""/"com.frogsparks.mytrails:id/recording"/[502,70]>
2015-12-03 02:28:49.680 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:49.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:49.776 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:49.792 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:49.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.frogsparks.mytrails:id/recording"/[502,70]>
2015-12-03 02:28:51.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:51.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:51.861 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:51.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:51.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:52.039 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:52.041 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:52.063 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ListView/""/""/[608,270]>
2015-12-03 02:28:52.066 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:52.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:52.160 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:52.175 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:52.178 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[608,270]>
2015-12-03 02:28:54.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:54.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:54.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:54.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:54.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:54.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:54.514 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:54.538 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:28:54.544 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:54.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:54.631 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:54.652 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:54.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 02:28:56.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:56.701 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:56.718 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:56.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:56.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:56.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:56.891 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:56.912 INFO  o.d.e.strategy.ExplorationStrategy         1m 14s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,400]>
2015-12-03 02:28:56.916 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:56.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:28:57.003 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:57.028 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:28:57.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,400]>
2015-12-03 02:28:59.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:28:59.117 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:28:59.153 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:28:59.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:28:59.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:28:59.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:28:59.357 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:28:59.370 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 02:28:59.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:28:59.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-03 02:29:25.092 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:29:25.096 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:29:25.171 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:29:40.149 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:29:40.211 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:29:40.211 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:29:42.271 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:29:42.273 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:29:42.275 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:29:26.982
2015-12-03 02:29:42.275 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:29:42.373 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:29:42.374 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:29:42.467 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 49
2015-12-03 02:29:42.468 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:29:42.604 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:29:42.606 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=49, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:29:42.616 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:29:42.619 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:29:42.622 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-03 02:29:42.623 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:29:42.712 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:29:42.729 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:29:42.730 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:29:42.730 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.frogsparks.mytrails}
2015-12-03 02:29:43.829 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:29:43.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:29:43.910 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:29:43.910 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:29:44.012 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:29:44.097 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-03 02:30:03.810 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:03.811 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-03 02:30:29.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:29.457 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:30:29.553 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:30:40.577 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:30:40.633 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:30:40.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:30:42.687 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:30:42.689 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:30:42.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:30:31.312
2015-12-03 02:30:42.691 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:30:42.793 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:30:42.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:42.856 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 02:30:42.858 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:30:43.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:43.074 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:43.097 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-03 02:30:43.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:43.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:43.192 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:43.214 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:43.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-03 02:30:45.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:45.486 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:45.516 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:30:45.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:45.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:45.677 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:45.679 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:45.705 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-03 02:30:45.708 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:45.709 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:45.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:45.795 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:45.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-03 02:30:47.796 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:47.796 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:47.826 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:30:47.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:47.923 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:47.998 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:48.001 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:48.021 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-03 02:30:48.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:48.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:48.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:48.135 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:48.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-03 02:30:49.478 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:49.478 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:49.494 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:49.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:49.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:49.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:49.700 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:49.722 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-03 02:30:49.725 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:49.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:49.811 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:49.828 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:49.831 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-03 02:30:52.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:52.590 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:52.608 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:52.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:52.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:52.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:52.761 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:52.783 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-03 02:30:52.787 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:52.788 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:52.880 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:52.898 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:52.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-03 02:30:54.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:54.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:54.261 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:54.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:54.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:54.416 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:54.419 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:54.441 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-03 02:30:54.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:54.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:54.531 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:54.549 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:54.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-03 02:30:56.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:56.972 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:56.987 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:56.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:30:57.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:30:57.226 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:30:57.228 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:30:57.253 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-03 02:30:57.257 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:30:57.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:30:57.336 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:57.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:57.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-03 02:30:59.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:30:59.898 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:30:59.915 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:30:59.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:00.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:00.093 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:00.095 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:00.117 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-03 02:31:00.121 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:00.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:00.204 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:00.222 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:00.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-03 02:31:02.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:02.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:02.612 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:02.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:02.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:02.819 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:02.822 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:02.840 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-03 02:31:02.843 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:02.844 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:02.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:02.947 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:02.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-03 02:31:05.045 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:05.045 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:05.062 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:05.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:05.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:05.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:05.253 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:05.274 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-03 02:31:05.281 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:05.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:05.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:05.380 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:05.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-03 02:31:06.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:06.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:06.755 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:06.756 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:06.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:06.950 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:06.953 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:06.985 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-03 02:31:06.989 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:06.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:07.081 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:07.097 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:07.100 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-03 02:31:09.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:09.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:09.335 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:31:09.335 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:09.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:09.501 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:09.505 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:09.531 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-03 02:31:09.535 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:09.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:09.620 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:09.643 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:09.647 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-03 02:31:11.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:11.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:11.765 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:11.766 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:11.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:11.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:11.949 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:11.976 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-03 02:31:11.979 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:11.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:12.050 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:12.062 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:12.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-03 02:31:13.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:13.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:13.922 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:13.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:13.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:14.090 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:14.092 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:14.117 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-03 02:31:14.122 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:14.123 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:31:14.206 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:14.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:14.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-03 02:31:16.346 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:31:16.346 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:16.365 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:31:16.366 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:31:16.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:31:16.537 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:16.541 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:16.555 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:31:16.560 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 02:31:16.563 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:16.563 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-03 02:31:45.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:45.880 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:31:45.963 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:31:57.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:31:57.446 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:31:57.447 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:31:59.507 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:31:59.508 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:31:59.510 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:31:48.002
2015-12-03 02:31:59.511 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:31:59.610 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:31:59.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:31:59.667 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 02:31:59.668 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:31:59.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:31:59.898 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:31:59.926 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-03 02:31:59.930 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:31:59.931 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:00.018 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:00.034 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:00.037 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-03 02:32:02.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:02.982 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:02.995 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:02.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:03.149 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:03.221 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:03.223 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:03.245 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ListView/""/""/[567,644]>
2015-12-03 02:32:03.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:03.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:03.324 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:03.337 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:03.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[567,644]>
2015-12-03 02:32:05.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:05.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:05.384 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:05.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:05.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:05.590 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:05.592 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:05.620 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-03 02:32:05.623 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:05.624 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:05.709 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:05.727 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:05.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-03 02:32:07.953 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:07.953 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:07.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:07.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:08.133 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:08.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:08.229 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:08.262 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-03 02:32:08.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:08.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:08.358 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:08.380 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:08.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-03 02:32:10.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:10.576 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:10.594 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:10.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:10.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:10.762 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:10.764 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:10.787 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,786]>
2015-12-03 02:32:10.791 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:10.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:10.891 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:10.914 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:10.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,786]>
2015-12-03 02:32:21.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:21.171 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:21.220 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:32:21.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:21.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:21.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:21.475 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:21.503 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[166,1054]>
2015-12-03 02:32:21.506 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:21.507 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:21.591 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:21.609 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:21.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[166,1054]>
2015-12-03 02:32:30.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:30.517 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:30.535 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:30.536 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:30.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:30.841 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:30.844 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:30.873 INFO  o.d.e.strategy.ExplorationStrategy         1m 47s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,265]>
2015-12-03 02:32:30.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:30.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:32:30.961 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:30.974 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:30.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,265]>
2015-12-03 02:32:47.969 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:32:47.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:47.985 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:47.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:32:48.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:32:48.152 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:32:48.156 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:32:48.169 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:32:48.172 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:32:48.177 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device)
2015-12-03 02:32:48.178 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:32:48.263 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:48.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:32:48.283 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:32:48.283 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.google.android.apps.translate}
2015-12-03 02:32:50.035 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:32:50.107 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:32:50.112 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:32:50.113 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:32:50.291 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:32:50.380 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.12-inlined.apk, device) - DONE
2015-12-03 02:33:09.865 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.keep_v2.3.02-inlined.apk, device)
2015-12-03 02:33:09.865 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.keep
2015-12-03 02:33:36.670 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:33:36.674 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:33:36.748 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:33:44.313 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:33:44.360 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:33:44.360 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:34:06.866 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:34:24.686 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-03 02:34:24.687 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.launcher
2015-12-03 02:34:50.853 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:34:50.858 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:34:50.946 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:34:58.374 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:34:58.423 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:34:58.423 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:35:00.483 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:35:00.485 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:35:00.488 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:34:52.602
2015-12-03 02:35:00.488 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:35:00.602 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:35:00.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:00.640 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:35:00.642 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:35:00.790 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-03 02:35:00.796 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:35:00.819 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Get it from Google Play"/"android:id/button3"/[400,706]>
2015-12-03 02:35:00.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-03 02:35:00.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:35:00.913 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:00.935 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:35:00.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get it from Google Play"/"android:id/button3"/[400,706]>
2015-12-03 02:35:05.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:35:05.753 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:05.783 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:35:05.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:35:06.154 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:35:06.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-03 02:35:06.254 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 70}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:35:06.269 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-03 02:35:06.271 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-03 02:35:06.272 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.launcher
2015-12-03 02:35:34.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:34.856 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:35:34.941 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:35:42.296 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:35:42.351 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:35:42.352 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:35:44.406 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:35:44.408 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:35:44.410 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:35:36.532
2015-12-03 02:35:44.410 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:35:44.528 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:35:44.528 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:44.568 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:35:44.569 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:35:44.716 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-03 02:35:44.719 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.launcher. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:35:44.731 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: GUI state after reset doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.google.android.launcher Widgets count = 15>
2015-12-03 02:35:44.735 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:35:44.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device)
2015-12-03 02:35:44.740 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:35:44.828 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:44.847 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:35:44.848 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:35:44.848 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.google.android.launcher}
2015-12-03 02:35:45.696 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:35:45.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:35:45.765 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:35:45.766 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:35:45.867 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:35:45.953 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.launcher_v1.1.0.1167994-inlined.apk, device) - DONE
2015-12-03 02:36:02.967 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.earth_v7.1.3.1255-inlined.apk, device)
2015-12-03 02:36:02.967 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.earth
2015-12-03 02:36:28.622 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:36:28.626 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:36:28.713 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:36:36.198 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:36:36.237 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:36:36.237 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:36:58.720 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:37:13.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:37:13.126 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-03 02:37:38.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:37:38.807 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:37:38.895 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:37:52.049 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:37:52.106 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:37:52.107 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:37:54.166 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:37:54.168 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:37:54.170 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:37:40.632
2015-12-03 02:37:54.170 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:37:54.293 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:37:54.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:37:54.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 78
2015-12-03 02:37:54.454 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:37:54.746 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:37:54.755 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 50}, DeviceLogs{apiLogs#=78, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:37:54.776 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-03 02:37:54.779 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:37:54.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:37:54.862 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:37:54.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:37:54.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-03 02:37:57.241 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:37:57.242 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:37:57.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:37:57.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:37:57.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:37:57.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:37:57.476 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:37:57.504 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-03 02:37:57.508 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:37:57.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:37:57.599 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:37:57.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:37:57.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-03 02:38:00.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:00.020 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:00.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:38:00.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:00.275 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:00.365 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:00.368 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:00.387 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Switch/"ON"/"com.ht.manga.gpanda:id/switch_noti_new_chapter"/[710,936]>
2015-12-03 02:38:00.391 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:00.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:00.474 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:00.491 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:00.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Switch/"ON"/"com.ht.manga.gpanda:id/switch_noti_new_chapter"/[710,936]>
2015-12-03 02:38:02.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:02.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:02.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:02.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:02.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:02.706 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:02.708 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:02.739 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/viewer_spinner"/[400,736]>
2015-12-03 02:38:02.744 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:02.745 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:02.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:02.852 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:02.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/viewer_spinner"/[400,736]>
2015-12-03 02:38:04.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:04.871 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:04.891 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:04.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:04.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:05.016 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:05.021 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 4}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:05.046 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:CheckedTextView/"Advanced Viewer"/"android:id/text1"/[397,858]>
2015-12-03 02:38:05.049 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:05.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:05.141 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:05.157 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:05.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Advanced Viewer"/"android:id/text1"/[397,858]>
2015-12-03 02:38:07.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:07.238 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:07.257 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:07.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:07.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:07.532 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:07.535 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:07.560 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Remove advertising"/"com.ht.manga.gpanda:id/btn_remove_ads"/[400,489]>
2015-12-03 02:38:07.563 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:07.564 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:07.652 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:07.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:07.668 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Remove advertising"/"com.ht.manga.gpanda:id/btn_remove_ads"/[400,489]>
2015-12-03 02:38:10.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:10.989 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:11.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:11.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:11.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:11.171 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:11.174 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:11.189 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct Reset app>
2015-12-03 02:38:11.193 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:11.193 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-03 02:38:37.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:37.055 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:38:37.137 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:38:50.366 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:38:50.418 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:38:50.418 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:38:52.478 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:38:52.480 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:38:52.482 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:38:38.882
2015-12-03 02:38:52.483 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:38:52.602 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:38:52.602 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:52.756 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 78
2015-12-03 02:38:52.758 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:38:53.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:53.005 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 50}, DeviceLogs{apiLogs#=78, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:53.034 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-03 02:38:53.038 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:53.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:53.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:53.150 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:53.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.ht.manga.gpanda:id/main_menu_setting"/[757,70]>
2015-12-03 02:38:55.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:55.541 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:55.583 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:38:55.584 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:55.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:55.881 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:55.884 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:55.908 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/planets_spinner"/[400,686]>
2015-12-03 02:38:55.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:55.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:55.996 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:56.014 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:56.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.ht.manga.gpanda:id/planets_spinner"/[400,686]>
2015-12-03 02:38:58.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:38:58.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:58.059 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:58.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:38:58.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:38:58.218 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:38:58.221 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:38:58.244 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:CheckedTextView/"Right to Left"/"android:id/text1"/[397,808]>
2015-12-03 02:38:58.247 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:38:58.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:38:58.338 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:38:58.351 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:38:58.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Right to Left"/"android:id/text1"/[397,808]>
2015-12-03 02:39:00.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:39:00.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:39:00.447 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:39:00.449 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:39:00.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:39:00.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:39:00.762 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ht.manga.gpanda. Widgets# 57}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:39:00.790 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Email Support"/"com.ht.manga.gpanda:id/btn_email_support"/[400,419]>
2015-12-03 02:39:00.794 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:39:00.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:39:00.883 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:39:00.900 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:39:00.903 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Email Support"/"com.ht.manga.gpanda:id/btn_email_support"/[400,419]>
2015-12-03 02:39:04.172 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:39:04.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:39:04.200 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:39:04.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:39:04.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:39:04.438 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device) - DONE
2015-12-03 02:39:04.441 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 41}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:39:04.455 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-03 02:39:04.458 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ht.manga.gpanda_v1.3.4-inlined.apk, device)
2015-12-03 02:39:04.459 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ht.manga.gpanda
2015-12-03 02:39:30.448 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:39:47.638 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:39:47.638 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-03 02:40:13.268 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:13.271 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:40:13.359 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:40:25.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:40:25.268 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:40:25.268 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:40:27.328 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:40:27.329 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:40:27.331 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:40:15.012
2015-12-03 02:40:27.331 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:40:27.413 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:40:27.414 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:27.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 02:40:27.469 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:40:27.637 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:40:27.645 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:40:27.667 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-03 02:40:27.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:40:27.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:40:27.753 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:27.773 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:40:27.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-03 02:40:29.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:40:29.299 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:29.316 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:40:29.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:40:29.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:40:29.491 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:40:29.493 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:40:29.515 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-03 02:40:29.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:40:29.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:40:29.607 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:29.622 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:40:29.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-03 02:40:31.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:40:31.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:31.936 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:40:31.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:40:32.010 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:40:32.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:40:32.105 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:40:32.128 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Nein"/"android:id/button2"/[217,703]>
2015-12-03 02:40:32.131 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:40:32.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:40:32.218 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:32.233 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:40:32.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Nein"/"android:id/button2"/[217,703]>
2015-12-03 02:40:34.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:40:34.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:40:34.182 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:40:34.183 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:40:34.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:40:34.371 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:40:34.374 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:40:34.388 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 02:40:34.391 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:40:34.392 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-03 02:41:00.208 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:00.212 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:41:00.292 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:41:12.566 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:41:12.626 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:41:12.627 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:41:14.683 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:41:14.685 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:41:14.687 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:41:02.432
2015-12-03 02:41:14.687 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:41:14.798 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:41:14.798 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:14.850 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 02:41:14.851 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:41:14.990 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:41:14.993 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:41:15.019 INFO  o.d.e.strategy.ExplorationStrategy         0m 47s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-03 02:41:15.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:41:15.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:41:15.113 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:15.135 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:41:15.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ok, App starten"/"android:id/button1"/[572,1158]>
2015-12-03 02:41:17.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:41:17.425 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:17.451 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:41:17.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:41:17.522 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:41:17.604 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:41:17.606 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:41:17.626 INFO  o.d.e.strategy.ExplorationStrategy         0m 49s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Ja"/"android:id/button1"/[582,703]>
2015-12-03 02:41:17.629 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:41:17.629 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:41:17.719 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:17.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:41:17.740 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Ja"/"android:id/button1"/[582,703]>
2015-12-03 02:41:20.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:41:20.291 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:20.338 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:41:20.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:41:20.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:41:20.486 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:41:20.489 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 12}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:41:20.504 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   2m  0s i:    8 <ExplAct Reset app>
2015-12-03 02:41:20.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:41:20.509 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-03 02:41:46.511 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:41:46.516 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:41:46.606 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:41:58.863 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:41:58.916 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:41:58.917 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:42:00.970 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:42:00.972 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:42:00.974 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:41:48.622
2015-12-03 02:42:00.975 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:42:01.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:42:01.066 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:01.127 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 02:42:01.128 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:42:01.268 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:42:01.277 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:42:01.299 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Abbrechen"/"android:id/button2"/[208,1158]>
2015-12-03 02:42:01.302 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:42:01.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:42:01.389 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:01.405 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:42:01.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Abbrechen"/"android:id/button2"/[208,1158]>
2015-12-03 02:42:03.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:42:03.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:03.369 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:42:03.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:42:03.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:42:03.561 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:42:03.564 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:42:03.580 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 02:42:03.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:42:03.584 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ifap.arzneiaktuell
2015-12-03 02:42:29.253 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:29.258 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:42:29.332 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:42:40.431 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:42:40.480 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:42:40.480 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:42:42.542 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:42:42.544 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:42:42.546 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:42:31.242
2015-12-03 02:42:42.546 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:42:42.637 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:42:42.637 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:42.699 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 02:42:42.701 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:42:42.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:42:42.838 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ifap.arzneiaktuell. Widgets# 15}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:42:42.849 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:42:42.852 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:42:42.855 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device)
2015-12-03 02:42:42.856 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:42:42.947 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:42.969 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:42:42.970 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:42:42.971 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ifap.arzneiaktuell}
2015-12-03 02:42:43.840 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:42:43.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:42:43.924 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:42:43.925 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:42:44.028 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:42:44.112 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ifap.arzneiaktuell_v2.2.3-inlined.apk, device) - DONE
2015-12-03 02:43:44.553 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-03 02:43:44.553 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.infraware.office.link
2015-12-03 02:44:10.288 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:44:10.292 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:44:10.360 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:44:26.498 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:44:26.559 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:44:26.559 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:44:28.621 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:44:28.623 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:44:28.626 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:44:12.132
2015-12-03 02:44:28.627 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:44:28.741 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:44:28.742 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:44:28.763 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:44:28.764 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:44:39.920 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device) - DONE
2015-12-03 02:44:39.925 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:44:39.934 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't belong to the app. The GUI state: <GUI state: home screen>
2015-12-03 02:44:39.937 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:44:39.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-03 02:44:39.940 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:44:40.026 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:44:40.031 DEBUG o.d.exploration.device.DeviceLogsHandler ! Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Rethrowing.
2015-12-03 02:44:40.036 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught TcpServerUnreachableException while performing device actions of RunnableTerminateExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:44:57.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:44:57.812 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-03 02:45:23.426 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:23.431 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:45:23.523 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:45:36.873 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:45:36.910 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:45:36.911 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:45:38.950 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:45:38.951 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:45:38.953 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:45:25.632
2015-12-03 02:45:38.953 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:45:39.037 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:45:39.037 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:39.076 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:45:39.078 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:45:39.278 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:39.284 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:39.305 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_sign_up"/[200,372]>
2015-12-03 02:45:39.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:39.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:45:39.386 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:39.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:39.404 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_sign_up"/[200,372]>
2015-12-03 02:45:41.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:45:41.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:41.251 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:41.252 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:45:41.378 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:45:41.458 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:41.461 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:41.484 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/next"/[763,504]>
2015-12-03 02:45:41.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:41.488 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:45:41.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:41.572 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:41.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/next"/[763,504]>
2015-12-03 02:45:43.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:45:43.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:43.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:45:43.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:45:44.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:45:44.106 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:44.110 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 31}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:44.138 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/action_bar_button_back"/[32,65]>
2015-12-03 02:45:44.141 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:44.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:45:44.210 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:44.222 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:44.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.instagram.android:id/action_bar_button_back"/[32,65]>
2015-12-03 02:45:46.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:45:46.283 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:46.300 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:46.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:45:46.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:45:46.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:46.503 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:46.524 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/"debugg7@gmail.com"/"com.instagram.android:id/email"/[400,504]>
2015-12-03 02:45:46.530 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:46.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:45:46.603 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:46.618 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:46.620 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"debugg7@gmail.com"/"com.instagram.android:id/email"/[400,504]>
2015-12-03 02:45:48.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:45:48.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:48.068 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:48.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:45:48.192 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:45:48.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:48.275 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:48.296 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,436]>
2015-12-03 02:45:48.299 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:48.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:45:48.371 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:48.386 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:45:48.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,436]>
2015-12-03 02:45:51.179 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:45:51.179 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:45:51.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:45:51.224 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:45:51.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:45:51.433 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:45:51.435 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:45:51.446 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-03 02:45:51.449 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:45:51.449 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-03 02:46:18.068 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:18.072 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:46:18.151 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:46:31.277 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:46:31.316 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:46:31.317 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:46:33.358 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:46:33.359 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:46:33.361 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:46:19.972
2015-12-03 02:46:33.361 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:46:33.452 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:46:33.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:33.497 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:46:33.498 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:46:33.691 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:46:33.695 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:46:33.721 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-03 02:46:33.724 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:46:33.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:46:33.798 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:33.812 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:46:33.814 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-03 02:46:35.667 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:46:35.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:35.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:46:35.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:46:35.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:46:35.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:46:35.892 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:46:35.920 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,1173]>
2015-12-03 02:46:35.924 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:46:35.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:46:36.003 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:36.017 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:46:36.019 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Log in with Facebook"/"com.instagram.android:id/facebook"/[400,1173]>
2015-12-03 02:46:38.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:46:38.401 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:46:38.443 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:46:38.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:46:38.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:46:38.643 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:46:38.645 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:46:38.656 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:   10 <ExplAct Reset app>
2015-12-03 02:46:38.658 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:46:38.659 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-03 02:47:05.083 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:05.087 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:47:05.160 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:47:17.667 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:47:17.703 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:47:17.704 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:47:19.742 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:47:19.744 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:47:19.748 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:47:06.882
2015-12-03 02:47:19.748 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:47:19.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:47:19.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:19.890 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:47:19.891 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:47:20.100 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:47:20.104 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:47:20.128 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-03 02:47:20.131 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:47:20.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:47:20.198 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:20.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:47:20.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/tabbed_landing_log_in"/[600,372]>
2015-12-03 02:47:22.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:47:22.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:22.073 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:47:22.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:47:22.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:47:22.265 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:47:22.268 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:47:22.293 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Forgot?"/"com.instagram.android:id/forgot"/[746,501]>
2015-12-03 02:47:22.297 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:47:22.297 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:47:22.367 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:22.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:47:22.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot?"/"com.instagram.android:id/forgot"/[746,501]>
2015-12-03 02:47:24.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:47:24.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:24.403 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:47:24.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:47:24.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:47:24.610 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:47:24.612 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:47:24.640 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/fragment_forgot_password_facebook"/[400,337]>
2015-12-03 02:47:24.644 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:47:24.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:47:24.737 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:24.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:47:24.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.instagram.android:id/fragment_forgot_password_facebook"/[400,337]>
2015-12-03 02:47:27.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:47:27.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:27.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 02:47:27.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:47:27.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:47:27.344 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:47:27.348 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 10}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:47:27.364 INFO  o.d.e.strategy.ExplorationStrategy         1m 48s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 02:47:27.369 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:47:27.369 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.instagram.android
2015-12-03 02:47:53.423 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:47:53.427 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:47:53.510 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:48:06.840 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:48:06.875 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:48:06.876 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:48:08.925 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:48:08.927 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:48:08.930 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:47:55.542
2015-12-03 02:48:08.930 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:48:09.015 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:48:09.016 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:48:09.064 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 02:48:09.066 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:48:09.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:48:09.267 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.instagram.android. Widgets# 32}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:48:09.275 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:48:09.277 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:48:09.280 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device)
2015-12-03 02:48:09.281 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:48:09.355 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:48:09.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:48:09.370 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:48:09.370 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.instagram.android}
2015-12-03 02:48:10.256 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:48:10.324 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:48:10.327 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:48:10.327 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:48:10.428 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:48:10.512 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.instagram.android_v6.16.1-inlined.apk, device) - DONE
2015-12-03 02:48:28.801 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:48:28.801 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-03 02:48:54.388 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:48:54.392 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:48:54.481 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:49:09.652 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:49:09.713 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:49:09.713 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:49:11.770 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:49:11.772 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:49:11.774 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:48:56.292
2015-12-03 02:49:11.774 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:49:11.886 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:49:11.886 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:11.953 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 02:49:11.955 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:49:12.074 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:49:12.082 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:49:12.105 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:49:12.108 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:49:12.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:49:12.209 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:12.224 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:49:12.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:49:14.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:49:14.097 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:14.129 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:49:14.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:49:14.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:49:14.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:49:14.254 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:49:14.276 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"1.Choose GO Keyboard"/"com.jb.gokeyboard:id/select_button_step1"/[400,646]>
2015-12-03 02:49:14.279 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:49:14.281 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:49:14.374 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:14.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:49:14.405 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"1.Choose GO Keyboard"/"com.jb.gokeyboard:id/select_button_step1"/[400,646]>
2015-12-03 02:49:15.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:49:15.755 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:15.779 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:49:15.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:49:18.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:49:18.301 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:49:18.304 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.settings. Widgets# 80}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:49:18.319 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    4 <ExplAct Reset app>
2015-12-03 02:49:18.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:49:18.323 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-03 02:49:46.620 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:49:46.624 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:49:46.703 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:50:01.472 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:50:01.520 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:50:01.525 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:50:03.594 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:50:03.595 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:50:03.597 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:49:48.532
2015-12-03 02:50:03.598 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:50:03.718 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:50:03.718 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:03.779 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 02:50:03.781 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:50:03.901 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:03.905 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:03.932 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   2m  0s i:    5 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:03.936 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:03.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:04.029 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:04.047 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:04.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:06.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:06.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:07.019 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:50:07.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:07.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:07.166 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:07.168 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:07.199 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:07.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:07.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:07.284 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:07.301 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:07.305 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:09.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:09.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:09.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:09.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:09.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:10.029 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:10.032 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:10.054 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:10.057 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:10.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:10.183 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:10.196 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:10.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:12.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:12.776 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:12.792 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:12.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:12.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:12.928 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:12.932 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:12.956 INFO  o.d.e.strategy.ExplorationStrategy         1m  0s /   2m  0s i:    8 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:12.959 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:12.960 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:13.042 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:13.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:13.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:15.951 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:15.951 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:15.966 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:15.967 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:16.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:16.114 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:16.116 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:16.146 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:16.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:16.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:16.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:16.265 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:16.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:18.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:18.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:18.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:18.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:18.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:18.984 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:18.987 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:19.008 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:19.012 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:19.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:19.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:19.120 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:19.125 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:20.478 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:20.479 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:20.496 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:20.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:20.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:20.637 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:20.639 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:20.661 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   11 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:20.665 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:20.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:20.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:20.770 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:20.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:23.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:23.684 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:23.700 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:23.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:23.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:23.846 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:23.849 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:23.875 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:23.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:23.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:23.968 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:23.983 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:23.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:25.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:25.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:25.358 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:25.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:25.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:25.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:25.514 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:25.536 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:25.540 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:25.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:25.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:25.642 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:25.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:27.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:27.006 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:27.037 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:50:27.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:27.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:27.173 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:27.176 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:27.198 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   14 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:27.201 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:27.202 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:27.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:27.305 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:27.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:30.241 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:30.242 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:30.260 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:30.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:30.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:30.410 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:30.413 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:30.436 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:30.439 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:30.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:30.524 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:30.545 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:30.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:31.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:31.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:31.920 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:31.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:31.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:32.088 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:32.091 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:32.114 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:32.118 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:32.119 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:32.209 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:32.228 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:32.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:33.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:33.589 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:33.608 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:33.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:33.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:33.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:33.755 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:33.778 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   17 <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:33.781 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:33.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:33.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:33.877 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:33.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 1 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:36.804 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:36.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:36.823 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:36.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:36.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:36.971 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:36.974 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:37.000 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:37.004 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:37.005 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:50:37.095 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:37.109 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:37.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"By using this app, you agree to the   << User Agreement>>"/"com.jb.gokeyboard:id/protocol_text"/[400,1170]>
2015-12-03 02:50:38.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:50:38.469 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:50:38.484 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:50:38.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:50:38.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:50:38.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:50:38.638 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:50:38.652 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 02:50:38.657 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   19 <ExplAct Reset app>
2015-12-03 02:50:38.662 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:50:38.663 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.jb.gokeyboard
2015-12-03 02:51:04.613 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:51:04.617 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:51:04.696 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:51:19.033 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:51:19.088 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:51:19.088 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:51:21.144 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:51:21.146 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:51:21.148 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:51:06.452
2015-12-03 02:51:21.148 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:51:21.271 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:51:21.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:51:21.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 02:51:21.327 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:51:21.438 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:51:21.441 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.jb.gokeyboard. Widgets# 10}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:51:21.449 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:51:21.452 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:51:21.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device)
2015-12-03 02:51:21.456 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:51:21.545 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:51:21.560 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:51:21.561 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:51:21.562 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.jb.gokeyboard}
2015-12-03 02:51:22.403 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:51:22.482 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:51:22.485 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:51:22.486 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:51:22.585 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:51:22.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.jb.gokeyboard_v2.13-inlined.apk, device) - DONE
2015-12-03 02:51:32.334 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.levelup.brightweather_v1.05-inlined.apk, device)
2015-12-03 02:51:32.334 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.levelup.brightweather
2015-12-03 02:51:57.909 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:51:57.913 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:51:57.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:53:58.019 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 02:54:08.440 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:08.440 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-03 02:54:33.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:33.953 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:54:34.031 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:54:44.820 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:54:44.877 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:54:44.877 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:54:46.937 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:54:46.939 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:54:46.942 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:54:35.982
2015-12-03 02:54:46.942 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:54:47.051 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:54:47.052 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:47.102 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:54:47.103 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:54:47.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:47.237 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:47.255 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-03 02:54:47.258 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:47.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:47.349 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:47.364 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:47.367 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-03 02:54:49.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:54:49.268 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:49.287 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:49.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:54:49.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:54:49.499 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:49.501 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:49.523 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Setting"/"com.liwenwen20131497.christmas:id/SetingWallpaperBtn"/[741,268]>
2015-12-03 02:54:49.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:49.528 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:49.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:49.630 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:49.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Setting"/"com.liwenwen20131497.christmas:id/SetingWallpaperBtn"/[741,268]>
2015-12-03 02:54:51.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:54:51.919 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:51.949 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:54:51.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:54:52.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:54:52.331 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:52.335 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:52.362 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-03 02:54:52.367 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:52.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:52.456 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:52.472 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:52.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-03 02:54:54.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:54:54.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:54.587 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:54.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:54:54.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:54:54.759 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:54.762 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:54.786 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:CheckedTextView/"Normal"/"android:id/text1"/[400,626]>
2015-12-03 02:54:54.789 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:54.790 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:54.872 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:54.890 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:54.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Normal"/"android:id/text1"/[400,626]>
2015-12-03 02:54:56.831 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:54:56.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:56.847 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:56.848 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:54:57.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:54:57.119 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:57.122 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:57.150 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,565]>
2015-12-03 02:54:57.155 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:57.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:57.239 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:57.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:57.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,565]>
2015-12-03 02:54:59.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:54:59.359 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:59.375 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:59.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:54:59.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:54:59.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:54:59.550 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:54:59.577 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:CheckedTextView/"Large"/"android:id/text1"/[400,691]>
2015-12-03 02:54:59.580 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:54:59.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:54:59.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:54:59.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:54:59.685 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Large"/"android:id/text1"/[400,691]>
2015-12-03 02:55:01.761 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:01.761 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:01.781 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:01.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:01.948 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:02.050 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:02.053 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:02.077 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,823]>
2015-12-03 02:55:02.082 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:02.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:55:02.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:02.178 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:02.183 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,823]>
2015-12-03 02:55:04.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:04.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:04.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:04.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:04.479 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:04.570 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:04.574 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:04.606 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-03 02:55:04.611 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:04.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:55:04.708 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:04.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:04.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,393]>
2015-12-03 02:55:06.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:06.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:06.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:06.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:06.903 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:06.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:06.987 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:07.014 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:CheckedTextView/"Fast"/"android:id/text1"/[400,691]>
2015-12-03 02:55:07.022 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:07.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:55:07.109 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:07.128 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:07.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"Fast"/"android:id/text1"/[400,691]>
2015-12-03 02:55:09.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:09.195 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:09.214 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:09.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:09.424 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:09.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:09.505 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 55}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:09.531 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,909]>
2015-12-03 02:55:09.534 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:09.535 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:55:09.624 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:09.645 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:09.648 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,909]>
2015-12-03 02:55:12.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:12.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:12.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:55:12.464 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:12.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:12.683 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:12.687 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{"Complete action using" dialog box.}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:12.703 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-03 02:55:12.706 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:12.707 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-03 02:55:38.755 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:38.759 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:55:38.837 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:55:49.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:55:49.121 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:55:49.121 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:55:51.181 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:55:51.182 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:55:51.184 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:55:40.572
2015-12-03 02:55:51.185 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:55:51.309 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:55:51.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:51.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 02:55:51.356 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:55:51.481 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:51.485 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:51.514 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/""/[400,656]>
2015-12-03 02:55:51.518 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:51.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:55:51.607 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:51.626 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:55:51.630 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[400,656]>
2015-12-03 02:55:56.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:55:56.941 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:55:56.975 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:55:56.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:55:57.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:55:57.480 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:55:57.483 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:55:57.501 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   14 <ExplAct Reset app>
2015-12-03 02:55:57.504 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:55:57.505 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-03 02:56:25.703 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:25.707 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:56:25.803 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:56:37.194 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:56:37.251 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:56:37.251 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:56:39.307 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:56:39.308 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:56:39.310 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:56:27.802
2015-12-03 02:56:39.311 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:56:39.432 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:56:39.432 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:39.480 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:56:39.481 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:56:39.606 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:56:39.609 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:56:39.639 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-03 02:56:39.643 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:56:39.644 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:56:39.732 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:39.752 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:56:39.755 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[32,140]>
2015-12-03 02:56:41.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:56:41.093 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:41.110 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:56:41.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:56:41.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:56:41.296 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:56:41.299 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:56:41.322 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:ImageView/""/""/[320,1155]>
2015-12-03 02:56:41.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:56:41.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:56:41.418 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:41.439 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:56:41.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[320,1155]>
2015-12-03 02:56:45.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:56:45.132 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:56:45.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:56:45.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:56:45.550 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:56:45.647 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:56:45.649 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 81}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:56:45.669 INFO  o.d.e.strategy.ExplorationStrategy         1m 58s /   2m  0s i:   17 <ExplAct Reset app>
2015-12-03 02:56:45.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:56:45.673 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.liwenwen20131497.christmas
2015-12-03 02:57:13.820 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:57:13.824 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:57:13.904 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:57:23.731 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:57:23.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:57:23.784 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:57:25.835 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:57:25.837 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:57:25.839 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:57:15.582
2015-12-03 02:57:25.839 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:57:25.932 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:57:25.932 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:57:25.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 02:57:25.972 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:57:26.111 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:57:26.116 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.liwenwen20131497.christmas. Widgets# 11}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:57:26.133 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 02:57:26.136 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 02:57:26.139 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device)
2015-12-03 02:57:26.140 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 02:57:26.223 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:57:26.237 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:57:26.238 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 02:57:26.239 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.liwenwen20131497.christmas}
2015-12-03 02:57:27.243 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 02:57:27.317 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:57:27.320 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:57:27.320 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 02:57:27.429 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 02:57:27.516 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.liwenwen20131497.christmas_v2.1-inlined.apk, device) - DONE
2015-12-03 02:57:46.480 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:57:46.480 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mapfactor.navigator
2015-12-03 02:58:12.217 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:12.221 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:58:12.301 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:58:25.100 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:58:25.222 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:58:25.223 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:58:27.264 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:58:27.266 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:58:27.268 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:58:14.152
2015-12-03 02:58:27.269 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:58:27.372 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:58:27.372 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:27.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:58:27.413 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:58:27.566 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:27.572 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:27.591 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/free"/[400,554]>
2015-12-03 02:58:27.594 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:27.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:27.675 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:27.694 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:27.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/free"/[400,554]>
2015-12-03 02:58:31.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:31.060 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:31.094 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:58:31.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:31.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:31.279 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:31.282 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:31.306 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-03 02:58:31.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:31.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:31.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:31.400 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:31.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-03 02:58:33.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:33.248 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:33.262 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:33.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:33.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:33.447 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:33.450 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:33.469 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[521,571]>
2015-12-03 02:58:33.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:33.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:33.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:33.587 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:33.590 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[521,571]>
2015-12-03 02:58:35.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:35.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:35.657 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:35.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:35.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:35.834 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:35.838 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:35.864 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"Français"/"com.mapfactor.navigator:id/caption"/[524,1021]>
2015-12-03 02:58:35.867 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:35.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:35.958 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:35.978 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:35.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Français"/"com.mapfactor.navigator:id/caption"/[524,1021]>
2015-12-03 02:58:38.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:38.327 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:38.356 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:58:38.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:38.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:38.558 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:38.561 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:38.583 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[531,571]>
2015-12-03 02:58:38.587 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:38.588 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:38.685 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:38.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:38.706 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/applicationLanguageSpinner"/[531,571]>
2015-12-03 02:58:40.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:40.765 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:40.783 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:40.784 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:40.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:40.973 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:40.976 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:40.998 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Norsk"/"com.mapfactor.navigator:id/caption"/[523,923]>
2015-12-03 02:58:41.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:41.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:41.092 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:41.110 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:41.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Norsk"/"com.mapfactor.navigator:id/caption"/[523,923]>
2015-12-03 02:58:43.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:43.642 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:43.676 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 02:58:43.677 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:43.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:43.870 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:43.872 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:43.900 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/unitSystemSpinner"/[465,647]>
2015-12-03 02:58:43.904 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:43.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:43.988 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:44.008 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:44.012 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.mapfactor.navigator:id/unitSystemSpinner"/[465,647]>
2015-12-03 02:58:46.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:46.026 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:46.045 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:46.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:46.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:46.179 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:46.181 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:46.204 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ListView/""/""/[468,754]>
2015-12-03 02:58:46.207 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:46.208 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:46.288 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:46.307 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:46.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[468,754]>
2015-12-03 02:58:48.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:48.363 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:48.377 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:48.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:48.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:48.610 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:48.613 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:48.636 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-03 02:58:48.640 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:48.640 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:48.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:48.749 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:48.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Allow Google Analytics to help in developing this application"/"com.mapfactor.navigator:id/googleAnalyticsCheckBox"/[400,767]>
2015-12-03 02:58:50.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:50.113 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:50.130 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:50.131 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:50.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:50.313 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:50.316 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:50.342 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-03 02:58:50.346 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:50.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:50.440 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:50.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:50.466 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-03 02:58:52.569 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:52.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:52.599 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:58:52.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:52.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:52.773 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:52.776 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 16}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:52.802 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-03 02:58:52.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:52.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:58:52.903 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:52.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:58:52.920 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-03 02:58:54.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:58:54.999 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:58:55.004 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:58:55.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:58:55.087 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:58:55.178 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:58:55.181 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:58:55.198 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   13 <ExplAct Reset app>
2015-12-03 02:58:55.202 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:58:55.202 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mapfactor.navigator
2015-12-03 02:59:21.362 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:21.372 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 02:59:21.455 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 02:59:34.868 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 02:59:34.918 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 02:59:34.919 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 02:59:36.978 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 02:59:36.980 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 02:59:36.983 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T02:59:23.452
2015-12-03 02:59:36.984 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 02:59:37.083 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 02:59:37.083 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:37.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:59:37.122 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 02:59:38.200 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:38.203 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 11}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:38.234 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/commercial"/[400,717]>
2015-12-03 02:59:38.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:38.239 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:38.324 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:38.339 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:38.342 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mapfactor.navigator:id/commercial"/[400,717]>
2015-12-03 02:59:41.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:41.127 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:41.165 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 02:59:41.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:41.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:41.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:41.361 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 23}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:41.385 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-03 02:59:41.389 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:41.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:41.485 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:41.502 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:41.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Start Navigator"/"com.mapfactor.navigator:id/saveButton"/[400,851]>
2015-12-03 02:59:43.637 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:43.637 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:43.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 02:59:43.672 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:43.750 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:43.838 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:43.840 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:43.868 INFO  o.d.e.strategy.ExplorationStrategy         1m 16s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:Button/"Continue as free"/"android:id/button3"/[400,706]>
2015-12-03 02:59:43.872 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:43.873 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:43.961 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:43.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:43.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue as free"/"android:id/button3"/[400,706]>
2015-12-03 02:59:46.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:46.024 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:46.041 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:46.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:46.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:46.223 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:46.225 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:46.253 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-03 02:59:46.257 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:46.258 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:46.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:46.356 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:46.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-03 02:59:51.275 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:51.276 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:51.329 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-03 02:59:51.330 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:51.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:51.588 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:51.590 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 36}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:51.614 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,284]>
2015-12-03 02:59:51.616 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:51.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:51.702 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:51.723 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:51.726 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,284]>
2015-12-03 02:59:54.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:54.377 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:54.398 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:54.399 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:54.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:54.812 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:54.815 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:54.842 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:CheckBox/"Afghanistan OSM"/"com.mapfactor.navigator:id/childCheck"/[396,280]>
2015-12-03 02:59:54.846 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:54.847 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:54.927 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:54.944 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:54.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Afghanistan OSM"/"com.mapfactor.navigator:id/childCheck"/[396,280]>
2015-12-03 02:59:57.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:57.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:57.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:57.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:57.401 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:57.470 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:57.474 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:57.512 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ExpandableListView/""/"com.mapfactor.navigator:id/regionsExpandableListView"/[400,598]>
2015-12-03 02:59:57.519 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:57.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:57.616 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:57.634 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:57.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ExpandableListView/""/"com.mapfactor.navigator:id/regionsExpandableListView"/[400,598]>
2015-12-03 02:59:59.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 02:59:59.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:59.089 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:59.090 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 02:59:59.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 02:59:59.342 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 02:59:59.345 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 02:59:59.380 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,132]>
2015-12-03 02:59:59.383 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 02:59:59.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 02:59:59.471 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 02:59:59.492 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 02:59:59.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,132]>
2015-12-03 03:00:01.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:00:01.937 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:01.955 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:01.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:00:02.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:00:02.174 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 03:00:02.176 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:00:02.210 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,172]>
2015-12-03 03:00:02.213 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 03:00:02.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:00:02.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:02.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:02.322 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,172]>
2015-12-03 03:00:04.724 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:00:04.724 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:04.743 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:04.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:00:05.064 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:00:05.159 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 03:00:05.161 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:00:05.191 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:Button/"Download now"/"com.mapfactor.navigator:id/actionButton"/[400,1162]>
2015-12-03 03:00:05.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 03:00:05.197 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:00:05.285 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:05.302 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:05.305 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Download now"/"com.mapfactor.navigator:id/actionButton"/[400,1162]>
2015-12-03 03:00:07.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:00:07.333 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:07.352 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:07.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:00:07.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:00:07.517 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 03:00:07.520 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:00:07.547 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-03 03:00:07.552 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 03:00:07.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:00:07.646 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:00:07.666 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:00:07.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,706]>
2015-12-03 03:02:00.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:02:00.295 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:02:00.354 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-03 03:02:00.354 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:02:00.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:02:00.544 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 03:02:00.547 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mapfactor.navigator. Widgets# 20}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:02:00.557 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:02:00.561 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:02:00.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device)
2015-12-03 03:02:00.566 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:02:00.643 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:02:00.655 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:02:00.656 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:02:00.657 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mapfactor.navigator}
2015-12-03 03:02:02.035 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:02:02.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:02:02.112 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:02:02.112 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:02:06.593 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:02:06.695 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mapfactor.navigator_v1.3.24-inlined.apk, device) - DONE
2015-12-03 03:02:21.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:02:21.891 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-03 03:02:47.637 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:02:47.641 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:02:47.730 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:03:00.580 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:03:00.627 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:03:00.627 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:03:02.687 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:03:02.689 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:03:02.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:02:49.582
2015-12-03 03:03:02.692 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:03:02.805 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:03:02.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:02.841 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:03:02.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:03:02.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:02.998 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:03.022 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:03.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:03.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:03.120 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:03.136 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:03.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:04.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:04.587 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:04.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:04.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:04.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:04.805 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:04.807 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:04.830 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:04.833 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:04.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:04.925 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:04.947 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:04.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:07.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:07.214 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:07.232 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:07.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:07.365 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:07.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:07.458 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:07.480 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-03 03:03:07.483 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:07.484 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:07.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:07.610 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:07.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-03 03:03:09.938 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:09.939 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:09.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:03:09.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:10.082 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:10.176 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:10.179 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:10.202 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:10.206 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:10.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:10.298 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:10.318 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:10.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:11.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:11.664 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:11.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:11.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:11.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:11.874 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:11.877 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:11.896 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:11.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:11.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:11.988 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:12.004 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:12.006 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:14.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:14.253 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:14.270 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:14.271 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:14.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:14.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:14.470 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:14.493 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-03 03:03:14.496 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:14.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:14.583 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:14.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:14.602 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-03 03:03:16.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:16.933 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:16.964 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:03:16.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:17.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:17.138 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:17.140 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:17.165 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:17.170 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:17.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:17.265 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:17.279 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:17.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:18.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:18.617 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:18.635 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:18.636 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:18.712 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:18.808 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:18.813 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:18.840 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:18.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:18.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:18.937 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:18.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:18.960 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:21.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:21.200 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:21.219 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:21.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:21.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:21.414 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:21.417 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:21.440 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,458]>
2015-12-03 03:03:21.443 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:21.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:21.543 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:21.560 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:21.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,458]>
2015-12-03 03:03:23.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:23.899 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:23.927 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:03:23.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:24.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:24.110 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:24.113 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:24.132 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:24.137 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:24.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:24.231 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:24.253 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:24.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:03:25.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:25.595 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:25.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:25.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:25.686 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:25.776 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:25.779 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:25.802 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:25.805 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:25.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:25.896 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:25.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:25.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:28.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:28.174 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:28.190 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:28.191 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:28.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:28.377 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:28.380 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:28.403 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,404]>
2015-12-03 03:03:28.407 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:28.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:28.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:28.516 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:28.519 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,404]>
2015-12-03 03:03:30.842 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:30.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:30.876 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:03:30.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:30.960 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:31.056 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:31.059 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:31.080 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:31.084 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:31.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:31.185 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:31.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:31.208 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:03:33.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:33.455 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:33.470 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:33.471 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:33.564 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:33.659 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:33.662 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:33.685 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-03 03:03:33.689 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:33.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:03:33.775 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:33.789 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:03:33.794 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-03 03:03:36.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:03:36.130 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:03:36.159 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:03:36.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:03:36.261 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:03:36.360 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:03:36.363 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:03:36.378 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:03:36.382 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 03:03:36.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:03:36.386 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-03 03:04:02.170 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:02.174 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:04:02.241 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:04:14.521 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:04:14.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:04:14.568 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:04:16.629 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:04:16.631 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:04:16.634 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:04:04.082
2015-12-03 03:04:16.635 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:04:16.750 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:04:16.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:16.797 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:04:16.798 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:04:16.944 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:16.947 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:16.973 INFO  o.d.e.strategy.ExplorationStrategy         1m 13s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:16.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:16.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:17.072 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:17.092 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:17.095 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:18.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:18.535 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:18.552 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:18.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:18.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:18.760 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:18.764 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:18.797 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:18.801 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:18.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:18.892 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:18.913 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:18.916 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:20.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:20.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:20.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:20.283 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:20.347 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:20.445 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:20.448 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:20.471 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:20.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:20.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:20.561 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:20.576 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:20.579 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:22.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:22.846 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:22.863 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:22.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:22.970 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:23.059 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:23.062 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:23.087 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:23.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:23.094 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:23.190 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:23.204 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:23.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:25.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:25.462 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:25.479 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:25.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:25.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:25.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:25.689 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:25.716 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:25.719 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:25.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:25.805 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:25.821 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:25.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/youtube_list_lv"/[400,656]>
2015-12-03 03:04:27.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:27.173 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:27.193 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:27.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:27.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:27.379 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:27.382 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:27.407 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-03 03:04:27.411 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:27.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:27.505 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:27.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:27.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,134]>
2015-12-03 03:04:28.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:28.871 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:28.891 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:28.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:28.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:29.082 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:29.085 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:29.113 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-03 03:04:29.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:29.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:29.211 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:29.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:29.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,188]>
2015-12-03 03:04:30.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:30.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:30.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:30.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:30.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:30.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:30.826 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:30.854 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-03 03:04:30.859 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:30.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:30.952 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:30.970 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:30.973 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-03 03:04:32.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:32.320 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:32.338 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:32.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:32.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:32.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:32.541 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:32.568 INFO  o.d.e.strategy.ExplorationStrategy         1m 29s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-03 03:04:32.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:32.572 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:32.668 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:32.684 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:32.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,242]>
2015-12-03 03:04:34.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:34.037 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:34.056 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:34.057 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:34.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:34.254 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:34.257 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:34.286 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,350]>
2015-12-03 03:04:34.289 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:34.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:34.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:34.399 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:34.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,350]>
2015-12-03 03:04:35.751 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:35.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:35.766 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:35.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:35.902 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:36.013 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:36.016 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:36.039 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:36.042 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:36.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:36.134 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:36.155 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:36.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:38.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:38.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:38.433 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:38.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:38.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:38.638 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:38.641 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:38.669 INFO  o.d.e.strategy.ExplorationStrategy         1m 35s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-03 03:04:38.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:38.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:38.762 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:38.783 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:38.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[160,296]>
2015-12-03 03:04:41.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:41.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:41.146 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:04:41.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:41.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:41.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:41.377 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:41.404 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:41.408 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:41.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:41.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:41.522 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:41.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[128,70]>
2015-12-03 03:04:43.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:43.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:43.800 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:43.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:43.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:44.016 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:44.019 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:44.044 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/act_main_lv_drawer"/[160,656]>
2015-12-03 03:04:44.048 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:44.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:04:44.139 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:44.159 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:44.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.mattia.videos.manager:id/act_main_lv_drawer"/[160,656]>
2015-12-03 03:04:45.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:04:45.499 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:04:45.517 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:04:45.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:04:45.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:04:45.715 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:04:45.717 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:04:45.730 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:04:45.733 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   31 <ExplAct Reset app>
2015-12-03 03:04:45.737 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:04:45.737 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mattia.videos.manager
2015-12-03 03:05:11.633 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:05:11.637 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:05:11.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:05:23.014 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:05:23.071 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:05:23.072 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:05:25.125 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:05:25.126 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:05:25.128 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:05:13.602
2015-12-03 03:05:25.129 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:05:25.239 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:05:25.240 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:05:25.283 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:05:25.284 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:05:25.442 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:05:25.445 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mattia.videos.manager. Widgets# 17}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:05:25.454 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:05:25.458 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:05:25.462 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device)
2015-12-03 03:05:25.463 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:05:25.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:05:25.567 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:05:25.568 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:05:25.568 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mattia.videos.manager}
2015-12-03 03:05:26.465 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:05:26.540 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:05:26.543 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:05:26.544 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:05:26.649 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:05:26.729 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mattia.videos.manager_v1.01-inlined.apk, device) - DONE
2015-12-03 03:05:41.474 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.megalol.quotes_v1.42-inlined.apk, device)
2015-12-03 03:05:41.474 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.megalol.quotes
2015-12-03 03:06:07.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:06:07.082 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:06:07.172 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:06:23.282 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:06:23.322 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:06:23.323 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:06:45.850 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 03:07:12.182 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device)
2015-12-03 03:07:12.182 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.miantan.myoface
2015-12-03 03:07:37.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:07:37.855 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:07:37.943 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:07:49.153 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:07:49.213 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:07:49.214 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:07:51.260 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:07:51.262 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:07:51.264 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:07:40.132
2015-12-03 03:07:51.264 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:07:51.366 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:07:51.366 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:07:51.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 03:07:51.421 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:07:51.571 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device) - DONE
2015-12-03 03:07:51.577 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.miantan.myoface. Widgets# 13}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:07:51.584 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.miantan.myoface Widgets count = 13>
2015-12-03 03:07:51.588 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:07:51.592 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device)
2015-12-03 03:07:51.593 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:07:51.677 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:07:51.692 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:07:51.693 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:07:51.694 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.miantan.myoface}
2015-12-03 03:07:52.596 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:07:52.676 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:07:52.679 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:07:52.679 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:07:52.789 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:07:52.865 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.miantan.myoface_v3.3.0-inlined.apk, device) - DONE
2015-12-03 03:08:14.506 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:08:14.506 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-03 03:08:40.083 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:08:40.088 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:08:40.176 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:08:54.592 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:08:55.035 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:08:55.035 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:08:57.096 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:08:57.098 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:08:57.101 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:08:43.682
2015-12-03 03:08:57.102 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:08:57.211 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:08:57.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:08:57.270 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 03:08:57.272 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:08:57.583 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:08:57.589 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:08:57.613 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locViewBtn"/[533,173]>
2015-12-03 03:08:57.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:08:57.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:08:57.713 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:08:57.730 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:08:57.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locViewBtn"/[533,173]>
2015-12-03 03:08:59.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:08:59.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:08:59.763 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:08:59.764 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:00.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:00.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:00.129 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:00.157 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/killButton"/[1110,173]>
2015-12-03 03:09:00.162 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:00.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:00.256 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:00.273 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:00.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/killButton"/[1110,173]>
2015-12-03 03:09:02.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:02.143 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:02.161 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:02.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:02.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:02.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:02.505 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:02.541 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-03 03:09:02.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:02.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:02.629 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:02.652 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:02.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-03 03:09:03.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:03.993 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:04.014 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:04.015 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:04.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:04.317 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:04.320 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:04.350 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/autoFadeLeft"/[469,680]>
2015-12-03 03:09:04.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:04.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:04.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:04.469 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:04.472 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/autoFadeLeft"/[469,680]>
2015-12-03 03:09:05.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:05.826 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:05.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:05.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:06.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:06.172 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:06.176 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:06.209 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp1"/[84,419]>
2015-12-03 03:09:06.213 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:06.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:06.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:06.323 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:06.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp1"/[84,419]>
2015-12-03 03:09:07.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:07.657 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:07.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:07.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:07.884 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:07.970 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:07.972 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:07.999 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp7"/[383,549]>
2015-12-03 03:09:08.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:08.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:08.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:08.107 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:08.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp7"/[383,549]>
2015-12-03 03:09:09.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:09.458 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:09.474 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:09.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:09.694 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:09.802 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:09.805 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:09.839 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/toggleMoreButton"/[639,571]>
2015-12-03 03:09:09.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:09.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:09.942 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:09.968 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:09.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/toggleMoreButton"/[639,571]>
2015-12-03 03:09:11.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:11.980 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:11.996 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:11.997 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:12.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:12.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:12.362 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 87}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:12.395 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-03 03:09:12.399 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:12.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:12.499 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:12.513 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:12.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/locatortemp6"/[895,549]>
2015-12-03 03:09:13.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:13.864 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:13.882 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:13.883 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:14.162 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:14.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:14.263 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 87}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:14.294 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/recordButton"/[192,270]>
2015-12-03 03:09:14.298 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:14.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:09:14.397 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:14.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:14.415 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/recordButton"/[192,270]>
2015-12-03 03:09:18.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:09:18.111 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:18.127 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:09:18.128 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:09:18.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:09:18.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:09:18.309 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:09:18.327 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:   11 <ExplAct Reset app>
2015-12-03 03:09:18.331 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:09:18.332 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-03 03:09:44.936 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:09:44.940 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:09:45.027 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:09:58.359 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:09:58.401 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:09:58.401 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:10:00.468 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:10:00.469 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:10:00.472 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:09:47.282
2015-12-03 03:10:00.472 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:10:00.578 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:10:00.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:00.631 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 03:10:00.632 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:10:00.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:00.893 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:00.925 INFO  o.d.e.strategy.ExplorationStrategy         1m  3s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/collectionBtn"/[55,55]>
2015-12-03 03:10:00.929 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:00.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:01.028 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:01.050 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:01.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/collectionBtn"/[55,55]>
2015-12-03 03:10:02.414 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:02.414 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:02.447 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:10:02.448 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:03.142 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:03.238 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:03.240 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:03.270 INFO  o.d.e.strategy.ExplorationStrategy         1m  5s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/mixViewBtn"/[639,173]>
2015-12-03 03:10:03.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:03.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:03.361 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:03.394 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:10:03.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.mixvibes.crossdjfree:id/mixViewBtn"/[639,173]>
2015-12-03 03:10:06.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:06.888 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:06.903 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:06.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:07.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:07.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:07.138 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:07.164 INFO  o.d.e.strategy.ExplorationStrategy         1m  9s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:TextView/"My Mixes"/""/[1046,140]>
2015-12-03 03:10:07.169 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:07.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:07.251 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:07.271 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:07.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"My Mixes"/""/[1046,140]>
2015-12-03 03:10:09.834 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:09.835 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:09.863 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:10:09.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:09.972 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:10.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:10.070 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:10.101 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-03 03:10:10.106 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:10.107 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:10.213 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:10.227 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:10.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-03 03:10:12.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:12.773 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:12.805 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:10:12.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:12.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:13.020 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:13.023 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:13.050 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/"Playlists"/""/[179,140]>
2015-12-03 03:10:13.053 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:13.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:13.147 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:13.168 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:13.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Playlists"/""/[179,140]>
2015-12-03 03:10:15.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:15.633 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:15.653 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:15.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:15.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:15.873 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:15.875 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:15.904 INFO  o.d.e.strategy.ExplorationStrategy         1m 18s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[640,496]>
2015-12-03 03:10:15.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:15.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:16.001 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:16.017 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:16.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[640,496]>
2015-12-03 03:10:17.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:17.393 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:17.408 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:17.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:17.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:17.618 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:17.621 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:17.650 INFO  o.d.e.strategy.ExplorationStrategy         1m 20s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-03 03:10:17.655 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:17.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:17.743 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:17.764 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:17.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-03 03:10:19.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:19.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:19.888 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:19.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:19.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:20.090 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:20.094 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:20.126 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-03 03:10:20.130 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:20.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:20.229 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:20.243 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:20.247 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Songs"/""/[304,140]>
2015-12-03 03:10:22.505 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:22.505 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:22.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:10:22.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:22.657 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:22.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:22.762 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:22.792 INFO  o.d.e.strategy.ExplorationStrategy         1m 25s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-03 03:10:22.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:22.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:22.887 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:22.903 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:22.906 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-03 03:10:25.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:25.262 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:25.298 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:10:25.299 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:25.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:25.795 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:25.797 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:25.832 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.mixvibes.crossdjfree:id/GridLayout1"/[620,725]>
2015-12-03 03:10:25.838 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:25.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:25.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:25.952 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:25.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.mixvibes.crossdjfree:id/GridLayout1"/[620,725]>
2015-12-03 03:10:28.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:28.533 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:28.565 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:10:28.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:29.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:29.110 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:29.114 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:29.149 INFO  o.d.e.strategy.ExplorationStrategy         1m 31s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[64,70]>
2015-12-03 03:10:29.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:29.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:29.239 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:29.253 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:29.257 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[64,70]>
2015-12-03 03:10:31.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:31.458 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:31.496 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:10:31.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:31.913 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:31.999 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:32.001 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:32.034 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-03 03:10:32.039 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:32.041 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:32.126 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:32.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:32.151 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Cloud"/""/[55,140]>
2015-12-03 03:10:34.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:34.782 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:34.800 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:34.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:34.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:35.012 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:35.015 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:35.051 INFO  o.d.e.strategy.ExplorationStrategy         1m 37s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-03 03:10:35.055 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:35.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:35.140 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:35.155 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:35.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Folders"/""/[789,140]>
2015-12-03 03:10:37.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:37.582 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:37.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:10:37.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:37.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:38.099 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:38.102 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 82}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:38.134 INFO  o.d.e.strategy.ExplorationStrategy         1m 40s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:TextView/"Artists"/""/[422,140]>
2015-12-03 03:10:38.138 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:38.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:10:38.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:38.247 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:10:38.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Artists"/""/[422,140]>
2015-12-03 03:10:40.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:10:40.526 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:10:40.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:10:40.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:10:40.684 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:10:40.787 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:10:40.790 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 27}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:10:40.805 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:10:40.810 INFO  o.d.e.strategy.ExplorationStrategy         1m 43s /   2m  0s i:   26 <ExplAct Reset app>
2015-12-03 03:10:40.814 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:10:40.814 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mixvibes.crossdjfree
2015-12-03 03:11:07.516 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:11:07.519 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:11:07.604 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:11:21.367 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:11:21.406 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:11:21.406 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:11:23.462 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:11:23.464 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:11:23.466 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:11:09.862
2015-12-03 03:11:23.466 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:11:23.577 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:11:23.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:11:23.634 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 03:11:23.635 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:11:23.877 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:11:23.880 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mixvibes.crossdjfree. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:11:23.897 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:11:23.901 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:11:23.906 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device)
2015-12-03 03:11:23.907 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:11:23.998 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:11:24.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:11:24.022 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:11:24.022 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mixvibes.crossdjfree}
2015-12-03 03:11:25.358 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:11:25.443 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:11:25.446 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:11:25.447 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:11:25.557 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:11:25.636 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mixvibes.crossdjfree_v1.4.6-inlined.apk, device) - DONE
2015-12-03 03:11:44.132 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:11:44.133 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-03 03:12:09.714 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:12:09.718 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:12:09.805 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:12:22.828 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:12:22.880 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:12:22.881 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:12:24.931 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:12:24.932 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:12:24.935 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:12:11.742
2015-12-03 03:12:24.936 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:12:25.038 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:12:25.038 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:12:25.086 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:12:25.087 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:12:25.227 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:12:25.233 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:12:25.256 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,742]>
2015-12-03 03:12:25.262 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:12:25.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:12:25.341 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:12:25.359 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:12:25.362 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[582,742]>
2015-12-03 03:12:29.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:12:29.971 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:12:29.976 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:12:29.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:12:30.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:12:30.482 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:12:30.486 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 78}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:12:30.501 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    3 <ExplAct Reset app>
2015-12-03 03:12:30.504 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:12:30.504 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-03 03:12:58.872 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:12:58.876 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:12:58.960 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:13:10.646 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:13:10.693 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:13:10.694 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:13:12.756 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:13:12.757 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:13:12.760 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:13:00.682
2015-12-03 03:13:12.761 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:13:12.880 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:13:12.881 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:12.915 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:13:12.917 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:13:13.046 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:13:13.050 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:13:13.074 INFO  o.d.e.strategy.ExplorationStrategy         0m 47s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,742]>
2015-12-03 03:13:13.078 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:13:13.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:13:13.160 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:13.180 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:13:13.183 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,742]>
2015-12-03 03:13:15.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:13:15.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:15.141 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:13:15.141 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:13:15.251 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:13:15.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:13:15.348 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:13:15.359 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   2m  0s i:    5 <ExplAct Reset app>
2015-12-03 03:13:15.363 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:13:15.363 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.mxtech.videoplayer.ad
2015-12-03 03:13:41.024 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:41.029 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:13:41.112 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:13:53.702 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:13:53.758 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:13:53.758 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:13:55.821 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:13:55.822 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:13:55.825 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:13:42.762
2015-12-03 03:13:55.826 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:13:55.943 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:13:55.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:55.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:13:55.977 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:13:56.149 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:13:56.153 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.mxtech.videoplayer.ad. Widgets# 15}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:13:56.169 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: GUI state after reset doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.mxtech.videoplayer.ad Widgets count = 15>
2015-12-03 03:13:56.173 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:13:56.176 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device)
2015-12-03 03:13:56.177 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:13:56.273 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:56.288 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:13:56.289 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:13:56.290 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.mxtech.videoplayer.ad}
2015-12-03 03:13:57.216 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:13:57.289 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:13:57.293 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:13:57.293 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:13:57.404 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:13:57.487 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.mxtech.videoplayer.ad_v1.7.31-inlined.apk, device) - DONE
2015-12-03 03:14:09.007 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.naver.linewebtoon_v1.0.6-inlined.apk, device)
2015-12-03 03:14:09.007 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.naver.linewebtoon
2015-12-03 03:14:34.632 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:14:34.637 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:14:34.728 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:14:47.203 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:14:47.254 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:14:47.255 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:14:49.303 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:14:49.305 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 03:15:03.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:15:03.515 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.bild.android
2015-12-03 03:15:29.313 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:29.317 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:15:29.393 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:15:44.402 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:15:44.464 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:15:44.464 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:15:46.532 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:15:46.533 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:15:46.536 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:15:31.192
2015-12-03 03:15:46.536 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:15:46.656 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:15:46.657 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:46.774 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 51
2015-12-03 03:15:46.775 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:15:47.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:15:47.115 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=51, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:15:47.138 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,331]>
2015-12-03 03:15:47.142 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:15:47.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:15:47.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:47.258 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:15:47.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,331]>
2015-12-03 03:15:50.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:15:50.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:50.109 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 03:15:50.110 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:15:50.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:15:50.271 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:15:50.274 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 19}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:15:50.304 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-03 03:15:50.307 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:15:50.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:15:50.400 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:50.417 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:15:50.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-03 03:15:52.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:15:52.463 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:52.509 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:15:52.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:15:52.704 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:15:52.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:15:52.800 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:15:52.825 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/"Suche"/"com.netbiscuits.bild.android:id/menu_item_search_action_bar"/[471,70]>
2015-12-03 03:15:52.829 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:15:52.830 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:15:52.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:52.942 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:15:52.945 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Suche"/"com.netbiscuits.bild.android:id/menu_item_search_action_bar"/[471,70]>
2015-12-03 03:15:55.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:15:55.980 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:56.021 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:15:56.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:15:56.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:15:56.286 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:15:56.289 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:15:56.319 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,664]>
2015-12-03 03:15:56.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:15:56.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:15:56.407 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:15:56.426 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:15:56.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,664]>
2015-12-03 03:16:00.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:00.393 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:00.448 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 03:16:00.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:00.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:00.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:00.691 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:00.717 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-03 03:16:00.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:00.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:00.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:00.825 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:00.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[115,70]>
2015-12-03 03:16:03.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:03.071 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:03.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:16:03.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:03.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:03.384 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:03.388 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:03.415 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ListView/""/"com.netbiscuits.bild.android:id/viewStub"/[400,455]>
2015-12-03 03:16:03.420 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:03.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:03.514 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:03.531 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:03.534 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.netbiscuits.bild.android:id/viewStub"/[400,455]>
2015-12-03 03:16:07.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:07.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:07.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 03:16:07.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:07.446 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:07.541 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:07.544 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:07.579 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[399,292]>
2015-12-03 03:16:07.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:07.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:07.676 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:07.694 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:07.697 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,292]>
2015-12-03 03:16:09.595 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:09.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:09.614 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:09.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:09.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:09.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:09.847 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:09.874 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-03 03:16:09.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:09.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:09.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:09.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:09.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,236]>
2015-12-03 03:16:11.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:11.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:11.977 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:11.978 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:12.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:12.179 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:12.182 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:12.210 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:View/""/""/[400,903]>
2015-12-03 03:16:12.214 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:12.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:12.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:12.323 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:12.327 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,903]>
2015-12-03 03:16:14.215 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:14.216 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:14.230 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:14.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:14.378 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:14.472 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:14.475 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:14.503 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[399,1075]>
2015-12-03 03:16:14.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:14.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:14.600 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:14.620 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:14.623 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,1075]>
2015-12-03 03:16:16.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:16.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:16.508 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:16.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:16.641 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:16.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:16.741 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 38}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:16.772 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[399,396]>
2015-12-03 03:16:16.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:16.778 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:16.865 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:16.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:16.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,396]>
2015-12-03 03:16:18.838 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:18.839 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:18.857 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:18.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:18.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:19.070 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:19.073 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:19.101 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[399,1153]>
2015-12-03 03:16:19.104 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:19.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:19.187 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:19.202 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:19.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,1153]>
2015-12-03 03:16:21.088 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:21.089 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:21.104 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:21.107 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:21.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:21.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:21.348 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:21.379 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[399,528]>
2015-12-03 03:16:21.383 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:21.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:21.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:21.496 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:21.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,528]>
2015-12-03 03:16:22.843 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:22.844 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:22.859 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:22.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:23.032 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:23.122 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:23.126 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:23.168 INFO  o.d.e.strategy.ExplorationStrategy         0m 36s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[374,751]>
2015-12-03 03:16:23.173 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:23.174 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:16:23.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:23.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:23.286 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[374,751]>
2015-12-03 03:16:24.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:16:24.635 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:24.651 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:16:24.652 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:16:24.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:16:24.881 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:16:24.884 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:16:24.901 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:16:24.905 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 03:16:24.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:16:24.909 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.bild.android
2015-12-03 03:16:51.095 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:16:51.099 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:16:51.184 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:17:06.673 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:17:06.732 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:17:06.733 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:17:08.792 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:17:08.793 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:17:08.796 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:16:53.402
2015-12-03 03:17:08.796 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:17:08.901 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:17:08.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:09.019 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 51
2015-12-03 03:17:09.020 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:17:09.410 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:09.413 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=51, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:09.440 INFO  o.d.e.strategy.ExplorationStrategy         1m 22s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 03:17:09.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:09.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:09.531 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:09.554 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:09.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-03 03:17:11.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:11.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:11.627 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:11.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:11.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:11.791 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:11.794 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:11.823 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,335]>
2015-12-03 03:17:11.827 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:11.828 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:11.918 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:11.934 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:11.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,335]>
2015-12-03 03:17:14.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:14.050 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:14.067 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:14.068 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:14.883 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:14.974 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:14.977 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 11}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:14.998 INFO  o.d.e.strategy.ExplorationStrategy         1m 27s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,270]>
2015-12-03 03:17:15.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:15.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:15.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:15.108 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:15.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[658,270]>
2015-12-03 03:17:19.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:19.249 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:19.288 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:17:19.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:19.511 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:19.610 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:19.613 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 31}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:19.640 INFO  o.d.e.strategy.ExplorationStrategy         1m 32s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:ToggleButton/"IVW"/"com.netbiscuits.bild.android:id/ivw_toggleButton"/[303,1165]>
2015-12-03 03:17:19.645 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:19.646 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:19.731 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:19.749 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:19.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ToggleButton/"IVW"/"com.netbiscuits.bild.android:id/ivw_toggleButton"/[303,1165]>
2015-12-03 03:17:21.700 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:21.700 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:21.721 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:21.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:21.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:22.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:22.005 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:22.032 INFO  o.d.e.strategy.ExplorationStrategy         1m 34s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:TextView/"[{"__nodeType__":"CDATA","CDATA":" 

Mit dieser Datenschutzerklärung möchten wir, die Axel Springer SE (nachfolgend „wir“ oder „uns“), Ihnen erläutern, zu welchen Zwecken und in welchem Umfang personenbezogene Daten erhoben, verarbeitet und genutzt werden, wenn Sie sich für ein Produkt aus unserer BILD-Produktpalette (BILD(plus), BILD Apps etc.) entschieden haben. 

I. Verantwortliche Stelle 

Die BILD-Bezahlangebote werden von der Axel Springer SE angeboten. Diese ist Diensteanbieter im Sinne des Telemediengesetzes (TMG) und verantwortliche Stelle im Sinne des Bundesdatenschutzgesetzes (BDSG). Dies gilt sowohl für unsere Apps (u.a. die BILD App) -nachfolgend als „Apps“ bezeichnet) als auch für die BILD(plus)-Inhalte auf der Website unter www.bild.de, dem entsprechenden WAP-Portal und den TV-Apps unter der Marke „BILD“ (nachfolgend zusammen als „BILD.de“ bezeichnet). Inhalte außerhalb der BILD(plus)-Bereiche auf BILD.de werden hingegen von unserer Tochtergesellschaft BILD GmbH & Co. KG verantwortet. 

II. Erhebung, Verarbeitung und Nutzung personenbezogener Daten 

1. Erhebung personenbezogener Daten 

Wir freuen uns über Ihren Besuch auf unserer Webseite und über Ihr Interesse an unseren Produkten. Der Schutz Ihrer Privatsphäre ist uns wichtig. Im Zusammenhang mit der Nutzung unserer Webseite erheben wir von Ihnen z.B. im Rahmen einer Registrierung, eines Gewinnspiels, einer Anfrage oder beim Abschluss eines Abonnements angegebene personenbezogene Daten, um das gewünschte Vertragsverhältnis begründen zu können. 

2. Verwendung Ihrer Daten zur Vertragsabwicklung und für Werbung 

Wir nutzen Ihre bei der Registrierung erhobenen Daten in erster Linie, um Ihre Bestellung zu bearbeiten und Ihnen die gewünschten Leistungen erbringen zu können. Wenn Sie uns im Zuge Ihrer Registrierung oder der Bestellung von BILD-Bezahlangeboten Ihre gesonderte Einwilligung in den Empfang von E-Mail-Werbung erteilt haben, verarbeiten wir Ihre E-Mail-Adresse (sowie ggf. auch Ihren Vor- und Nachnamen und weitere Informationen), um Ihnen entsprechende E-Mails mit Werbung zuzusenden. Sie können diese gesonderte Einwilligung separat widerrufen. 

3. Besonderheiten bei unseren Apps 

Wenn Sie über unsere Apps ein BILD-Bezahlangebot\/Abonnement bestellen, erhalten wir – abhängig von dem betreffenden Drittanbieter bzw. dem Drittportal (z.B. iTunes, Google etc.) – ggf. bestimmte personenbezogene Daten übermittelt. Im Einzelfall werden Sie gegebenenfalls innerhalb des von Ihnen genutzten App Stores um Ihre Einwilligung zur Übermittlung der Daten gebeten. 

Bestimmte auf Ihr Abonnement bezogene Daten werden zudem für Abrechnungszwecke während der Laufzeit des Abonnements gespeichert. Sofern Sie BILD(plus)-Inhalte auf der Grundlage anderweitig abgeschlossener Abonnements nutzen (z.B. als zeitlich befristete kostenlose Zugabe bei einem Print-Abonnement oder als Teil eines Bundle), müssen Sie für die Nutzung der Inhalte in der betreffenden App ggf. zur Zuordnung zu Ihrem Abonnement bestimmte Daten eingeben (z.B. Ihre Kundennummer für das Print-Abonnement). Ihre Zahlungsdaten werden bei den Apps durch den Drittanbieter erhoben und verarbeitet (sog. „In-App-Käufe“). 

III. Anmeldedienst „myPass“ 

Wir nutzen den zentralen Anmeldedienst myPass, bei dem Sie sich einmalig registrieren können, um BILD-Bezahlangebote oder andere Dienste zu nutzen. portalübergreifende Anmeldedienst erlaubt die Nutzung eines Satzes Zugangsdaten auf allen Websites, die myPass ebenfalls integriert haben. Anbieter von myPass ist die myPass GmbH, Axel-Springer-Str. 65, 10969 Berlin. Für myPass gelten separate Datenschutzbestimmungen sowie eigene Nutzungsbedingungen, welche ggf. erst nach einer entsprechenden Registrierung relevant werden. Mehr Informationen finden Sie hier: www.mypass.de\/datenschutz ; www.mypass.de\/nutzungsbedingungen . 

IV. Nutzungsdaten 

Bei der Nutzung von BILD-Bezahlangeboten fallen stets so genannte Nutzungsdaten an. Zudem verwenden wir Verfahren zur Webanalyse und setzen Cookies bzw. entsprechende Technologien ein. 

1. Daten zur Nutzungserleichterung 

Generell können die BILD(plus)-Artikel, die Sie lesen, temporär gespeichert werden (Cache). Zudem wird in den Apps jeweils der letzte vor dem Verlassen der App gelesene Artikel gespeichert, um ihn Ihnen beim nächsten Start der App wieder anzeigen zu können. 
In allen diesen Fällen dient die Speicherung der Daten allein dazu, Ihnen die Nutzung des Produkts zu ermöglichen bzw. so einfach und angenehm wie möglich zu machen. 

2. Logfiles 

Wenn Sie BILD(plus)-Inhalte bzw. die Apps abrufen bzw. nutzen, kommunizieren Sie über das Internet mit unseren Servern. Dabei entstehen bei uns serverseitig so genannte Logfiles. Die aufgezeichneten Logfiles enthalten keine personenbezogenen Daten. Insbesondere werden IP-Adressen anonymisiert, in dem jeweils das letzte Oktett entfernt und die IP-Adresse damit gekürzt wird. Wir verwenden die Logfiles lediglich, um Störungsfälle bei der Erreichbarkeit unserer Server besser analysieren und beheben zu können. 

3. Cookies und ähnliche Technologien 

Wir setzen bei BILD-Bezahlangeboten zudem Cookies ein. Bei Cookies handelt es sich um kleine Dateien, die auf Ihrer Festplatte dem von Ihnen verwendeten Browser zugeordnet gespeichert werden und durch welche der Stelle, die den Cookie setzt, bestimmte Informationen zufließen. Cookies können keine Programme ausführen oder Viren auf Ihren Computer übertragen. Sie dienen dazu, das Internetangebot insgesamt nutzerfreundlicher und effektiver zu machen. 
Falls Sie die Verwendung von Cookies unterbinden wollen, besteht dazu bei Ihrem Browser die Möglichkeit, die Annahme und Speicherung neuer Cookies zu verhindern. Wie dies bei Ihrem Browser funktioniert, können Sie zum Beispiel im Rahmen der Hilfefunktion des Browsers erläutert finden. Wenn Sie Cookies durch die vorgenommenen Einstellungen im Browser automatisch unterschiedslos ablehnen, können Sie ggf. bestimmte Funktionen von BILD(plus) nicht nutzen. Wenn Sie die gespeicherten Cookies nach jeder Session automatisch löschen, sind die Funktionen, die Cookies voraussetzen, danach nicht mehr verfügbar. 
Durch die gesetzten Cookies fließen uns gegebenenfalls Informationen zum Clickstream (Reihenfolge der von Ihnen besuchten Bereiche von BILD.de), dem Datum und der Zeit des Besuchs auf BILD.de sowie die Cookie-Nummer zu, nicht jedoch der Name, die Anschrift, die E-Mail-Adresse oder auch nur IP-Adressen unserer Nutzer. Die von BILD.de gesetzten Cookies dienen lediglich statistischen Zwecken, indem wir zum Beispiel erfahren, welche BILD(plus)-Inhalte am meisten abgerufen werden. Diese Informationen dienen uns dazu, Rubriken wie „meist gelesen“ zu schaffen und auf diesem Weg BILD(plus) für unsere Nutzer komfortabler zu gestalten. Durch die statistischen Erkenntnisse zu Betriebssystem und anderen Daten zum Setup des verwendeten Geräts können wir zudem unser Web- bzw. WAP-Design optimieren. Darüber hinaus möchten wir den BILD(plus)-Nutzern möglichst relevante Inhalte und Dienste anbieten. Schließlich verwenden möglicherweise dritte Unternehmen Cookies, die im Zusammenhang mit BILD(plus) werben oder Werbung im Zusammenhang mit BILD(plus) vermarkten. Teilweise werden in diesen Fällen Nutzungsinformationen, etwa Anzahl der Besuche, Besuchszeiten, Verweildauer bei BILD(plus) bzw. deren einzelnen Inhalten usw., gespeichert und zu Werbezwecken ausgewertet. Die dabei ausgewerteten Daten erlauben uns jedoch keinen Rückschluss auf Sie als einzelnen Nutzer. 

Bei der Nutzung von Apps wird statt des Cookies eine in ihrer Funktion vergleichbare Technik verwendet. 

4. Webanalysedienste 

4.1 REM 

Wir setzen im Zusammenhang mit BILD-Bezahlangeboten den Webanalysedienst \"REM\" des Anbieters CeleraOne GmbH (Usedomer Straße 4, 13355 Berlin), bei dem Daten erhoben und gespeichert werden, aus denen unter Verwendung von Pseudonymen Nutzungsprofile erstellt werden. Diese Nutzungsprofile dienen der Analyse des Besucherverhaltens und werden zur Verbesserung und bedarfsgerechten Gestaltung unseres Angebots ausgewertet. Hierzu werden Cookies oder ähnliche Technologien (vgl. oben Ziff. 3) eingesetzt. Durch eine E-Mail an datenschutz@BILDplus.de können Sie einer etwaigen Einwilligung und\/oder der Datenerhebung und -speicherung über die \"REM\" jederzeit mit Wirkung für die Zukunft widersprechen. 

4.2 Webtrekk 

Auf dieser Website setzen wir das Statistik Programm \"Webtrekk\", der Webtrekk GmbH, Hannoversche Straße 19, 10115 Berlin, ein. Dabei werden anonyme Messwerte über die Nutzung unserer Onlinedienste zur Qualitätsverbesserung und zum Zweck einer benutzerfreundlichen Gestaltung von Ihrem Browser an uns übermittelt. Eine genaue Auflistung der so übermittelten Informationen finden Sie hier: http:\/\/www.webtrekk.com\/index\/datenschutzerklaerung.html. Die Auswertungen werden nur für die Dauer des jeweiligen Online-Besuches vorgenommen. Im Rahmen von Webtrekk werden auch Cookies (vgl. oben Ziff. 3) eingesetzt. Sie können der Analyse durch Webtrekk widersprechen, indem Sie auf den folgenden Link klicken: www.webtrekk.com\/index\/datenschutzerklaerung\/opt-out.html. 

4.3 Exactag 

Ferner setzen wir das Webanalysewerkzeug „Exactag“ der Exactag GmbH (Sitz Düsseldorf) ein. Exactag ermöglicht es uns, Erkenntnisse darüber zu gewinnen, welche unserer Werbemittel oder Onlinemarketing-Kanäle gute Ergebnisse erzeugen und welche Onlinemarketing-Kanäle mit anderen Marketing-Kanälen interagieren. Zu diesem Zweck werden von Exactag bestimmte Nutzungs- und Inhaltsdaten erhoben und ausgewertet, die Ihr Browser übermittelt. 
Hierzu können von Exactag unter anderem Cookies (siehe hierzu oben Ziff. 3) und ein sog. Fingerprint-Verfahren eingesetzt werden, mit dem Ihr Browser ggf, wiedererkannt werden kann. IP-Adressen werden zunächst um das letzte Oktett gekürzt und auch dann nur in verschlüsselter Form (als Hash-Wert, damit aus dieser kein Personenbezug hergestellt werden kann) gespeichert, nachdem der Ursprung (Land, Stadt, ggf. Postleitzahl) des Seitenaufrufs festgestellt wurde. 
Wenn Sie mit der zuvor beschriebenen Erhebung und Verwendung der Daten nicht einverstanden sind, können Sie Exactag deaktivieren, indem Sie durch einen Klick hier einen Opt-out-Cookie setzen lassen. Bitte beachten Sie, dass durch das Setzen des Cookies immer nur der gerade genutzte Browser betroffen ist. In anderen Browsern ist die Erhebung von Nutzungsdaten durch Exactag so lange möglich, bis Sie Exactag auch dort deaktiviert haben. Zudem wird die Erhebung von Nutzungsdaten wieder aufgenommen, wenn Sie den Opt out-Cookie löschen. 

4.4 Skalierbares Zentrales Messverfahren 

BILD-Bezahlangebote nutzt das \"Skalierbare Zentrale Messverfahren\" (SZM) der Fa. INFOnline GmbH ( https:\/\/www.infonline.de ) für die Ermittlung statistischer Kennwerte zur Nutzung unserer Angebote. Dabei werden anonyme Messwerte erhoben. Die SZM-Reichweitenmessung verwendet zur Wiedererkennung von Computersystemen alternativ entweder einen Cookie mit der Kennung „ioam.de“, „ivwbox.de“, ein LocalStorage Objekt oder eine Signatur, die aus verschiedenen automatisch übertragenen Informationen Ihres Browsers erstellt wird. IP-Adressen werden nur in anonymisierter Form verarbeitet. 
Für Web-Anbieter, die Mitglied der Informationsgemeinschaft zur Feststellung der Verbreitung von Werbeträgern e.V. (IVW – www.ivw.eu ) sind oder an der Studie \"internet facts\" der Arbeitsgemeinschaft Online-Forschung e.V. (AGOF – www.agof.de ) teilnehmen, werden die Nutzungsstatistiken monatlich von der AGOF und der Arbeitsgemeinschaft Media-Analyse e.V. (ag.ma - www.agma-mmc.de ), sowie der IVW veröffentlicht und können unter http:\/\/www.agof.de , http:\/\/www.agma-mmc.de und http:\/\/www.ivw.eu eingesehen werden. Neben der Veröffentlichung von Messdaten überprüft die IVW das SZM-Verfahren regelmäßig im Hinblick auf eine regel- und datenschutzkonforme Nutzung. 
Weitere Informationen zum SZM-Verfahren finden Sie auf der Website der INFOnline GmbH ( https:\/\/www.infonline.de ), die das SZM-Verfahren betreibt, der Datenschutzwebsite der AGOF ( http:\/\/www.agof.de\/datenschutz ) und der Datenschutzwebsite der IVW ( http:\/\/www.ivw.eu ). 
Sie können der Datenverarbeitung durch das SZM unter folgenden Links widersprechen: http:\/\/optout.ioam.de und http:\/\/optout.ivwbox.de . 

4.5 adjust.io \/ adeven 

Diese Webseite\/App benutzt u.a. auch die Analysetechnologie „adjust.io“ der adeven GmbH („adeven“). adeven nutzt für die Analyse dabei IP- und Mac-Adressen der User, die allerdings ausschließlich anonymisiert genutzt werden. Ein Rückschluss auf eine natürliche Person ist hierdurch nicht möglich. Durch die Nutzung dieser Webseite\/App zu Analysezwecken erklären Sie sich mit der Bearbeitung der hierdurch anonymisiert erhobenen Daten in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden. Der Datenerhebung und -speicherung kann jederzeit mit Wirkung für die Zukunft widersprochen werden: Mail an optout@adjust.io . 

4.6 Facebook Website Customer Audiences 

Wir verwenden innerhalb unseres Internetauftritts den „Website Custom Audiences“ Pixel des sozialen Netzwerks Facebook, 1601 South California Avenue, Palo Alto, CA 94304, USA. Dabei sind sog. Zählpixel auf unseren Seiten integriert. Wenn Sie unsere Seiten besuchen, wird über das Zählpixel eine direkte Verbindung zwischen Ihrem Browser und dem Facebook-Server hergestellt. Facebook erhält dadurch u.a. von Ihrem Browser die Information, dass von Ihrem Endgerät unsere Seite aufgerufen wurde. Wenn Sie Facebook-Nutzer sind, kann Facebook hierdurch den Besuch unserer Seiten Ihrem Benutzerkonto zuordnen. Wir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der übermittelten Daten sowie deren Nutzung durch Facebook erhalten. Wir können lediglich auswählen, welchen Segmenten von Facebook-Nutzern (wie Alter, Interessen) unsere Werbung angezeigt werden soll. Dabei nutzen wir eine von zwei Arbeitsweisen von Custom Audiences, bei der keine Datensätze, insbesondere keine E-Mailadressen unserer Nutzer – weder verschlüsselt noch unverschlüsselt - an Facebook übermittelt werden. Weitere Informationen hierzu finden Sie in der Datenschutzerklärung von Facebook unter https:\/\/www.facebook.com\/about\/privacy\/ . Bitte klicken Sie auf https:\/\/www.facebook.com\/settings?tab=ads , wenn Sie keine Datenerfassung via Custom Audiences wünschen. 

4.7 Konversionsmessung mit dem Conversion-Pixel von Facebook 

Wir setzen den “Conversion-Pixel“ bzw. Besucheraktions-Pixel der Facebook Inc., 1601 S. California Ave, Palo Alto, CA 94304, USA (“Facebook”) ein. Durch den Aufruf dieses Pixels aus Ihrem Browser kann Facebook in der Folge erkennen, ob eine Facebook-Werbeanzeige erfolgreich war, also z.B. zu einem online-Kaufabschluss geführt hat. Wir erhalten von Facebook hierzu ausschließlich statistische Daten ohne Bezug zu einer konkreten Person. So können wir die Wirksamkeit der Facebook-Werbeanzeigen für statistische und Marktforschungszwecke erfassen. Insbesondere falls Sie bei Facebook angemeldet sind, verweisen wir im Übrigen auf deren Datenschutzinformationen https:\/\/www.facebook.com\/about\/privacy\/ . Bitte klicken Sie auf https:\/\/www.facebook.com\/settings?tab=ads , wenn Sie Ihre Einwilligung zu Conversion Pixel widerrufen möchten 

4.8 Krux 

Außerdem werden auf den Webseiten mit der Technologie der Krux Digital, Inc., 181 South Park, # 2, San Francisco, CA 94107, USA (im Folgenden auch „krux“ genannt) Messdaten zur gesteuerten Auslieferung von Werbeeinblendungen erhoben. Dazu speichert krux grob Themengebiete Ihrer Nutzung in Cookies. Diese Informationen zu Ihrer Internetnutzung werden webseitenübergreifend genutzt, um eine grobe Schätzung aufzustellen, welche Werbung Sie möglicherweise am meisten interessiert. Sie werden nicht mit personenbezogenen Informationen zu Ihnen verknüpft. Unter http:\/\/www.krux.com\/privacy\/consumer-choice\/ können Sie die Aufzeichnung von Messdaten durch das krux System jederzeit unterbinden oder eine bereits erteilte Einwilligung mit Wirkung für die Zukunft widerrufen. 

V. Social Media Plug-ins 

Gegebenenfalls binden wir in die BILD Apps so genannte Social Media Plug-ins ein (zu Social Media Plug-ins auf BILD.de lesen Sie bitte die Datenschutzerklärung für Dienste der BILD GmbH & Co. KG). 

1. Facebook 

Facebook ist ein soziales Netzwerk der Facebook Ireland Limited (Hanover Reach, 5-7 Hanover Quay, Dublin 2 Ireland). Facebook-Buttons sind in der Regel mit dem Facebook-Logo gekennzeichnet. Abhängig von der Art des Buttons können weitere Angaben hinzukommen (z.B. „Like“ oder „Empfehlen“). 
Wenn die App einen Facebook-Button enthält und sie den entsprechenden Bereich aufrufen, wird von Ihrem Browser eine direkte Verbindung mit den Facebook-Servern aufgebaut und der Button von dort geladen. Dabei wird die Information an Facebook übermittelt, dass die entsprechende App-Seite aufgerufen wurde. 
Wenn Sie auf den Facebook-Button klicken, ist es möglich, dass Facebook weitere Daten verarbeitet. So kann Facebook z.B. gegebenenfalls ein Merkmal setzen, über das Facebook auf Internetseiten oder Apps, die ebenfalls Facebook-Buttons eingebunden haben, erkennen kann, dass Sie bereits auf den Button geklickt haben. 
Sind Sie als Facebook-Nutzer gleichzeitig bei Facebook eingeloggt, ist außerdem die Zuordnung des Seitenabrufs zu ihrem Profil möglich. Wenn Sie eingebundene Facebook-Buttons anklicken und sich danach bei Facebook einloggen (oder bereits eingeloggt sind), können die „ge-like-ten“ oder „empfohlenen“ Informationen in Ihrem Profil in Kurzform veröffentlicht werden. Facebook kann so gegebenenfalls weitere Nutzungsdaten erheben und speichern. So können bei Facebook-Nutzerprofile entstehen, die über das hinausgehen, was Sie selbst bei Facebook preisgeben. 
Wir erfahren zu keinem Zeitpunkt, welche Facebook-Buttons Sie wann verwendet haben, sondern erhalten von Facebook ausschließlich eine zusammengefasste, nicht personenbezogene Statistik über die Nutzung der Fanpage der App auf Facebook und eine zusammengefasste Statistik zur Verwendung von Facebook-Buttons in Bezug auf die App. 
Welche Daten Facebook im Einzelnen zu eigenen Zwecken erhebt, erfahren Sie in der Datenschutzerklärung von Facebook; dort erhalten Sie auch weitere Informationen zu Datenerhebung und -verarbeitung durch Facebook und zu Ihren darauf bezogenen Rechten, Die Facebook-Datenschutzerklärung ist abrufbar unter https:\/\/www.facebook.com\/policy.php , die Information von Facebook zu sog. Social Plugins unter http:\/\/on.fb.me\/mAN33b . 

2. Twitter 

Twitter ist ein Microblogging-Dienst des amerikanischen Unternehmens Twitter, Inc. (795 Folsom St., Suite 600, San Francisco, CA 94107). Wenn Sie den Bereich einer BILD App, die einen Twitter-Button enthält, wird von Ihrem Browser gegebenenfalls ebenfalls eine direkte Verbindung mit den Servern von Twitter aufgebaut und der Button von dort geladen. Dabei wird die Information an Twitter übermittelt, dass die entsprechende App-Seite in der App aufgerufen wurde. Auch wenn Sie nicht eingeloggt sind, kann Twitter so gegebenenfalls Nutzungsdaten erheben und auch speichern. 
Wenn Sie die Twitter-Buttons in der App anklicken und über das sich öffnende Fenster Informationen „twittern“ (sofern dies möglich ist), übermitteln Sie die getwitterten Informationen an Twitter. Diese Informationen werden dann in Ihrem Twitter-Nutzerprofil veröffentlicht. 
Weitere Informationen zur Datenerhebung, Auswertung und Verarbeitung Ihrer Daten durch Twitter sowie Ihren darauf bezogenen Rechte erhalten Sie in der Datenschutzerklärung von Twitter, die unter http:\/\/twitter.com\/privacy abrufbar ist. 

3. Google+ 

Google+ ist ein soziales Netzwerk von Google Inc., 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA. Der Button von Google+ ist an dem Zeichen “+1″ erkennbar. 
Wenn Sie in einer BILD App einen Bereich aufrufen, der einen Google+ Button enthält, wird von Ihrer App ebenso eine direkte Verbindung mit den Google-Servern aufgebaut und der Button von dort geladen. Dabei wird die Information an Google Inc. übermittelt, dass die entsprechende Seite in der BILD App aufgerufen wurde. 
Der Inhalt der “+1″-Schaltfläche wird von Google direkt an Ihre App übermittelt und von dieser eingebunden. Wir haben daher keinen Einfluss auf den Umfang der Daten, die Google mit der Schaltfläche erhebt. Nach Angabe von Google werden ohne einen Klick auf die Schaltfläche keine personenbezogenen Daten erhoben. Nur bei bei Google+ eingeloggten Mitgliedern werden Daten, unter anderem die IP-Adresse, erhoben und verarbeitet. Wenn Sie Google+-Mitglied sind und nicht möchten, dass Google über die App Daten über Sie erhebt, müssen Sie sich vor Ihrem Besuch unseres Internetauftritts bei Google+ ausloggen. 
Wir erfahren zu keinem Zeitpunkt, ob und wann Sie den Google+ Button verwendet haben, sondern erhalten von Google ausschließlich eine zusammengefasste, nicht personenbezogene Statistik über die Nutzung des Google+-Buttons. 
Welche Daten Google im Einzelnen zu eigenen Zwecken erhebt und Informationen über die weitere Verarbeitung und Nutzung der Daten, erfahren Sie in der Datenschutzerklärung von Google unter http:\/\/www.google.com\/intl\/de\/+\/policy\/+1button.html . 

VI. Datenübermittlung an Dritte 

Wir übermitteln Ihre personenbezogenen Daten nur dann an Dritte, wenn a) die Übermittlung erforderlich ist, um unsere vertraglichen Verpflichtungen Ihnen gegenüber zu erfüllen und dies ersichtlich bei oder gemeinsam mit einem anderen Anbieter erfolgt (z.B. bei Ihren Käufen über myPass), b) wir zur Weitergabe in sonstiger Weise gesetzlich berechtigt oder verpflichtet sind, oder c) Sie uns eine entsprechende Einwilligung erteilt haben. 
Manchmal setzen wir auch externe Dienstleister ein, die von uns beauftragt sind, Daten für uns weisungsgebunden zu verarbeiten. Solche Dienstleister werden von uns nach den strengen Vorgaben des BDSG schriftlich verpflichtet und dürfen Ihre Daten zu keinen anderen Zwecken weiterverwenden. 

VII. Links zu anderen Websites 

BILD.de wie auch die BILD Apps können Links zu Internetseiten anderer Anbieter enthalten. Nach Anklicken des Links haben wir keinen Einfluss mehr auf die Verarbeitung etwaiger mit dem Anklicken des Links an den Dritten übertragener, personenbezogener Daten (wie zum Beispiel der IP-Adresse oder der URL, auf der sich der Link befindet), da das Verhalten Dritter naturgemäß unserer Kontrolle entzogen ist. Für die Verarbeitung derartiger personenbezogener Daten durch Dritte können wir daher keine Verantwortung übernehmen. 

VIII. Ihre Rechte \/ Kontaktdaten 

Sie können schriftlich oder in Textform von uns jederzeit Auskunft über die von uns zu Ihrer Person gespeicherten Daten erhalten. Der Nutzung Ihrer Daten können Sie jederzeit widersprechen. Sie haben weiterhin jederzeit die Möglichkeit, Ihre personenbezogenen Daten durch uns berichtigen oder löschen zu lassen. Hierfür können Sie weitgehend einfach das “Mein Konto“-Modul nutzen: Loggen Sie sich ein, gehen Sie auf \"Mein Konto\" in „Persönliche Daten“\/“Meine Daten\", nehmen Sie die entsprechenden Maßnahmen vor und klicken Sie anschließend auf den Button \"Änderungen übernehmen\". Ansonsten schreiben Sie uns an: Axel Springer, Datenschutz BILD-Bezahlangebote, Axel-Springer-Straße 65, 10888 Berlin. 
Von der Löschung ausgenommen sind jedoch die Daten, die wir oder ein oder mehrere andere myPass nutzende Diensteanbieter zur Abwicklung noch ausstehender Aufgaben oder zur Durchsetzung von Rechten und Ansprüchen benötigen, sowie Daten, die wir oder ein oder mehrere Diensteanbieter nach gesetzlicher Maßgabe aufbewahren müssen. Solche Daten werden jedoch für uns gesperrt. 


Sollten Sie weitere Fragen zum Datenschutz haben, steht Ihnen unser Datenschutzbeauftragter gerne zur Verfügung: 

Axel Springer SE 
Datenschutz 
Axel-Springer-Str. 65 
10888 Berlin 
datenschutz@BILDplus.de "}]

"/"com.netbiscuits.bild.android:id/text"/[400,713]>
2015-12-03 03:17:22.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:22.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:22.128 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:22.142 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:22.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"[{"__nodeType__":"CDATA","CDATA":" 

Mit dieser Datenschutzerklärung möchten wir, die Axel Springer SE (nachfolgend „wir“ oder „uns“), Ihnen erläutern, zu welchen Zwecken und in welchem Umfang personenbezogene Daten erhoben, verarbeitet und genutzt werden, wenn Sie sich für ein Produkt aus unserer BILD-Produktpalette (BILD(plus), BILD Apps etc.) entschieden haben. 

I. Verantwortliche Stelle 

Die BILD-Bezahlangebote werden von der Axel Springer SE angeboten. Diese ist Diensteanbieter im Sinne des Telemediengesetzes (TMG) und verantwortliche Stelle im Sinne des Bundesdatenschutzgesetzes (BDSG). Dies gilt sowohl für unsere Apps (u.a. die BILD App) -nachfolgend als „Apps“ bezeichnet) als auch für die BILD(plus)-Inhalte auf der Website unter www.bild.de, dem entsprechenden WAP-Portal und den TV-Apps unter der Marke „BILD“ (nachfolgend zusammen als „BILD.de“ bezeichnet). Inhalte außerhalb der BILD(plus)-Bereiche auf BILD.de werden hingegen von unserer Tochtergesellschaft BILD GmbH & Co. KG verantwortet. 

II. Erhebung, Verarbeitung und Nutzung personenbezogener Daten 

1. Erhebung personenbezogener Daten 

Wir freuen uns über Ihren Besuch auf unserer Webseite und über Ihr Interesse an unseren Produkten. Der Schutz Ihrer Privatsphäre ist uns wichtig. Im Zusammenhang mit der Nutzung unserer Webseite erheben wir von Ihnen z.B. im Rahmen einer Registrierung, eines Gewinnspiels, einer Anfrage oder beim Abschluss eines Abonnements angegebene personenbezogene Daten, um das gewünschte Vertragsverhältnis begründen zu können. 

2. Verwendung Ihrer Daten zur Vertragsabwicklung und für Werbung 

Wir nutzen Ihre bei der Registrierung erhobenen Daten in erster Linie, um Ihre Bestellung zu bearbeiten und Ihnen die gewünschten Leistungen erbringen zu können. Wenn Sie uns im Zuge Ihrer Registrierung oder der Bestellung von BILD-Bezahlangeboten Ihre gesonderte Einwilligung in den Empfang von E-Mail-Werbung erteilt haben, verarbeiten wir Ihre E-Mail-Adresse (sowie ggf. auch Ihren Vor- und Nachnamen und weitere Informationen), um Ihnen entsprechende E-Mails mit Werbung zuzusenden. Sie können diese gesonderte Einwilligung separat widerrufen. 

3. Besonderheiten bei unseren Apps 

Wenn Sie über unsere Apps ein BILD-Bezahlangebot\/Abonnement bestellen, erhalten wir – abhängig von dem betreffenden Drittanbieter bzw. dem Drittportal (z.B. iTunes, Google etc.) – ggf. bestimmte personenbezogene Daten übermittelt. Im Einzelfall werden Sie gegebenenfalls innerhalb des von Ihnen genutzten App Stores um Ihre Einwilligung zur Übermittlung der Daten gebeten. 

Bestimmte auf Ihr Abonnement bezogene Daten werden zudem für Abrechnungszwecke während der Laufzeit des Abonnements gespeichert. Sofern Sie BILD(plus)-Inhalte auf der Grundlage anderweitig abgeschlossener Abonnements nutzen (z.B. als zeitlich befristete kostenlose Zugabe bei einem Print-Abonnement oder als Teil eines Bundle), müssen Sie für die Nutzung der Inhalte in der betreffenden App ggf. zur Zuordnung zu Ihrem Abonnement bestimmte Daten eingeben (z.B. Ihre Kundennummer für das Print-Abonnement). Ihre Zahlungsdaten werden bei den Apps durch den Drittanbieter erhoben und verarbeitet (sog. „In-App-Käufe“). 

III. Anmeldedienst „myPass“ 

Wir nutzen den zentralen Anmeldedienst myPass, bei dem Sie sich einmalig registrieren können, um BILD-Bezahlangebote oder andere Dienste zu nutzen. portalübergreifende Anmeldedienst erlaubt die Nutzung eines Satzes Zugangsdaten auf allen Websites, die myPass ebenfalls integriert haben. Anbieter von myPass ist die myPass GmbH, Axel-Springer-Str. 65, 10969 Berlin. Für myPass gelten separate Datenschutzbestimmungen sowie eigene Nutzungsbedingungen, welche ggf. erst nach einer entsprechenden Registrierung relevant werden. Mehr Informationen finden Sie hier: www.mypass.de\/datenschutz ; www.mypass.de\/nutzungsbedingungen . 

IV. Nutzungsdaten 

Bei der Nutzung von BILD-Bezahlangeboten fallen stets so genannte Nutzungsdaten an. Zudem verwenden wir Verfahren zur Webanalyse und setzen Cookies bzw. entsprechende Technologien ein. 

1. Daten zur Nutzungserleichterung 

Generell können die BILD(plus)-Artikel, die Sie lesen, temporär gespeichert werden (Cache). Zudem wird in den Apps jeweils der letzte vor dem Verlassen der App gelesene Artikel gespeichert, um ihn Ihnen beim nächsten Start der App wieder anzeigen zu können. 
In allen diesen Fällen dient die Speicherung der Daten allein dazu, Ihnen die Nutzung des Produkts zu ermöglichen bzw. so einfach und angenehm wie möglich zu machen. 

2. Logfiles 

Wenn Sie BILD(plus)-Inhalte bzw. die Apps abrufen bzw. nutzen, kommunizieren Sie über das Internet mit unseren Servern. Dabei entstehen bei uns serverseitig so genannte Logfiles. Die aufgezeichneten Logfiles enthalten keine personenbezogenen Daten. Insbesondere werden IP-Adressen anonymisiert, in dem jeweils das letzte Oktett entfernt und die IP-Adresse damit gekürzt wird. Wir verwenden die Logfiles lediglich, um Störungsfälle bei der Erreichbarkeit unserer Server besser analysieren und beheben zu können. 

3. Cookies und ähnliche Technologien 

Wir setzen bei BILD-Bezahlangeboten zudem Cookies ein. Bei Cookies handelt es sich um kleine Dateien, die auf Ihrer Festplatte dem von Ihnen verwendeten Browser zugeordnet gespeichert werden und durch welche der Stelle, die den Cookie setzt, bestimmte Informationen zufließen. Cookies können keine Programme ausführen oder Viren auf Ihren Computer übertragen. Sie dienen dazu, das Internetangebot insgesamt nutzerfreundlicher und effektiver zu machen. 
Falls Sie die Verwendung von Cookies unterbinden wollen, besteht dazu bei Ihrem Browser die Möglichkeit, die Annahme und Speicherung neuer Cookies zu verhindern. Wie dies bei Ihrem Browser funktioniert, können Sie zum Beispiel im Rahmen der Hilfefunktion des Browsers erläutert finden. Wenn Sie Cookies durch die vorgenommenen Einstellungen im Browser automatisch unterschiedslos ablehnen, können Sie ggf. bestimmte Funktionen von BILD(plus) nicht nutzen. Wenn Sie die gespeicherten Cookies nach jeder Session automatisch löschen, sind die Funktionen, die Cookies voraussetzen, danach nicht mehr verfügbar. 
Durch die gesetzten Cookies fließen uns gegebenenfalls Informationen zum Clickstream (Reihenfolge der von Ihnen besuchten Bereiche von BILD.de), dem Datum und der Zeit des Besuchs auf BILD.de sowie die Cookie-Nummer zu, nicht jedoch der Name, die Anschrift, die E-Mail-Adresse oder auch nur IP-Adressen unserer Nutzer. Die von BILD.de gesetzten Cookies dienen lediglich statistischen Zwecken, indem wir zum Beispiel erfahren, welche BILD(plus)-Inhalte am meisten abgerufen werden. Diese Informationen dienen uns dazu, Rubriken wie „meist gelesen“ zu schaffen und auf diesem Weg BILD(plus) für unsere Nutzer komfortabler zu gestalten. Durch die statistischen Erkenntnisse zu Betriebssystem und anderen Daten zum Setup des verwendeten Geräts können wir zudem unser Web- bzw. WAP-Design optimieren. Darüber hinaus möchten wir den BILD(plus)-Nutzern möglichst relevante Inhalte und Dienste anbieten. Schließlich verwenden möglicherweise dritte Unternehmen Cookies, die im Zusammenhang mit BILD(plus) werben oder Werbung im Zusammenhang mit BILD(plus) vermarkten. Teilweise werden in diesen Fällen Nutzungsinformationen, etwa Anzahl der Besuche, Besuchszeiten, Verweildauer bei BILD(plus) bzw. deren einzelnen Inhalten usw., gespeichert und zu Werbezwecken ausgewertet. Die dabei ausgewerteten Daten erlauben uns jedoch keinen Rückschluss auf Sie als einzelnen Nutzer. 

Bei der Nutzung von Apps wird statt des Cookies eine in ihrer Funktion vergleichbare Technik verwendet. 

4. Webanalysedienste 

4.1 REM 

Wir setzen im Zusammenhang mit BILD-Bezahlangeboten den Webanalysedienst \"REM\" des Anbieters CeleraOne GmbH (Usedomer Straße 4, 13355 Berlin), bei dem Daten erhoben und gespeichert werden, aus denen unter Verwendung von Pseudonymen Nutzungsprofile erstellt werden. Diese Nutzungsprofile dienen der Analyse des Besucherverhaltens und werden zur Verbesserung und bedarfsgerechten Gestaltung unseres Angebots ausgewertet. Hierzu werden Cookies oder ähnliche Technologien (vgl. oben Ziff. 3) eingesetzt. Durch eine E-Mail an datenschutz@BILDplus.de können Sie einer etwaigen Einwilligung und\/oder der Datenerhebung und -speicherung über die \"REM\" jederzeit mit Wirkung für die Zukunft widersprechen. 

4.2 Webtrekk 

Auf dieser Website setzen wir das Statistik Programm \"Webtrekk\", der Webtrekk GmbH, Hannoversche Straße 19, 10115 Berlin, ein. Dabei werden anonyme Messwerte über die Nutzung unserer Onlinedienste zur Qualitätsverbesserung und zum Zweck einer benutzerfreundlichen Gestaltung von Ihrem Browser an uns übermittelt. Eine genaue Auflistung der so übermittelten Informationen finden Sie hier: http:\/\/www.webtrekk.com\/index\/datenschutzerklaerung.html. Die Auswertungen werden nur für die Dauer des jeweiligen Online-Besuches vorgenommen. Im Rahmen von Webtrekk werden auch Cookies (vgl. oben Ziff. 3) eingesetzt. Sie können der Analyse durch Webtrekk widersprechen, indem Sie auf den folgenden Link klicken: www.webtrekk.com\/index\/datenschutzerklaerung\/opt-out.html. 

4.3 Exactag 

Ferner setzen wir das Webanalysewerkzeug „Exactag“ der Exactag GmbH (Sitz Düsseldorf) ein. Exactag ermöglicht es uns, Erkenntnisse darüber zu gewinnen, welche unserer Werbemittel oder Onlinemarketing-Kanäle gute Ergebnisse erzeugen und welche Onlinemarketing-Kanäle mit anderen Marketing-Kanälen interagieren. Zu diesem Zweck werden von Exactag bestimmte Nutzungs- und Inhaltsdaten erhoben und ausgewertet, die Ihr Browser übermittelt. 
Hierzu können von Exactag unter anderem Cookies (siehe hierzu oben Ziff. 3) und ein sog. Fingerprint-Verfahren eingesetzt werden, mit dem Ihr Browser ggf, wiedererkannt werden kann. IP-Adressen werden zunächst um das letzte Oktett gekürzt und auch dann nur in verschlüsselter Form (als Hash-Wert, damit aus dieser kein Personenbezug hergestellt werden kann) gespeichert, nachdem der Ursprung (Land, Stadt, ggf. Postleitzahl) des Seitenaufrufs festgestellt wurde. 
Wenn Sie mit der zuvor beschriebenen Erhebung und Verwendung der Daten nicht einverstanden sind, können Sie Exactag deaktivieren, indem Sie durch einen Klick hier einen Opt-out-Cookie setzen lassen. Bitte beachten Sie, dass durch das Setzen des Cookies immer nur der gerade genutzte Browser betroffen ist. In anderen Browsern ist die Erhebung von Nutzungsdaten durch Exactag so lange möglich, bis Sie Exactag auch dort deaktiviert haben. Zudem wird die Erhebung von Nutzungsdaten wieder aufgenommen, wenn Sie den Opt out-Cookie löschen. 

4.4 Skalierbares Zentrales Messverfahren 

BILD-Bezahlangebote nutzt das \"Skalierbare Zentrale Messverfahren\" (SZM) der Fa. INFOnline GmbH ( https:\/\/www.infonline.de ) für die Ermittlung statistischer Kennwerte zur Nutzung unserer Angebote. Dabei werden anonyme Messwerte erhoben. Die SZM-Reichweitenmessung verwendet zur Wiedererkennung von Computersystemen alternativ entweder einen Cookie mit der Kennung „ioam.de“, „ivwbox.de“, ein LocalStorage Objekt oder eine Signatur, die aus verschiedenen automatisch übertragenen Informationen Ihres Browsers erstellt wird. IP-Adressen werden nur in anonymisierter Form verarbeitet. 
Für Web-Anbieter, die Mitglied der Informationsgemeinschaft zur Feststellung der Verbreitung von Werbeträgern e.V. (IVW – www.ivw.eu ) sind oder an der Studie \"internet facts\" der Arbeitsgemeinschaft Online-Forschung e.V. (AGOF – www.agof.de ) teilnehmen, werden die Nutzungsstatistiken monatlich von der AGOF und der Arbeitsgemeinschaft Media-Analyse e.V. (ag.ma - www.agma-mmc.de ), sowie der IVW veröffentlicht und können unter http:\/\/www.agof.de , http:\/\/www.agma-mmc.de und http:\/\/www.ivw.eu eingesehen werden. Neben der Veröffentlichung von Messdaten überprüft die IVW das SZM-Verfahren regelmäßig im Hinblick auf eine regel- und datenschutzkonforme Nutzung. 
Weitere Informationen zum SZM-Verfahren finden Sie auf der Website der INFOnline GmbH ( https:\/\/www.infonline.de ), die das SZM-Verfahren betreibt, der Datenschutzwebsite der AGOF ( http:\/\/www.agof.de\/datenschutz ) und der Datenschutzwebsite der IVW ( http:\/\/www.ivw.eu ). 
Sie können der Datenverarbeitung durch das SZM unter folgenden Links widersprechen: http:\/\/optout.ioam.de und http:\/\/optout.ivwbox.de . 

4.5 adjust.io \/ adeven 

Diese Webseite\/App benutzt u.a. auch die Analysetechnologie „adjust.io“ der adeven GmbH („adeven“). adeven nutzt für die Analyse dabei IP- und Mac-Adressen der User, die allerdings ausschließlich anonymisiert genutzt werden. Ein Rückschluss auf eine natürliche Person ist hierdurch nicht möglich. Durch die Nutzung dieser Webseite\/App zu Analysezwecken erklären Sie sich mit der Bearbeitung der hierdurch anonymisiert erhobenen Daten in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden. Der Datenerhebung und -speicherung kann jederzeit mit Wirkung für die Zukunft widersprochen werden: Mail an optout@adjust.io . 

4.6 Facebook Website Customer Audiences 

Wir verwenden innerhalb unseres Internetauftritts den „Website Custom Audiences“ Pixel des sozialen Netzwerks Facebook, 1601 South California Avenue, Palo Alto, CA 94304, USA. Dabei sind sog. Zählpixel auf unseren Seiten integriert. Wenn Sie unsere Seiten besuchen, wird über das Zählpixel eine direkte Verbindung zwischen Ihrem Browser und dem Facebook-Server hergestellt. Facebook erhält dadurch u.a. von Ihrem Browser die Information, dass von Ihrem Endgerät unsere Seite aufgerufen wurde. Wenn Sie Facebook-Nutzer sind, kann Facebook hierdurch den Besuch unserer Seiten Ihrem Benutzerkonto zuordnen. Wir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der übermittelten Daten sowie deren Nutzung durch Facebook erhalten. Wir können lediglich auswählen, welchen Segmenten von Facebook-Nutzern (wie Alter, Interessen) unsere Werbung angezeigt werden soll. Dabei nutzen wir eine von zwei Arbeitsweisen von Custom Audiences, bei der keine Datensätze, insbesondere keine E-Mailadressen unserer Nutzer – weder verschlüsselt noch unverschlüsselt - an Facebook übermittelt werden. Weitere Informationen hierzu finden Sie in der Datenschutzerklärung von Facebook unter https:\/\/www.facebook.com\/about\/privacy\/ . Bitte klicken Sie auf https:\/\/www.facebook.com\/settings?tab=ads , wenn Sie keine Datenerfassung via Custom Audiences wünschen. 

4.7 Konversionsmessung mit dem Conversion-Pixel von Facebook 

Wir setzen den “Conversion-Pixel“ bzw. Besucheraktions-Pixel der Facebook Inc., 1601 S. California Ave, Palo Alto, CA 94304, USA (“Facebook”) ein. Durch den Aufruf dieses Pixels aus Ihrem Browser kann Facebook in der Folge erkennen, ob eine Facebook-Werbeanzeige erfolgreich war, also z.B. zu einem online-Kaufabschluss geführt hat. Wir erhalten von Facebook hierzu ausschließlich statistische Daten ohne Bezug zu einer konkreten Person. So können wir die Wirksamkeit der Facebook-Werbeanzeigen für statistische und Marktforschungszwecke erfassen. Insbesondere falls Sie bei Facebook angemeldet sind, verweisen wir im Übrigen auf deren Datenschutzinformationen https:\/\/www.facebook.com\/about\/privacy\/ . Bitte klicken Sie auf https:\/\/www.facebook.com\/settings?tab=ads , wenn Sie Ihre Einwilligung zu Conversion Pixel widerrufen möchten 

4.8 Krux 

Außerdem werden auf den Webseiten mit der Technologie der Krux Digital, Inc., 181 South Park, # 2, San Francisco, CA 94107, USA (im Folgenden auch „krux“ genannt) Messdaten zur gesteuerten Auslieferung von Werbeeinblendungen erhoben. Dazu speichert krux grob Themengebiete Ihrer Nutzung in Cookies. Diese Informationen zu Ihrer Internetnutzung werden webseitenübergreifend genutzt, um eine grobe Schätzung aufzustellen, welche Werbung Sie möglicherweise am meisten interessiert. Sie werden nicht mit personenbezogenen Informationen zu Ihnen verknüpft. Unter http:\/\/www.krux.com\/privacy\/consumer-choice\/ können Sie die Aufzeichnung von Messdaten durch das krux System jederzeit unterbinden oder eine bereits erteilte Einwilligung mit Wirkung für die Zukunft widerrufen. 

V. Social Media Plug-ins 

Gegebenenfalls binden wir in die BILD Apps so genannte Social Media Plug-ins ein (zu Social Media Plug-ins auf BILD.de lesen Sie bitte die Datenschutzerklärung für Dienste der BILD GmbH & Co. KG). 

1. Facebook 

Facebook ist ein soziales Netzwerk der Facebook Ireland Limited (Hanover Reach, 5-7 Hanover Quay, Dublin 2 Ireland). Facebook-Buttons sind in der Regel mit dem Facebook-Logo gekennzeichnet. Abhängig von der Art des Buttons können weitere Angaben hinzukommen (z.B. „Like“ oder „Empfehlen“). 
Wenn die App einen Facebook-Button enthält und sie den entsprechenden Bereich aufrufen, wird von Ihrem Browser eine direkte Verbindung mit den Facebook-Servern aufgebaut und der Button von dort geladen. Dabei wird die Information an Facebook übermittelt, dass die entsprechende App-Seite aufgerufen wurde. 
Wenn Sie auf den Facebook-Button klicken, ist es möglich, dass Facebook weitere Daten verarbeitet. So kann Facebook z.B. gegebenenfalls ein Merkmal setzen, über das Facebook auf Internetseiten oder Apps, die ebenfalls Facebook-Buttons eingebunden haben, erkennen kann, dass Sie bereits auf den Button geklickt haben. 
Sind Sie als Facebook-Nutzer gleichzeitig bei Facebook eingeloggt, ist außerdem die Zuordnung des Seitenabrufs zu ihrem Profil möglich. Wenn Sie eingebundene Facebook-Buttons anklicken und sich danach bei Facebook einloggen (oder bereits eingeloggt sind), können die „ge-like-ten“ oder „empfohlenen“ Informationen in Ihrem Profil in Kurzform veröffentlicht werden. Facebook kann so gegebenenfalls weitere Nutzungsdaten erheben und speichern. So können bei Facebook-Nutzerprofile entstehen, die über das hinausgehen, was Sie selbst bei Facebook preisgeben. 
Wir erfahren zu keinem Zeitpunkt, welche Facebook-Buttons Sie wann verwendet haben, sondern erhalten von Facebook ausschließlich eine zusammengefasste, nicht personenbezogene Statistik über die Nutzung der Fanpage der App auf Facebook und eine zusammengefasste Statistik zur Verwendung von Facebook-Buttons in Bezug auf die App. 
Welche Daten Facebook im Einzelnen zu eigenen Zwecken erhebt, erfahren Sie in der Datenschutzerklärung von Facebook; dort erhalten Sie auch weitere Informationen zu Datenerhebung und -verarbeitung durch Facebook und zu Ihren darauf bezogenen Rechten, Die Facebook-Datenschutzerklärung ist abrufbar unter https:\/\/www.facebook.com\/policy.php , die Information von Facebook zu sog. Social Plugins unter http:\/\/on.fb.me\/mAN33b . 

2. Twitter 

Twitter ist ein Microblogging-Dienst des amerikanischen Unternehmens Twitter, Inc. (795 Folsom St., Suite 600, San Francisco, CA 94107). Wenn Sie den Bereich einer BILD App, die einen Twitter-Button enthält, wird von Ihrem Browser gegebenenfalls ebenfalls eine direkte Verbindung mit den Servern von Twitter aufgebaut und der Button von dort geladen. Dabei wird die Information an Twitter übermittelt, dass die entsprechende App-Seite in der App aufgerufen wurde. Auch wenn Sie nicht eingeloggt sind, kann Twitter so gegebenenfalls Nutzungsdaten erheben und auch speichern. 
Wenn Sie die Twitter-Buttons in der App anklicken und über das sich öffnende Fenster Informationen „twittern“ (sofern dies möglich ist), übermitteln Sie die getwitterten Informationen an Twitter. Diese Informationen werden dann in Ihrem Twitter-Nutzerprofil veröffentlicht. 
Weitere Informationen zur Datenerhebung, Auswertung und Verarbeitung Ihrer Daten durch Twitter sowie Ihren darauf bezogenen Rechte erhalten Sie in der Datenschutzerklärung von Twitter, die unter http:\/\/twitter.com\/privacy abrufbar ist. 

3. Google+ 

Google+ ist ein soziales Netzwerk von Google Inc., 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA. Der Button von Google+ ist an dem Zeichen “+1″ erkennbar. 
Wenn Sie in einer BILD App einen Bereich aufrufen, der einen Google+ Button enthält, wird von Ihrer App ebenso eine direkte Verbindung mit den Google-Servern aufgebaut und der Button von dort geladen. Dabei wird die Information an Google Inc. übermittelt, dass die entsprechende Seite in der BILD App aufgerufen wurde. 
Der Inhalt der “+1″-Schaltfläche wird von Google direkt an Ihre App übermittelt und von dieser eingebunden. Wir haben daher keinen Einfluss auf den Umfang der Daten, die Google mit der Schaltfläche erhebt. Nach Angabe von Google werden ohne einen Klick auf die Schaltfläche keine personenbezogenen Daten erhoben. Nur bei bei Google+ eingeloggten Mitgliedern werden Daten, unter anderem die IP-Adresse, erhoben und verarbeitet. Wenn Sie Google+-Mitglied sind und nicht möchten, dass Google über die App Daten über Sie erhebt, müssen Sie sich vor Ihrem Besuch unseres Internetauftritts bei Google+ ausloggen. 
Wir erfahren zu keinem Zeitpunkt, ob und wann Sie den Google+ Button verwendet haben, sondern erhalten von Google ausschließlich eine zusammengefasste, nicht personenbezogene Statistik über die Nutzung des Google+-Buttons. 
Welche Daten Google im Einzelnen zu eigenen Zwecken erhebt und Informationen über die weitere Verarbeitung und Nutzung der Daten, erfahren Sie in der Datenschutzerklärung von Google unter http:\/\/www.google.com\/intl\/de\/+\/policy\/+1button.html . 

VI. Datenübermittlung an Dritte 

Wir übermitteln Ihre personenbezogenen Daten nur dann an Dritte, wenn a) die Übermittlung erforderlich ist, um unsere vertraglichen Verpflichtungen Ihnen gegenüber zu erfüllen und dies ersichtlich bei oder gemeinsam mit einem anderen Anbieter erfolgt (z.B. bei Ihren Käufen über myPass), b) wir zur Weitergabe in sonstiger Weise gesetzlich berechtigt oder verpflichtet sind, oder c) Sie uns eine entsprechende Einwilligung erteilt haben. 
Manchmal setzen wir auch externe Dienstleister ein, die von uns beauftragt sind, Daten für uns weisungsgebunden zu verarbeiten. Solche Dienstleister werden von uns nach den strengen Vorgaben des BDSG schriftlich verpflichtet und dürfen Ihre Daten zu keinen anderen Zwecken weiterverwenden. 

VII. Links zu anderen Websites 

BILD.de wie auch die BILD Apps können Links zu Internetseiten anderer Anbieter enthalten. Nach Anklicken des Links haben wir keinen Einfluss mehr auf die Verarbeitung etwaiger mit dem Anklicken des Links an den Dritten übertragener, personenbezogener Daten (wie zum Beispiel der IP-Adresse oder der URL, auf der sich der Link befindet), da das Verhalten Dritter naturgemäß unserer Kontrolle entzogen ist. Für die Verarbeitung derartiger personenbezogener Daten durch Dritte können wir daher keine Verantwortung übernehmen. 

VIII. Ihre Rechte \/ Kontaktdaten 

Sie können schriftlich oder in Textform von uns jederzeit Auskunft über die von uns zu Ihrer Person gespeicherten Daten erhalten. Der Nutzung Ihrer Daten können Sie jederzeit widersprechen. Sie haben weiterhin jederzeit die Möglichkeit, Ihre personenbezogenen Daten durch uns berichtigen oder löschen zu lassen. Hierfür können Sie weitgehend einfach das “Mein Konto“-Modul nutzen: Loggen Sie sich ein, gehen Sie auf \"Mein Konto\" in „Persönliche Daten“\/“Meine Daten\", nehmen Sie die entsprechenden Maßnahmen vor und klicken Sie anschließend auf den Button \"Änderungen übernehmen\". Ansonsten schreiben Sie uns an: Axel Springer, Datenschutz BILD-Bezahlangebote, Axel-Springer-Straße 65, 10888 Berlin. 
Von der Löschung ausgenommen sind jedoch die Daten, die wir oder ein oder mehrere andere myPass nutzende Diensteanbieter zur Abwicklung noch ausstehender Aufgaben oder zur Durchsetzung von Rechten und Ansprüchen benötigen, sowie Daten, die wir oder ein oder mehrere Diensteanbieter nach gesetzlicher Maßgabe aufbewahren müssen. Solche Daten werden jedoch für uns gesperrt. 


Sollten Sie weitere Fragen zum Datenschutz haben, steht Ihnen unser Datenschutzbeauftragter gerne zur Verfügung: 

Axel Springer SE 
Datenschutz 
Axel-Springer-Str. 65 
10888 Berlin 
datenschutz@BILDplus.de "}]

"/"com.netbiscuits.bild.android:id/text"/[400,713]>
2015-12-03 03:17:23.533 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:23.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:23.553 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:23.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:23.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:23.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:23.838 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 31}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:23.875 INFO  o.d.e.strategy.ExplorationStrategy         1m 36s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-03 03:17:23.879 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:23.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:23.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:23.968 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:23.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[112,70]>
2015-12-03 03:17:25.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:25.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:25.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:17:25.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:25.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:25.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:25.741 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 52}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:25.770 INFO  o.d.e.strategy.ExplorationStrategy         1m 38s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,342]>
2015-12-03 03:17:25.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:25.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:25.865 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:25.884 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:25.887 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,342]>
2015-12-03 03:17:28.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:28.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:28.783 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 03:17:28.785 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:28.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:28.963 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:28.967 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 19}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:28.999 INFO  o.d.e.strategy.ExplorationStrategy         1m 41s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:WebView/""/"com.netbiscuits.bild.android:id/webview"/[400,656]>
2015-12-03 03:17:29.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:29.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:29.081 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:29.095 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:29.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.netbiscuits.bild.android:id/webview"/[400,656]>
2015-12-03 03:17:31.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:31.161 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:31.179 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:31.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:31.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:31.434 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:31.436 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:31.469 INFO  o.d.e.strategy.ExplorationStrategy         1m 44s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:View/""/""/[351,589]>
2015-12-03 03:17:31.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:31.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:31.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:31.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:31.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[351,589]>
2015-12-03 03:17:33.495 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:33.496 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:33.513 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:33.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:33.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:33.765 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:33.768 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:33.801 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:View/""/""/[499,688]>
2015-12-03 03:17:33.805 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:33.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:33.902 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:33.931 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:33.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[499,688]>
2015-12-03 03:17:36.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:36.392 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:36.437 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:17:36.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:36.613 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:36.698 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:36.702 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 47}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:36.734 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:RadioButton/""/""/[562,586]>
2015-12-03 03:17:36.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:36.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:36.823 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:36.838 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:36.841 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RadioButton/""/""/[562,586]>
2015-12-03 03:17:39.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:39.303 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:39.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:39.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:39.639 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:39.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:39.736 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:39.769 INFO  o.d.e.strategy.ExplorationStrategy         1m 52s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:View/""/""/[84,501]>
2015-12-03 03:17:39.772 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:39.773 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:39.861 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:39.877 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:39.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[84,501]>
2015-12-03 03:17:41.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:41.781 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:41.798 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:41.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:42.047 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:42.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:42.129 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:42.167 INFO  o.d.e.strategy.ExplorationStrategy         1m 55s /   2m  0s i:   29 <ExplAct LC? 0 Wdgt:View/""/""/[400,943]>
2015-12-03 03:17:42.171 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:42.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:42.255 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:42.270 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:42.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,943]>
2015-12-03 03:17:44.241 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:44.241 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:44.255 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:44.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:44.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:44.622 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:44.625 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:44.663 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   30 <ExplAct LC? 0 Wdgt:View/""/""/[410,1184]>
2015-12-03 03:17:44.668 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:44.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:17:44.754 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:44.774 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:44.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[410,1184]>
2015-12-03 03:17:46.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:17:46.804 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:46.820 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:46.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:17:47.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:17:47.160 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:17:47.164 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.bild.android. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:17:47.181 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:17:47.184 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:17:47.189 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device)
2015-12-03 03:17:47.190 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:17:47.275 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:47.301 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:17:47.302 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:17:47.303 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.netbiscuits.bild.android}
2015-12-03 03:17:48.502 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:17:48.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:17:48.588 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:17:48.589 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:17:48.685 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:17:48.762 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.bild.android_v3.5.6-inlined.apk, device) - DONE
2015-12-03 03:18:03.602 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-03 03:18:03.602 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.netbiscuits.kicker
2015-12-03 03:18:29.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:18:29.181 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:18:29.268 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:18:45.368 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:18:45.406 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:18:45.406 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:18:47.449 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:18:47.451 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:18:47.453 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:18:30.932
2015-12-03 03:18:47.454 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:18:47.546 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:18:47.546 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:18:48.543 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 29
2015-12-03 03:18:48.544 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:18:49.972 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-03 03:18:49.978 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.netbiscuits.kicker. Widgets# 1}, DeviceLogs{apiLogs#=29, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:18:49.986 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.netbiscuits.kicker Widgets count = 1>
2015-12-03 03:18:49.990 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:18:49.993 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device)
2015-12-03 03:18:49.995 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:18:50.072 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:18:50.720 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-03 03:18:50.721 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:18:50.722 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.netbiscuits.kicker}
2015-12-03 03:18:51.717 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:18:51.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:18:51.803 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:18:51.803 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:18:51.913 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:18:51.993 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.netbiscuits.kicker_v3.2.3-inlined.apk, device) - DONE
2015-12-03 03:18:59.399 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ng.dailynews_v1.13-inlined.apk, device)
2015-12-03 03:18:59.400 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ng.dailynews
2015-12-03 03:19:26.225 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:19:26.229 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:19:26.317 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:19:38.254 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:19:38.307 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:19:38.308 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:19:40.370 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:19:40.372 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 03:20:15.948 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-03 03:20:15.948 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.onemanwithcameralomo
2015-12-03 03:20:41.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:20:41.660 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:20:41.745 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:20:54.873 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:20:54.929 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:20:54.930 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:20:56.988 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:20:56.990 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:20:56.992 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:20:43.522
2015-12-03 03:20:56.993 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:20:57.107 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:20:57.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:20:57.145 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 03:20:57.146 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:20:57.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-03 03:20:57.604 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.onemanwithcameralomo. Widgets# 5}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:20:57.612 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.onemanwithcameralomo Widgets count = 5>
2015-12-03 03:20:57.616 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:20:57.619 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device)
2015-12-03 03:20:57.620 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:20:57.702 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:20:57.733 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:20:57.734 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:20:57.735 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.onemanwithcameralomo}
2015-12-03 03:20:59.191 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:20:59.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:20:59.274 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:20:59.274 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:21:01.402 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:21:01.488 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.onemanwithcameralomo_v3.8.2-inlined.apk, device) - DONE
2015-12-03 03:21:56.845 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-03 03:21:56.846 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.outfit7.talkingangelafree
2015-12-03 03:22:22.555 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:22:22.559 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:22:22.653 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:22:38.757 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:22:38.799 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:22:38.800 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:22:40.840 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:22:40.841 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:22:40.843 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:22:24.322
2015-12-03 03:22:40.844 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:22:40.935 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:22:40.935 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:22:41.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 20
2015-12-03 03:22:41.005 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:22:43.638 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-03 03:22:43.645 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.outfit7.talkingangelafree. Widgets# 22}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:22:43.652 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.outfit7.talkingangelafree Widgets count = 22>
2015-12-03 03:22:43.656 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:22:43.663 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-03 03:22:43.664 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:22:43.759 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:22:43.959 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 17
2015-12-03 03:22:43.960 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:22:43.961 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.outfit7.talkingangelafree}
2015-12-03 03:22:45.607 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:22:45.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:22:45.691 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:22:45.691 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:22:45.787 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:22:45.870 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-03 03:23:11.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:23:11.914 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-03 03:23:37.965 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:23:37.969 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:23:38.050 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:23:54.136 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:23:54.190 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:23:54.191 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:23:56.249 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:23:56.251 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:23:56.256 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:23:39.702
2015-12-03 03:23:56.257 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:23:56.358 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:23:56.358 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:23:56.453 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 41
2015-12-03 03:23:56.455 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:23:56.585 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:23:56.591 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 11}, DeviceLogs{apiLogs#=41, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:23:56.616 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-03 03:23:56.621 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:23:56.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:23:56.700 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:23:56.717 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:23:56.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-03 03:23:58.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:23:58.688 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:23:58.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:23:58.708 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:23:58.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:23:58.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:23:58.980 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:23:59.006 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-03 03:23:59.010 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:23:59.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:23:59.098 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:23:59.116 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:23:59.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-03 03:24:02.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:02.167 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:02.216 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:24:02.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:02.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:02.561 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:02.564 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:02.586 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-03 03:24:02.589 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:02.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:02.675 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:02.693 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:02.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-03 03:24:05.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:05.212 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:05.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:05.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:05.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:05.467 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:05.470 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:05.495 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-03 03:24:05.498 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:05.499 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:05.584 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:05.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:05.603 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-03 03:24:07.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:07.800 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:07.816 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:07.817 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:07.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:08.025 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:08.027 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:08.052 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-03 03:24:08.055 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:08.056 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:08.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:08.166 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:08.169 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-03 03:24:10.349 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:10.349 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:10.369 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:10.370 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:10.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:10.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:10.600 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:10.627 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-03 03:24:10.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:10.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:10.725 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:10.744 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:10.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-03 03:24:13.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:13.145 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:13.164 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:13.165 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:13.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:13.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:13.503 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:13.530 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-03 03:24:13.535 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:13.536 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:13.619 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:13.636 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:13.639 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-03 03:24:14.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:14.986 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:15.040 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 03:24:15.041 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:17.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:17.514 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:17.517 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:17.544 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/"Email address"/"com.paypal.android.p2pmobile:id/etEmail"/[400,151]>
2015-12-03 03:24:17.549 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:17.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:17.642 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:17.717 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 21
2015-12-03 03:24:17.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email address"/"com.paypal.android.p2pmobile:id/etEmail"/[400,151]>
2015-12-03 03:24:19.074 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:19.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:19.091 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:19.092 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:19.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:19.275 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:19.278 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=21, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:19.303 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"New to PayPal? Sign Up"/"com.paypal.android.p2pmobile:id/authSignup"/[400,406]>
2015-12-03 03:24:19.307 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:19.308 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:19.401 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:19.422 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:19.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"New to PayPal? Sign Up"/"com.paypal.android.p2pmobile:id/authSignup"/[400,406]>
2015-12-03 03:24:21.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:21.676 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:21.721 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:24:21.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:21.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:21.857 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:21.860 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 7}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:21.884 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:WebView/""/"com.paypal.android.p2pmobile:id/onboard_web_view"/[400,619]>
2015-12-03 03:24:21.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:21.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:21.957 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:21.970 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:21.972 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.paypal.android.p2pmobile:id/onboard_web_view"/[400,619]>
2015-12-03 03:24:26.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:26.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:26.565 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:26.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:26.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:26.739 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:26.744 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:26.774 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[400,170]>
2015-12-03 03:24:26.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:26.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:26.872 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:26.887 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:26.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,170]>
2015-12-03 03:24:28.839 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:28.839 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:28.856 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:28.857 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:28.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:29.057 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:29.059 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:29.088 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/""/""/[400,469]>
2015-12-03 03:24:29.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:29.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:29.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:29.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:29.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/""/""/[400,469]>
2015-12-03 03:24:31.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:31.250 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:31.267 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:31.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:31.371 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:31.476 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:31.479 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:31.511 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[61,79]>
2015-12-03 03:24:31.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:31.516 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:31.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:31.618 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:31.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[61,79]>
2015-12-03 03:24:33.570 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:33.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:33.584 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:33.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:33.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:33.781 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:33.784 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:33.813 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[737,416]>
2015-12-03 03:24:33.817 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:33.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:24:33.898 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:33.915 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:33.919 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[737,416]>
2015-12-03 03:24:35.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:24:35.267 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:24:35.287 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:24:35.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:24:35.389 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:24:35.489 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-03 03:24:35.492 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:24:35.507 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:24:35.511 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 03:24:35.515 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-03 03:24:35.515 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-03 03:25:03.422 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-03 03:25:35.696 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:25:35.696 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-03 03:26:01.610 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:01.615 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:26:01.697 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:26:17.792 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:26:17.840 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:26:17.841 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:26:19.882 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:26:19.886 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:26:19.888 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:26:03.562
2015-12-03 03:26:19.889 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:26:19.977 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:26:19.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:20.089 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 47
2015-12-03 03:26:20.091 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:26:20.393 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:20.400 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=47, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:20.423 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,70]>
2015-12-03 03:26:20.427 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:20.428 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:20.504 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:20.548 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-03 03:26:20.551 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,70]>
2015-12-03 03:26:22.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:22.911 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:22.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-03 03:26:22.959 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:23.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:23.200 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:23.203 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:23.226 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"What's New"/"com.picsart.studio:id/si_ui_more_whatsnew_layout_id"/[206,744]>
2015-12-03 03:26:23.231 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:23.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:23.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:23.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:23.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"What's New"/"com.picsart.studio:id/si_ui_more_whatsnew_layout_id"/[206,744]>
2015-12-03 03:26:27.735 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:27.736 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:27.779 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-03 03:26:27.780 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:27.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:27.992 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:27.994 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 14}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:28.023 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:WebView/""/"com.picsart.studio:id/whats_new_textView"/[399,842]>
2015-12-03 03:26:28.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:28.027 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:28.116 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:28.134 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:28.137 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.picsart.studio:id/whats_new_textView"/[399,842]>
2015-12-03 03:26:30.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:30.130 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:30.146 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:30.148 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:30.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:30.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:30.357 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:30.386 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Close"/"com.picsart.studio:id/whats_new_closeButton"/[399,1008]>
2015-12-03 03:26:30.391 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:30.392 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:30.475 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:30.491 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:30.494 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Close"/"com.picsart.studio:id/whats_new_closeButton"/[399,1008]>
2015-12-03 03:26:31.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:31.841 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:31.879 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-03 03:26:31.880 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:32.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:32.155 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:32.160 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:32.188 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Share PicsArt"/"com.picsart.studio:id/si_ui_more_share_layout_id"/[206,634]>
2015-12-03 03:26:32.193 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:32.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:32.282 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:32.298 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:32.301 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Share PicsArt"/"com.picsart.studio:id/si_ui_more_share_layout_id"/[206,634]>
2015-12-03 03:26:33.643 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:33.643 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:33.680 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:26:33.682 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:33.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:33.943 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:33.946 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:33.977 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_more_fb"/[114,558]>
2015-12-03 03:26:33.982 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:33.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:26:34.066 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:34.084 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:34.087 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_more_fb"/[114,558]>
2015-12-03 03:26:36.746 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:26:36.747 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:26:36.764 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:26:36.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:26:36.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:26:37.012 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:26:37.016 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{"Complete action using" dialog box.}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:26:37.033 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    8 <ExplAct Reset app>
2015-12-03 03:26:37.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:26:37.038 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-03 03:27:03.254 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:03.259 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:27:03.351 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:27:19.458 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:27:19.505 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:27:19.505 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:27:21.547 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:27:21.549 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:27:21.551 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:27:05.532
2015-12-03 03:27:21.552 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:27:21.635 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:27:21.636 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:21.746 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 49
2015-12-03 03:27:21.747 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:27:21.894 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:27:21.897 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=49, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:27:21.926 INFO  o.d.e.strategy.ExplorationStrategy         1m  1s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-03 03:27:21.931 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:27:21.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:27:22.006 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:22.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:27:22.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get Started"/"com.picsart.studio:id/welcome_picsart_actionButton"/[400,1137]>
2015-12-03 03:27:23.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:27:23.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:23.899 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:27:23.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:27:25.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:27:25.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:27:25.127 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:27:25.154 INFO  o.d.e.strategy.ExplorationStrategy         1m  4s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-03 03:27:25.158 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:27:25.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:27:25.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:25.268 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:27:25.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"SKIP"/"com.picsart.studio:id/welcome_picsart_skipButton"/[399,86]>
2015-12-03 03:27:27.352 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:27:27.352 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:27.392 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-03 03:27:27.393 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:27:27.526 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:27:27.625 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:27:27.628 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 32}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:27:27.657 INFO  o.d.e.strategy.ExplorationStrategy         1m  7s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.picsart.studio:id/moreLayoutId"/[539,761]>
2015-12-03 03:27:27.661 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:27:27.662 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:27:27.753 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:27.771 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:27:27.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.picsart.studio:id/moreLayoutId"/[539,761]>
2015-12-03 03:27:31.782 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:27:31.783 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:31.821 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:27:31.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:27:32.130 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:27:32.235 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:27:32.238 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.documentsui. Widgets# 74}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:27:32.258 INFO  o.d.e.strategy.ExplorationStrategy         1m 11s /   2m  0s i:   12 <ExplAct Reset app>
2015-12-03 03:27:32.264 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:27:32.265 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-03 03:27:58.291 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:27:58.295 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:27:58.377 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:28:14.610 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:28:14.646 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:28:14.647 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:28:16.687 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:28:16.689 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:28:16.691 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:28:00.612
2015-12-03 03:28:16.692 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:28:16.768 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:28:16.768 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:16.858 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 37
2015-12-03 03:28:16.860 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:28:17.450 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:28:17.454 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 46}, DeviceLogs{apiLogs#=37, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:28:17.486 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/tab_my_network_id"/[80,140]>
2015-12-03 03:28:17.492 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:28:17.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:28:17.572 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:17.585 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:28:17.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/tab_my_network_id"/[80,140]>
2015-12-03 03:28:19.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:28:19.530 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:19.545 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:28:19.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:28:19.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:28:19.797 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:28:19.802 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:28:19.838 INFO  o.d.e.strategy.ExplorationStrategy         1m 59s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/tab_home_id"/[400,140]>
2015-12-03 03:28:19.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:28:19.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:28:19.931 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:19.944 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:28:19.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/tab_home_id"/[400,140]>
2015-12-03 03:28:23.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:28:23.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:23.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:28:23.195 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:28:23.737 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:28:23.839 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:28:23.842 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:28:23.858 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:28:23.861 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:28:23.864 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-03 03:28:23.865 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:28:23.957 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:23.977 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:28:23.979 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:28:23.979 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.picsart.studio}
2015-12-03 03:28:24.861 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:28:24.942 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:28:24.946 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:28:24.946 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:28:25.052 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:28:25.135 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-03 03:28:34.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:28:34.670 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-03 03:29:00.454 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:00.459 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:29:00.547 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:29:10.047 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:29:10.099 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:29:10.100 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:29:12.163 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:29:12.165 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:29:12.168 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:29:02.692
2015-12-03 03:29:12.168 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:29:12.274 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:29:12.275 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:12.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 67
2015-12-03 03:29:12.414 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:29:12.564 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:12.572 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=67, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:12.595 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-03 03:29:12.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:12.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:12.684 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:12.700 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:12.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-03 03:29:14.587 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:14.588 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:14.604 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:14.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:14.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:14.816 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:14.819 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:14.844 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/UserMarkerButton"/[660,70]>
2015-12-03 03:29:14.848 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:14.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:14.939 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:14.958 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:14.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/UserMarkerButton"/[660,70]>
2015-12-03 03:29:16.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:16.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:17.016 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:29:17.017 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:17.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:17.230 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:17.233 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 29}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:17.262 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-03 03:29:17.266 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:17.267 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:17.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:17.387 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:17.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-03 03:29:19.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:19.451 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:19.469 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:19.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:19.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:19.695 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:19.698 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:19.726 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-03 03:29:19.731 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:19.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:19.814 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:19.829 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:19.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-03 03:29:22.275 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:22.275 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:22.293 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:22.294 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:22.385 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:22.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:22.478 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:22.507 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[401,653]>
2015-12-03 03:29:22.511 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:22.512 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:22.604 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:22.624 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:22.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/select_dialog_listview"/[401,653]>
2015-12-03 03:29:24.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:24.139 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:24.157 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:24.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:24.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:24.327 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:24.330 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:24.354 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   2m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Favoriten"/"android:id/text1"/[401,610]>
2015-12-03 03:29:24.357 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:24.359 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:24.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:24.464 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:24.467 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Favoriten"/"android:id/text1"/[401,610]>
2015-12-03 03:29:26.745 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:26.747 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:26.781 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:29:26.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:26.855 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:26.950 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:26.953 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:26.981 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:26.986 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:26.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:27.074 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:27.094 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:27.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:28.518 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:28.519 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:28.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:28.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:28.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:28.681 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:28.684 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:28.711 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   2m  0s i:    9 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:28.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:28.715 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:28.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:28.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:28.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:30.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:30.176 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:30.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:30.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:30.281 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:30.370 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:30.373 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:30.404 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:30.408 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:30.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:30.499 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:30.521 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:30.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:31.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:31.865 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:31.881 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:31.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:31.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:32.035 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:32.037 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:32.061 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:32.065 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:32.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:32.151 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:32.170 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:32.173 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:33.510 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:33.511 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:33.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:33.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:33.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:33.686 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:33.689 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:33.716 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:33.720 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:33.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:33.810 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:33.829 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:33.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:35.184 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:35.185 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:35.200 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:35.201 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:35.290 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:35.384 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:35.386 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:35.416 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:35.419 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:35.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:35.512 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:35.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:35.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:36.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:36.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:36.897 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:36.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:36.955 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:37.047 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:37.050 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:37.078 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:37.083 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:37.084 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:37.169 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:37.185 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:37.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/EditButton"/[766,69]>
2015-12-03 03:29:38.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:38.540 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:38.557 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:38.558 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:38.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:38.700 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:38.702 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:38.729 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:38.732 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:38.733 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:29:38.822 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:38.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:38.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.ptvag.android.adacgasprices:id/ListView"/[400,653]>
2015-12-03 03:29:40.192 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:29:40.193 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:29:40.212 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:29:40.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:29:40.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:29:40.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:29:40.388 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 10}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:29:40.403 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-03 03:29:40.407 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   2m  0s i:   16 <ExplAct Reset app>
2015-12-03 03:29:40.410 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:29:40.411 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-03 03:30:06.652 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:06.657 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:30:06.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:30:16.358 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:30:16.410 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:30:16.410 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:30:18.466 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:30:18.468 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:30:18.471 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:30:08.722
2015-12-03 03:30:18.472 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:30:18.567 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:30:18.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:18.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 68
2015-12-03 03:30:18.703 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:30:18.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:18.847 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=68, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:18.874 INFO  o.d.e.strategy.ExplorationStrategy         1m  6s /   2m  0s i:   17 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-03 03:30:18.878 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:18.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:18.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:18.982 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:18.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,729]>
2015-12-03 03:30:20.849 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:20.850 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:20.869 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:20.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:20.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:21.067 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:21.070 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:21.097 INFO  o.d.e.strategy.ExplorationStrategy         1m  8s /   2m  0s i:   18 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/LocatingButton"/[720,70]>
2015-12-03 03:30:21.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:21.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:21.191 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:21.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:21.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/LocatingButton"/[720,70]>
2015-12-03 03:30:23.079 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:23.079 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:23.094 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:23.096 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:23.210 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:23.320 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:23.323 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:23.350 INFO  o.d.e.strategy.ExplorationStrategy         1m 10s /   2m  0s i:   19 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomIn"/[745,1158]>
2015-12-03 03:30:23.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:23.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:23.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:23.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:23.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomIn"/[745,1158]>
2015-12-03 03:30:24.803 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:24.803 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:24.849 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-03 03:30:24.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:24.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:25.075 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:25.078 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:25.114 INFO  o.d.e.strategy.ExplorationStrategy         1m 12s /   2m  0s i:   20 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-03 03:30:25.119 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:25.120 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:25.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:25.285 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:30:25.288 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,67]>
2015-12-03 03:30:27.386 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:27.386 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:27.440 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-03 03:30:27.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:27.576 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:27.660 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:27.663 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:27.689 INFO  o.d.e.strategy.ExplorationStrategy         1m 15s /   2m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"Welt"/"com.ptvag.android.adacgasprices:id/WorldButton"/[164,66]>
2015-12-03 03:30:27.692 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:27.693 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:27.774 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:27.808 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-03 03:30:27.814 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Welt"/"com.ptvag.android.adacgasprices:id/WorldButton"/[164,66]>
2015-12-03 03:30:29.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:29.659 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:29.719 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 19
2015-12-03 03:30:29.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:29.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:29.932 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:29.935 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=22, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:29.970 INFO  o.d.e.strategy.ExplorationStrategy         1m 17s /   2m  0s i:   22 <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,130]>
2015-12-03 03:30:29.975 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:29.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:30.079 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:30.103 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:30.106 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Adresse suchen"/"com.ptvag.android.adacgasprices:id/TextView"/[287,130]>
2015-12-03 03:30:31.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:31.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:31.469 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:31.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:31.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:31.704 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:31.707 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:31.736 INFO  o.d.e.strategy.ExplorationStrategy         1m 19s /   2m  0s i:   23 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-03 03:30:31.739 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:31.741 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:31.813 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:31.832 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:31.837 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,133]>
2015-12-03 03:30:34.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:34.199 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:34.219 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:34.221 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:34.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:34.414 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:34.417 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:34.451 INFO  o.d.e.strategy.ExplorationStrategy         1m 21s /   2m  0s i:   24 <ExplAct LC? 0 Wdgt:TextView/"Aktueller Standort"/"android:id/text1"/[401,524]>
2015-12-03 03:30:34.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:34.457 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:34.555 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:34.571 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:34.574 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Aktueller Standort"/"android:id/text1"/[401,524]>
2015-12-03 03:30:36.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:36.659 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:36.678 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:36.680 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:36.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:36.860 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:36.863 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:36.891 INFO  o.d.e.strategy.ExplorationStrategy         1m 24s /   2m  0s i:   25 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,687]>
2015-12-03 03:30:36.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:36.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:36.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:37.012 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:37.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button3"/[401,687]>
2015-12-03 03:30:38.881 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:38.882 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:38.901 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:38.903 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:38.989 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:39.094 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:39.097 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:39.125 INFO  o.d.e.strategy.ExplorationStrategy         1m 26s /   2m  0s i:   26 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomOut"/[664,1158]>
2015-12-03 03:30:39.128 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:39.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:39.220 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:39.241 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:39.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/ZoomOut"/[664,1158]>
2015-12-03 03:30:40.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:40.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:40.620 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:30:40.621 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:40.717 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:40.807 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:40.810 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 22}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:40.839 INFO  o.d.e.strategy.ExplorationStrategy         1m 28s /   2m  0s i:   27 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,70]>
2015-12-03 03:30:40.844 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:40.845 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:40.935 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:40.953 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:40.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.ptvag.android.adacgasprices:id/BookmarksButton"/[600,70]>
2015-12-03 03:30:42.999 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:42.999 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:43.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:43.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:43.100 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:43.198 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:43.200 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:43.228 INFO  o.d.e.strategy.ExplorationStrategy         1m 30s /   2m  0s i:   28 <ExplAct LC? 0 Wdgt:TextView/"Kontakte"/"android:id/text1"/[401,782]>
2015-12-03 03:30:43.232 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:43.238 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:30:43.328 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:43.345 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:30:43.350 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Kontakte"/"android:id/text1"/[401,782]>
2015-12-03 03:30:45.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:30:45.908 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:30:45.939 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:30:45.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:30:46.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:30:46.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:30:46.127 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.contacts. Widgets# 16}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:30:46.142 INFO  o.d.e.strategy.ExplorationStrategy         1m 33s /   2m  0s i:   29 <ExplAct Reset app>
2015-12-03 03:30:46.145 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:30:46.146 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ptvag.android.adacgasprices
2015-12-03 03:31:12.370 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:31:12.375 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:31:12.470 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:31:22.073 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:31:22.125 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:31:22.126 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:31:24.184 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:31:24.185 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:31:24.187 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:31:14.692
2015-12-03 03:31:24.188 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:31:24.306 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:31:24.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:31:24.413 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 66
2015-12-03 03:31:24.414 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:31:24.568 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:31:24.571 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ptvag.android.adacgasprices. Widgets# 14}, DeviceLogs{apiLogs#=66, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:31:24.582 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:31:24.586 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:31:24.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device)
2015-12-03 03:31:24.592 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:31:24.686 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:31:24.706 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:31:24.708 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:31:24.708 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ptvag.android.adacgasprices}
2015-12-03 03:31:25.797 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:31:25.874 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:31:25.877 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:31:25.878 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:31:26.008 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:31:26.084 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ptvag.android.adacgasprices_v1.3.3-inlined.apk, device) - DONE
2015-12-03 03:31:55.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:31:55.587 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-03 03:32:21.176 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:21.180 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:32:21.270 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:32:33.682 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:32:33.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:32:33.734 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:32:35.792 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:32:35.794 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:32:35.796 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:32:23.492
2015-12-03 03:32:35.797 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:32:35.905 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:32:35.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:35.955 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 03:32:35.957 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:32:36.107 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:36.113 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:36.139 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   2m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-03 03:32:36.144 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:36.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:32:36.233 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:36.255 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:36.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-03 03:32:38.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:32:38.801 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:38.844 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:32:38.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:32:39.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:32:39.219 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:39.222 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:39.249 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   2m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-03 03:32:39.254 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:39.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:32:39.343 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:39.363 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:39.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-03 03:32:41.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:32:41.722 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:41.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:41.739 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:32:41.911 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:32:42.014 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:42.017 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:42.045 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   2m  0s i:    4 <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/settings"/[672,70]>
2015-12-03 03:32:42.049 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:42.050 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:32:42.133 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:42.155 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:42.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/settings"/[672,70]>
2015-12-03 03:32:44.225 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:32:44.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:44.262 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:32:44.263 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:32:44.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:32:44.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:44.462 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:44.493 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   2m  0s i:    5 <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-03 03:32:44.500 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:44.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:32:44.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:44.612 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:44.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-03 03:32:46.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:32:46.656 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:46.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:46.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:32:46.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:32:46.848 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:46.852 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:46.880 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   2m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,761]>
2015-12-03 03:32:46.883 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:46.884 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:32:46.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:46.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:32:46.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,761]>
2015-12-03 03:32:50.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:32:50.902 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:32:50.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:32:50.939 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:32:51.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:32:51.504 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:32:51.507 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.settings. Widgets# 81}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:32:51.525 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   2m  0s i:    7 <ExplAct Reset app>
2015-12-03 03:32:51.530 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:32:51.530 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-03 03:33:19.709 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:33:19.713 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:33:19.793 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:33:30.704 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:33:30.756 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:33:30.756 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:33:32.814 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:33:32.815 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:33:32.818 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:33:21.712
2015-12-03 03:33:32.818 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:33:32.921 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:33:32.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:33:32.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 03:33:32.973 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:33:33.114 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:33:33.118 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:33:33.146 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   2m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-03 03:33:33.151 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:33:33.152 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:33:33.238 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:33:33.257 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:33:33.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Enable Emoji Keyboard"/"com.qisiemoji.inputmethod:id/step1"/[400,598]>
2015-12-03 03:33:35.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:33:35.313 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:33:35.330 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:33:35.331 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:33:35.408 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:33:35.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:33:35.506 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:33:35.523 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   2m  0s i:    9 <ExplAct Reset app>
2015-12-03 03:33:35.529 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:33:35.529 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-03 03:34:01.862 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:01.866 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:34:01.943 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:34:13.069 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:34:13.124 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:34:13.125 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:34:15.182 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:34:15.183 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:34:15.186 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:34:03.602
2015-12-03 03:34:15.186 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:34:15.301 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:34:15.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:15.370 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 03:34:15.371 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:34:15.505 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:15.508 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:15.538 INFO  o.d.e.strategy.ExplorationStrategy         1m 39s /   2m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-03 03:34:15.542 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:15.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:15.634 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:15.650 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:15.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Close"/"com.qisiemoji.inputmethod:id/close"/[400,728]>
2015-12-03 03:34:17.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:17.859 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:17.890 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-03 03:34:17.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:18.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:18.277 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:18.280 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:18.308 INFO  o.d.e.strategy.ExplorationStrategy         1m 42s /   2m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[593,344]>
2015-12-03 03:34:18.313 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:18.314 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:18.405 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:18.422 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:18.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[593,344]>
2015-12-03 03:34:20.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:20.784 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:20.803 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:20.804 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:20.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:21.090 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:21.093 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:21.122 INFO  o.d.e.strategy.ExplorationStrategy         1m 45s /   2m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"Local"/""/[199,138]>
2015-12-03 03:34:21.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:21.127 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:21.215 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:21.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:21.237 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Local"/""/[199,138]>
2015-12-03 03:34:22.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:22.594 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:22.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:22.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:22.805 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:22.900 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:22.904 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:22.935 INFO  o.d.e.strategy.ExplorationStrategy         1m 46s /   2m  0s i:   13 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,344]>
2015-12-03 03:34:22.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:22.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:23.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:23.056 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:23.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,344]>
2015-12-03 03:34:25.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:25.026 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:25.043 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:25.045 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:25.230 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:25.326 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:25.331 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:25.364 INFO  o.d.e.strategy.ExplorationStrategy         1m 49s /   2m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,695]>
2015-12-03 03:34:25.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:25.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:25.463 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:25.484 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:25.489 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[206,695]>
2015-12-03 03:34:27.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:27.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:27.467 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:27.469 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:27.659 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:27.752 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:27.756 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:27.793 INFO  o.d.e.strategy.ExplorationStrategy         1m 51s /   2m  0s i:   15 <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-03 03:34:27.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:27.800 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:27.883 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:27.899 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:27.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"OnLine"/""/[600,138]>
2015-12-03 03:34:30.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:30.045 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:30.062 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:30.063 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:30.216 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:30.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:30.312 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:30.341 INFO  o.d.e.strategy.ExplorationStrategy         1m 54s /   2m  0s i:   16 <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/share"/[757,70]>
2015-12-03 03:34:30.347 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:30.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-03 03:34:30.436 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:30.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:34:30.458 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.qisiemoji.inputmethod:id/share"/[757,70]>
2015-12-03 03:34:33.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-03 03:34:33.407 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:33.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-03 03:34:33.445 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-03 03:34:33.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-03 03:34:33.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:34:33.759 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{android. Widgets# 49}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-03 03:34:33.780 INFO  o.d.e.strategy.ExplorationStrategy         1m 57s /   2m  0s i:   17 <ExplAct Reset app>
2015-12-03 03:34:33.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:34:33.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.qisiemoji.inputmethod
2015-12-03 03:34:59.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:34:59.797 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:34:59.896 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:35:10.591 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:35:10.647 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:35:10.647 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:35:12.700 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:35:12.702 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:35:12.705 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:35:01.582
2015-12-03 03:35:12.705 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:35:12.806 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:35:12.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:35:12.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-03 03:35:12.868 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-03 03:35:13.012 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:35:13.015 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.qisiemoji.inputmethod. Widgets# 12}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-03 03:35:13.027 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-03 03:35:13.031 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-03 03:35:13.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device)
2015-12-03 03:35:13.038 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-03 03:35:13.124 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:35:13.146 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-03 03:35:13.147 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-03 03:35:13.148 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.qisiemoji.inputmethod}
2015-12-03 03:35:14.450 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-03 03:35:14.521 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:35:14.524 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:35:14.525 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-03 03:35:14.633 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-03 03:35:14.718 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.qisiemoji.inputmethod_v2.4-inlined.apk, device) - DONE
2015-12-03 03:35:24.076 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.rhmsoft.fm_v1.17.0-inlined.apk, device)
2015-12-03 03:35:24.076 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.rhmsoft.fm
2015-12-03 03:35:49.771 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-03 03:35:49.775 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-03 03:35:49.867 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-03 03:36:02.704 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-03 03:36:02.744 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-03 03:36:02.745 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-03 03:36:04.787 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-03 03:36:04.789 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-03 03:36:04.792 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-03T03:35:51.632
2015-12-03 03:36:04.793 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-03 03:36:04.875 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-03 03:36:04.875 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
