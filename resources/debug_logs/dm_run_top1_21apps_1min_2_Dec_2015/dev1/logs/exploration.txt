2015-12-02 16:10:27.918 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:27.919 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-02 16:10:33.877 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:33.886 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:10:33.999 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:10:46.737 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:10:46.789 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:10:46.789 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:10:48.843 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:10:48.844 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:10:48.866 TRACE o.d.exploration.device.DeviceTimeDiff    computeDiff(device) result:
Current time   : 2015-12-02 16:10:48.864
Device time    : 2015-12-02 16:07:47.703
Resulting diff : PT-3M-1.161S
2015-12-02 16:10:48.869 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:10:36.216
2015-12-02 16:10:48.869 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:10:48.989 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:10:48.989 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:49.045 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-02 16:10:49.045 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:10:49.190 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:49.242 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:49.282 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-02 16:10:49.285 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:49.285 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:49.375 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:49.393 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:49.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-02 16:10:51.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:10:51.312 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:51.323 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:51.323 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:10:51.400 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:10:51.483 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:51.483 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:51.489 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-02 16:10:51.490 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:51.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:51.574 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:51.585 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:51.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-02 16:10:54.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:10:54.177 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:54.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:54.192 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:10:54.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:10:54.761 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:54.761 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:54.766 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-02 16:10:54.767 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:54.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:54.848 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:54.864 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:54.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-02 16:10:56.304 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:10:56.304 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:56.320 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:56.320 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:10:56.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:10:56.494 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:56.495 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:56.498 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:10:56.498 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:56.498 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:56.575 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:56.589 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:56.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:10:57.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:10:57.947 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:57.971 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:10:57.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:10:58.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:10:58.124 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:58.124 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:58.126 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-02 16:10:58.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:58.126 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:58.202 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:58.218 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:58.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"animaonline.android.wikiexplorer:id/search_close_btn"/[754,69]>
2015-12-02 16:10:59.576 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:10:59.576 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:59.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:59.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:10:59.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:10:59.735 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:10:59.736 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:10:59.738 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:10:59.738 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:10:59.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:10:59.822 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:10:59.836 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:10:59.836 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:01.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:01.691 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:01.714 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:11:01.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:01.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:01.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:01.888 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:01.890 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-02 16:11:01.890 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:01.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:01.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:01.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:01.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[125,70]>
2015-12-02 16:11:04.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:04.061 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:04.078 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:04.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:04.160 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:04.237 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:04.239 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:04.242 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-02 16:11:04.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:04.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:04.314 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:04.325 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:04.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"de"/"android:id/text1"/[128,270]>
2015-12-02 16:11:06.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:06.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:06.418 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:06.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:06.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:06.582 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:06.583 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:06.585 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:06.586 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:06.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:06.663 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:06.675 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:06.676 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:08.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:08.538 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:08.580 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:11:08.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:08.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:08.778 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:08.778 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:08.780 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-02 16:11:08.781 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:08.781 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:08.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:08.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:08.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/""/[103,70]>
2015-12-02 16:11:10.948 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:10.948 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:10.965 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:10.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:11.041 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:11.113 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:11.113 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 19}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:11.117 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-02 16:11:11.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:11.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:11.191 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:11.205 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:11.205 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"es"/"android:id/text1"/[106,400]>
2015-12-02 16:11:13.280 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:13.280 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:13.297 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:13.297 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:13.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:13.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:13.445 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:13.447 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:13.447 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:13.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:13.515 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:13.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:13.531 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:15.388 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:15.388 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:15.412 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:11:15.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:15.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:15.541 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:15.541 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:15.544 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-02 16:11:15.544 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:15.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:15.614 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:15.626 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:15.626 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-02 16:11:17.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:17.688 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:17.707 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:17.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:17.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:17.868 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:17.868 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:17.870 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-02 16:11:17.870 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:17.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:17.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:17.958 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:17.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Random article"/"animaonline.android.wikiexplorer:id/buttonAddRandom"/[144,419]>
2015-12-02 16:11:19.439 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:19.439 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:19.455 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:19.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:19.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:19.584 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:19.584 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:19.586 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:11:19.586 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:11:19.587 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:19.587 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package animaonline.android.wikiexplorer
2015-12-02 16:11:25.420 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:25.423 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:11:25.500 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:11:37.606 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:11:37.657 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:11:37.657 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:11:39.707 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:11:39.707 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:11:39.707 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:11:28.016
2015-12-02 16:11:39.707 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:11:39.806 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:11:39.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:39.837 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-02 16:11:39.837 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:11:39.968 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:39.969 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:39.974 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:   17 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-02 16:11:39.974 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:39.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:40.036 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:40.048 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:40.049 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,626]>
2015-12-02 16:11:41.665 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:41.665 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:41.681 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:41.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:41.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:41.801 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:41.802 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 14}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:41.805 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   1m  0s i:   18 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-02 16:11:41.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:41.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:41.877 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:41.892 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:41.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,1158]>
2015-12-02 16:11:43.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:43.230 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:43.248 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:43.248 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:43.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:43.408 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:43.409 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 28}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:43.412 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   1m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-02 16:11:43.412 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:43.412 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:43.486 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:43.501 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:43.501 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"animaonline.android.wikiexplorer:id/menu_search"/[757,70]>
2015-12-02 16:11:45.909 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:45.909 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:45.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:45.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:46.069 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:46.137 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:46.137 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:46.140 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   1m  0s i:   20 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-02 16:11:46.141 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:46.141 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:46.236 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:46.250 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:46.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[32,70]>
2015-12-02 16:11:48.217 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:48.217 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:48.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:48.235 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:48.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:48.370 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:48.370 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:48.372 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:   21 <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:48.372 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:48.372 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:11:48.451 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:48.465 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:48.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"animaonline.android.wikiexplorer:id/showcase_button"/[721,1157]>
2015-12-02 16:11:49.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:11:49.965 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:49.983 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:49.983 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:11:50.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:11:50.107 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:11:50.107 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{animaonline.android.wikiexplorer. Widgets# 30}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:11:50.108 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:11:50.113 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:11:50.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device)
2015-12-02 16:11:50.117 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:11:50.188 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:50.202 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:11:50.202 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:11:50.202 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package animaonline.android.wikiexplorer}
2015-12-02 16:11:51.308 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:11:51.371 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:11:51.374 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:11:51.374 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:11:51.436 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:11:51.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=animaonline.android.wikiexplorer_v1.5.5-inlined.apk, device) - DONE
2015-12-02 16:12:00.303 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:00.303 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-02 16:12:05.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:05.729 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:12:05.794 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:12:16.263 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:12:16.309 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:12:16.309 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:12:18.363 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:12:18.363 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:12:18.363 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:12:08.176
2015-12-02 16:12:18.363 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:12:18.472 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:12:18.472 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:18.526 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-02 16:12:18.526 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:12:18.632 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:18.632 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=26, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:18.633 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-02 16:12:18.634 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:18.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:18.711 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:18.722 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:18.723 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/""/[400,602]>
2015-12-02 16:12:20.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:20.278 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:20.295 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:20.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:20.333 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:20.405 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:20.405 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:20.406 INFO  o.d.e.strategy.ExplorationStrategy         0m  1s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-02 16:12:20.407 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:20.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:20.482 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:20.497 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:20.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-02 16:12:22.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:22.429 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:22.450 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:12:22.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:22.521 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:22.589 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:22.589 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:22.591 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:ListView/""/"arlind.Shqip:id/list_channelset"/[400,129]>
2015-12-02 16:12:22.591 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:22.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:22.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:22.682 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:22.683 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"arlind.Shqip:id/list_channelset"/[400,129]>
2015-12-02 16:12:24.863 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:24.863 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:24.882 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:24.882 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:24.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:25.001 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:25.001 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:25.002 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-02 16:12:25.003 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:25.003 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:25.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:25.097 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:25.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-02 16:12:27.172 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:27.172 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:27.196 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:12:27.196 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:27.233 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:27.305 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:27.306 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:27.307 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    6 <ExplAct Reset app>
2015-12-02 16:12:27.307 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:27.307 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-02 16:12:33.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:33.160 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:12:33.229 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:12:43.661 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:12:43.712 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:12:43.712 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:12:45.766 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:12:45.766 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:12:45.766 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:12:35.606
2015-12-02 16:12:45.766 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:12:45.852 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:12:45.852 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:45.919 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-02 16:12:45.919 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:12:46.022 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:46.022 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=26, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:46.023 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-02 16:12:46.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:46.024 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:46.103 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:46.113 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:46.113 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[21,21]>
2015-12-02 16:12:48.034 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:48.034 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:48.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:12:48.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:48.118 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:48.186 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:48.186 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:48.187 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-02 16:12:48.188 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:48.188 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:12:48.278 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:48.291 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:12:48.291 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"arlind.Shqip:id/click"/[400,65]>
2015-12-02 16:12:50.363 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:12:50.363 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:50.383 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:12:50.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:12:50.462 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:12:50.521 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:12:50.521 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:12:50.522 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   1m  0s i:    9 <ExplAct Reset app>
2015-12-02 16:12:50.522 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:12:50.522 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package arlind.Shqip
2015-12-02 16:12:56.505 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:12:56.508 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:12:56.576 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:13:06.921 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:13:06.973 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:13:06.973 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:13:09.013 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:13:09.013 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:13:09.013 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:12:58.736
2015-12-02 16:13:09.013 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:13:09.114 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:13:09.114 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:09.172 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-02 16:13:09.172 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:13:09.323 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:09.323 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 7}, DeviceLogs{apiLogs#=26, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:09.324 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-02 16:13:09.325 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:09.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:09.409 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:09.424 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:09.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[21,21]>
2015-12-02 16:13:11.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:13:11.348 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:11.368 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:13:11.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:13:11.450 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:13:11.513 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:11.513 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 19}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:11.514 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"Info"/"android:id/text1"/[400,129]>
2015-12-02 16:13:11.514 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:11.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:11.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:11.600 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:11.600 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Info"/"android:id/text1"/[400,129]>
2015-12-02 16:13:13.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:13:13.952 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:13.968 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:13.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:13:14.167 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:13:14.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:14.250 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:14.252 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:View/""/""/[543,464]>
2015-12-02 16:13:14.252 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:14.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:14.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:14.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:14.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[543,464]>
2015-12-02 16:13:16.344 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:13:16.344 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:16.364 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:16.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:13:16.446 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:13:16.521 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:16.521 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:16.524 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[209,874]>
2015-12-02 16:13:16.524 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:16.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:16.601 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:16.615 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:16.615 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[209,874]>
2015-12-02 16:13:17.952 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:13:17.952 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:17.968 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:17.968 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:13:18.055 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:13:18.126 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:18.126 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:18.129 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:View/""/""/[399,125]>
2015-12-02 16:13:18.129 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:18.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:18.201 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:18.213 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:18.213 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,125]>
2015-12-02 16:13:20.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:13:20.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:20.856 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:20.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:13:20.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:13:21.055 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:21.055 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{arlind.Shqip. Widgets# 77}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:21.057 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:13:21.057 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:13:21.058 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device)
2015-12-02 16:13:21.058 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:13:21.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:21.154 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:21.154 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:13:21.154 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package arlind.Shqip}
2015-12-02 16:13:22.052 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:13:22.131 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:22.135 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:13:22.135 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:13:22.208 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:13:22.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=arlind.Shqip_v2.0-inlined.apk, device) - DONE
2015-12-02 16:13:37.862 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:13:37.862 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-02 16:13:43.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:43.550 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:13:43.617 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:13:56.407 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:13:56.454 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:13:56.454 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:13:58.504 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:13:58.504 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:13:58.505 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:13:45.636
2015-12-02 16:13:58.505 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:13:58.618 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:13:58.618 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:58.659 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:13:58.659 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:13:58.822 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:13:58.823 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:13:58.824 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-02 16:13:58.824 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:13:58.824 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:13:58.883 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:13:58.895 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:13:58.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-02 16:14:00.812 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:00.812 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:00.827 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:00.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:00.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:01.024 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:01.024 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:01.026 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-02 16:14:01.026 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:01.026 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:01.098 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:01.111 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:01.111 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[398,939]>
2015-12-02 16:14:03.043 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:03.043 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:03.060 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:03.060 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:03.139 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:03.208 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:03.208 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:03.209 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-02 16:14:03.209 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:03.209 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:03.289 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:03.308 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:03.309 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-02 16:14:04.646 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:04.646 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:04.662 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:04.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:04.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:04.818 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:04.819 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:04.821 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-02 16:14:04.821 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:04.821 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:04.896 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:04.912 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:04.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,150]>
2015-12-02 16:14:06.774 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:06.774 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:06.791 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:06.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:06.870 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:06.931 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:06.931 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:06.932 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-02 16:14:06.932 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:06.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:07.007 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:07.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:07.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-02 16:14:08.908 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:08.908 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:08.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:08.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:09.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:09.102 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:09.102 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:09.103 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-02 16:14:09.104 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:09.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:09.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:09.200 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:09.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[109,70]>
2015-12-02 16:14:11.170 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:11.170 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:11.189 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:11.189 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:11.254 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:11.327 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:11.327 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:11.328 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-02 16:14:11.329 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:11.329 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:11.409 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:11.422 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:11.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.adobe.reader:id/shareButton"/[400,409]>
2015-12-02 16:14:16.039 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:16.039 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:16.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:14:16.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:16.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:16.181 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:16.181 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:16.182 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   1m  0s i:    9 <ExplAct Reset app>
2015-12-02 16:14:16.183 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:16.183 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.adobe.reader
2015-12-02 16:14:23.778 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:23.781 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:14:23.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:14:36.517 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:14:36.562 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:14:36.562 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:14:38.605 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:14:38.605 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:14:38.605 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:14:26.356
2015-12-02 16:14:38.605 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:14:38.706 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:14:38.706 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:38.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:14:38.748 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:14:38.899 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:38.899 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 37}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:38.900 INFO  o.d.e.strategy.ExplorationStrategy         0m 40s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-02 16:14:38.900 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:38.900 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:38.978 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:38.992 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:38.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"com.adobe.reader:id/help_listView"/[400,235]>
2015-12-02 16:14:40.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:40.954 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:40.970 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:40.970 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:41.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:41.115 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:41.115 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:41.117 INFO  o.d.e.strategy.ExplorationStrategy         0m 42s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-02 16:14:41.117 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:41.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:41.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:41.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:41.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,871]>
2015-12-02 16:14:43.051 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:43.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:43.066 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:43.066 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:43.150 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:43.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:43.217 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:43.218 INFO  o.d.e.strategy.ExplorationStrategy         0m 44s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-02 16:14:43.219 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:43.219 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:43.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:43.312 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:43.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,290]>
2015-12-02 16:14:45.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:45.159 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:45.177 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:45.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:45.259 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:45.330 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:45.331 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:45.332 INFO  o.d.e.strategy.ExplorationStrategy         0m 46s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-02 16:14:45.332 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:45.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:45.406 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:45.420 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:45.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,205]>
2015-12-02 16:14:47.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:47.302 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:47.317 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:47.317 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:47.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:47.554 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:47.554 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:47.556 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-02 16:14:47.556 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:47.556 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:47.627 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:47.642 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:47.642 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,182]>
2015-12-02 16:14:48.993 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:48.993 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:49.006 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:49.006 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:49.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:49.201 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:49.201 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 60}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:49.202 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:14:49.203 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:49.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:49.281 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:49.294 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:49.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:14:51.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:51.341 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:51.360 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:51.360 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:51.398 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:51.468 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:51.468 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 8}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:51.470 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   1m  0s i:   16 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-02 16:14:51.470 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:51.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:51.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:51.559 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:51.560 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[655,140]>
2015-12-02 16:14:53.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:53.922 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:53.943 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:14:53.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:54.032 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:54.103 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:54.103 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:54.105 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   1m  0s i:   17 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-02 16:14:54.105 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:54.105 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:54.180 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:54.193 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:54.193 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,423]>
2015-12-02 16:14:56.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:56.222 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:56.240 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:56.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:56.312 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:56.374 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:56.375 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:56.376 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   1m  0s i:   18 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-02 16:14:56.376 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:56.376 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:14:56.448 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:56.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:56.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,330]>
2015-12-02 16:14:58.664 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:14:58.664 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:58.688 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:14:58.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:14:58.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:14:58.854 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:14:58.855 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.adobe.reader. Widgets# 35}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:14:58.855 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:14:58.856 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:14:58.856 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device)
2015-12-02 16:14:58.856 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:14:58.933 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:58.944 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:14:58.944 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:14:58.945 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.adobe.reader}
2015-12-02 16:14:59.793 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:14:59.866 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:14:59.869 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:14:59.869 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:15:00.078 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:15:00.141 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.adobe.reader_v11.5.0.1-inlined.apk, device) - DONE
2015-12-02 16:15:16.642 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:16.642 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-02 16:15:21.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:21.906 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:15:21.971 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:15:35.837 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:15:35.913 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:15:35.914 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:15:37.963 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:15:37.963 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:15:37.964 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:15:24.476
2015-12-02 16:15:37.964 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:15:38.070 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:15:38.070 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:38.236 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:15:38.236 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:15:38.563 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:38.564 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:38.565 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-02 16:15:38.565 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:38.565 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:38.649 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:38.671 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:38.671 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CompoundButton/""/"com.almalence.opencam:id/switch_dromode"/[704,163]>
2015-12-02 16:15:40.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:40.950 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:40.965 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:40.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:41.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:41.154 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:41.154 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 56}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:41.155 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-02 16:15:41.156 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:41.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:41.219 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:41.234 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:41.234 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-02 16:15:44.594 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:44.595 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:44.608 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:44.608 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:45.262 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:45.343 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:45.343 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 95}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:45.344 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-02 16:15:45.345 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:45.345 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:45.413 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:45.425 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:45.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-02 16:15:49.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:49.373 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:49.432 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:15:49.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:49.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:49.626 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:49.626 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 40}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:49.627 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-02 16:15:49.628 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:49.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:49.707 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:49.726 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:49.727 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonSelectMode"/[667,1155]>
2015-12-02 16:15:52.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:52.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:52.417 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:52.417 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:52.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:52.931 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:52.931 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 99}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:52.933 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-02 16:15:52.933 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:52.933 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:53.005 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:53.023 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:53.023 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.almalence.opencam:id/modeSelectLayout"/[697,606]>
2015-12-02 16:15:54.860 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:54.860 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:54.874 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:54.874 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:54.992 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:55.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:55.060 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:55.062 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-02 16:15:55.062 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:55.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:55.163 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:55.175 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:55.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonCaptureImage"/[760,1025]>
2015-12-02 16:15:57.566 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:15:57.566 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:57.585 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:15:57.585 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:15:58.122 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:15:58.209 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:15:58.209 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 37}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:15:58.211 INFO  o.d.e.strategy.ExplorationStrategy         0m 19s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-02 16:15:58.211 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:15:58.211 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:15:58.293 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:15:58.311 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:15:58.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.almalence.opencam:id/buttonPauseVideo"/[39,1025]>
2015-12-02 16:16:00.709 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:00.709 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:00.722 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:00.722 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:00.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:00.891 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:00.891 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:00.893 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-02 16:16:00.893 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:00.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:00.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:00.973 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:00.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.1"/"android:id/numberpicker_input"/[325,633]>
2015-12-02 16:16:02.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:02.869 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:02.889 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:02.889 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:02.965 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:03.043 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:03.043 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:03.045 INFO  o.d.e.strategy.ExplorationStrategy         0m 24s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-02 16:16:03.045 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:03.045 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:03.115 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:03.132 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:03.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"seconds"/"android:id/numberpicker_input"/[469,633]>
2015-12-02 16:16:04.586 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:04.586 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:04.606 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:04.606 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:04.679 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:04.756 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:04.757 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:04.758 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-02 16:16:04.758 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:04.758 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:04.832 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:04.851 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:04.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"minutes"/""/[469,709]>
2015-12-02 16:16:06.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:06.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:06.210 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:06.210 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:06.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:06.337 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:06.338 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:06.339 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-02 16:16:06.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:06.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:06.416 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:06.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:06.431 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"hours"/""/[469,709]>
2015-12-02 16:16:07.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:07.767 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:07.786 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:07.786 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:07.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:07.947 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:07.948 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:07.949 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-02 16:16:07.950 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:07.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:08.024 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:08.040 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:08.040 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"0.2"/""/[325,709]>
2015-12-02 16:16:09.743 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:09.743 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:09.759 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:09.759 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:09.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:09.865 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:09.866 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:09.867 INFO  o.d.e.strategy.ExplorationStrategy         0m 31s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-02 16:16:09.868 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:09.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:09.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:09.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:09.957 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"hours"/"android:id/numberpicker_input"/[469,633]>
2015-12-02 16:16:11.801 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:11.801 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:11.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:11.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:11.886 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:11.958 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:11.958 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:11.960 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-02 16:16:11.961 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:11.961 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:12.031 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:12.044 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:12.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"0.2"/"android:id/numberpicker_input"/[325,633]>
2015-12-02 16:16:13.932 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:13.932 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:13.947 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:13.947 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:14.851 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:14.914 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:14.914 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 17}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:14.915 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:16:14.916 INFO  o.d.e.strategy.ExplorationStrategy         0m 36s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:16:14.916 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:14.916 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.almalence.opencam
2015-12-02 16:16:21.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:21.184 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:16:21.251 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:16:34.465 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:16:34.507 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:16:34.508 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:16:36.567 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:16:36.567 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:16:36.567 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:16:23.616
2015-12-02 16:16:36.567 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:16:36.661 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:16:36.661 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:36.713 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:16:36.713 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:16:36.915 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:36.915 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 46}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:36.917 INFO  o.d.e.strategy.ExplorationStrategy         0m 58s /   1m  0s i:   17 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-02 16:16:36.917 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:36.918 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:16:37.005 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:37.020 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:37.021 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.almalence.opencam:id/panelHandle"/[400,106]>
2015-12-02 16:16:38.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:16:38.856 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:38.871 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:38.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:16:38.959 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:16:39.027 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:39.028 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.almalence.opencam. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:16:39.029 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:16:39.029 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:16:39.029 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device)
2015-12-02 16:16:39.029 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:16:39.104 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:39.118 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:16:39.118 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:16:39.118 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.almalence.opencam}
2015-12-02 16:16:40.231 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:16:40.309 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:40.312 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:16:40.312 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:16:40.364 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:16:40.439 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.almalence.opencam_v3.24-inlined.apk, device) - DONE
2015-12-02 16:16:52.825 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:16:52.825 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-02 16:16:58.137 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:16:58.140 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:16:58.205 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:17:09.570 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:17:09.615 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:17:09.615 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:17:11.659 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:17:11.659 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:17:11.660 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:17:00.236
2015-12-02 16:17:11.660 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:17:11.740 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:17:11.741 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:11.777 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:17:11.777 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:17:11.910 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:11.911 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:11.912 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-02 16:17:11.912 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:11.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:11.985 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:11.997 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:11.997 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.baviux.pillreminder:id/notes_menu_item"/[587,70]>
2015-12-02 16:17:15.326 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:15.326 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:15.351 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:17:15.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:15.540 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:15.612 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:15.612 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 37}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:15.614 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[793,1114]>
2015-12-02 16:17:15.614 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:15.614 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:15.693 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:15.709 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:15.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[793,1114]>
2015-12-02 16:17:17.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:17.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:17.220 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:17.220 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:17.281 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:17.378 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:17.378 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 37}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:17.379 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[400,1171]>
2015-12-02 16:17:17.379 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:17.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:17.449 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:17.461 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:17.461 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,1171]>
2015-12-02 16:17:23.190 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:23.190 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:23.207 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:17:23.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:23.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:23.335 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:23.335 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:23.336 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   1m  0s i:    5 <ExplAct Reset app>
2015-12-02 16:17:23.336 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:23.336 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-02 16:17:32.047 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:32.050 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:17:32.117 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:17:43.990 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:17:44.027 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:17:44.027 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:17:46.074 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:17:46.074 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:17:46.075 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:17:34.436
2015-12-02 16:17:46.075 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:17:46.157 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:17:46.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:46.198 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:17:46.198 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:17:46.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:46.319 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:46.322 INFO  o.d.e.strategy.ExplorationStrategy         0m 34s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Go to settings menu"/"com.baviux.pillreminder:id/settingsButton"/[399,686]>
2015-12-02 16:17:46.322 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:46.322 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:46.389 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:46.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:46.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Go to settings menu"/"com.baviux.pillreminder:id/settingsButton"/[399,686]>
2015-12-02 16:17:48.577 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:48.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:48.601 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:17:48.601 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:48.653 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:48.724 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:48.724 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 15}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:48.725 INFO  o.d.e.strategy.ExplorationStrategy         0m 36s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:Button/"Close"/"android:id/button1"/[400,719]>
2015-12-02 16:17:48.725 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:48.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:48.801 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:48.818 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:48.818 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Close"/"android:id/button1"/[400,719]>
2015-12-02 16:17:50.679 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:50.680 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:50.691 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:50.691 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:50.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:51.050 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:51.050 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:51.051 INFO  o.d.e.strategy.ExplorationStrategy         0m 39s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,681]>
2015-12-02 16:17:51.052 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:51.052 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:51.129 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:51.143 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:51.143 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,681]>
2015-12-02 16:17:53.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:53.524 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:53.557 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-02 16:17:53.557 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:53.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:53.775 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:53.775 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:53.776 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,681]>
2015-12-02 16:17:53.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:53.777 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:53.854 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:53.866 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:53.867 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,681]>
2015-12-02 16:17:56.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:56.117 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:56.147 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-02 16:17:56.147 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:56.300 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:56.359 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:56.359 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 63}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:56.360 INFO  o.d.e.strategy.ExplorationStrategy         0m 44s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,983]>
2015-12-02 16:17:56.360 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:56.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:56.422 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:56.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:56.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,983]>
2015-12-02 16:17:58.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:17:58.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:58.925 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:17:58.925 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:17:58.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:17:59.037 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:17:59.037 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 15}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:17:59.038 INFO  o.d.e.strategy.ExplorationStrategy         0m 47s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[582,789]>
2015-12-02 16:17:59.038 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:17:59.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:17:59.145 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:17:59.158 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:17:59.159 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[582,789]>
2015-12-02 16:18:01.967 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:18:01.967 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:01.990 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:18:01.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:18:02.058 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:18:02.133 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:02.133 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:18:02.134 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/screenshot03ImageView"/[661,448]>
2015-12-02 16:18:02.134 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:18:02.135 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:18:02.237 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:02.254 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:18:02.254 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/screenshot03ImageView"/[661,448]>
2015-12-02 16:18:04.268 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:18:04.268 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:04.290 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:18:04.290 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:18:04.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:18:04.385 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:04.385 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 4}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:18:04.387 INFO  o.d.e.strategy.ExplorationStrategy         0m 52s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/imageView"/[400,602]>
2015-12-02 16:18:04.387 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:18:04.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:18:04.463 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:04.476 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:18:04.477 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.baviux.pillreminder:id/imageView"/[400,602]>
2015-12-02 16:18:05.808 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:18:05.808 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:05.826 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:18:05.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:18:05.890 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:18:05.961 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:05.961 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:18:05.962 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Buy"/"com.baviux.pillreminder:id/buyButton"/[739,198]>
2015-12-02 16:18:05.962 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:18:05.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:18:06.042 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:06.054 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:18:06.054 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Buy"/"com.baviux.pillreminder:id/buyButton"/[739,198]>
2015-12-02 16:18:07.383 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:18:07.383 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:07.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:18:07.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:18:09.742 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:18:09.816 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:09.816 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.vending. Widgets# 50}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:18:09.817 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   1m  0s i:   15 <ExplAct Reset app>
2015-12-02 16:18:09.817 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:18:09.817 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.baviux.pillreminder
2015-12-02 16:18:19.704 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:19.707 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:18:19.786 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:18:32.213 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:18:32.256 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:18:32.256 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:18:34.296 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:18:34.296 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:18:34.296 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:18:22.026
2015-12-02 16:18:34.296 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:18:34.380 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:18:34.380 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:34.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:18:34.419 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:18:34.543 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:34.543 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.baviux.pillreminder. Widgets# 23}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:18:34.544 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:18:34.545 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:18:34.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device)
2015-12-02 16:18:34.545 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:18:34.619 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:34.631 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:18:34.631 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:18:34.631 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.baviux.pillreminder}
2015-12-02 16:18:35.720 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:18:35.794 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:35.797 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:18:35.797 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:18:35.867 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:18:35.937 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.baviux.pillreminder_v2.1.2-inlined.apk, device) - DONE
2015-12-02 16:18:49.527 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:18:49.527 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-02 16:18:55.848 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:18:55.851 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:18:55.945 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:19:12.046 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:19:12.095 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:19:12.095 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:19:14.149 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:19:14.149 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:19:14.149 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:18:58.116
2015-12-02 16:19:14.149 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:19:14.221 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:19:14.221 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:14.259 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-02 16:19:14.259 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:19:14.412 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:14.412 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:14.413 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-02 16:19:14.413 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:14.413 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:14.487 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:14.503 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:14.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/current_user"/[400,1127]>
2015-12-02 16:19:16.580 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:16.580 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:16.604 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:16.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:16.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:16.733 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:16.733 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:16.734 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-02 16:19:16.734 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:16.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:16.807 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:16.821 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:16.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot Password"/"com.duolingo:id/forgot_password"/[399,422]>
2015-12-02 16:19:18.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:18.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:18.935 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:18.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:18.987 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:19.060 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:19.060 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:19.061 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-02 16:19:19.061 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:19.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:19.181 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:19.193 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:19.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Enter your email address"/"com.duolingo:id/forgot_input_text"/[400,407]>
2015-12-02 16:19:21.028 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:21.028 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:21.044 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:21.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:21.093 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:21.212 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:21.213 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:21.213 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-02 16:19:21.214 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:21.214 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:21.292 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:21.310 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:21.310 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[198,505]>
2015-12-02 16:19:22.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:22.645 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:22.663 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:22.663 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:22.734 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:22.809 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:22.809 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:22.810 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-02 16:19:22.810 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:22.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:22.879 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:22.891 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:22.892 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Sign In"/"com.duolingo:id/bar_title"/[132,70]>
2015-12-02 16:19:25.325 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:25.325 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:25.340 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:25.340 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:25.423 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:25.494 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:25.494 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:25.495 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-02 16:19:25.496 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:25.496 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:25.570 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:25.581 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:25.582 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.duolingo:id/start_learning"/[400,1059]>
2015-12-02 16:19:27.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:27.623 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:27.645 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:27.645 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:27.718 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:27.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:27.784 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 34}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:27.785 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-02 16:19:27.785 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:27.785 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:27.855 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:27.868 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:27.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[400,456]>
2015-12-02 16:19:30.950 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:30.950 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:30.990 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-02 16:19:30.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:32.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:32.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:32.274 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 66}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:32.274 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[122,70]>
2015-12-02 16:19:32.275 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:32.275 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:32.351 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:32.376 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:19:32.377 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[122,70]>
2015-12-02 16:19:34.709 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:34.709 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:34.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-02 16:19:34.748 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:34.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:34.897 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:34.897 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:34.898 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-02 16:19:34.898 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:34.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:34.976 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:34.990 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:34.990 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[642,140]>
2015-12-02 16:19:36.858 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:36.858 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:36.891 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-02 16:19:36.891 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:36.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:37.036 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:37.036 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:37.038 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-02 16:19:37.038 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:37.038 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:37.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:37.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:37.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-02 16:19:38.979 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:38.979 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:39.022 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-02 16:19:39.022 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:39.940 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:40.009 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:40.010 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 40}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:40.011 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[199,368]>
2015-12-02 16:19:40.011 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:40.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:40.082 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:40.096 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:19:40.097 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[199,368]>
2015-12-02 16:19:41.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:41.426 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:41.467 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:19:41.467 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:42.589 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:42.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:42.656 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 72}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:42.658 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,848]>
2015-12-02 16:19:42.658 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:42.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:42.729 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:42.748 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:42.749 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,848]>
2015-12-02 16:19:44.583 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:44.583 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:44.598 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:44.598 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:44.994 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:45.063 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:45.064 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 72}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:45.065 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,754]>
2015-12-02 16:19:45.065 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:45.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:45.138 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:45.157 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:45.157 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[400,754]>
2015-12-02 16:19:46.491 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:46.491 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:46.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:19:46.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:46.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:46.657 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:46.657 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 29}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:46.658 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-02 16:19:46.658 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:46.658 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:19:46.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:46.738 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:19:46.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ActionBar$Tab/""/""/[160,140]>
2015-12-02 16:19:50.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:19:50.870 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:50.917 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-02 16:19:50.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:19:51.517 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:19:51.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:19:51.597 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 69}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:19:51.597 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:19:51.598 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:19:51.598 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:19:51.598 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.duolingo
2015-12-02 16:19:57.422 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:19:57.425 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:19:57.522 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:20:13.680 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:20:13.729 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:20:13.729 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:20:15.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:20:15.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:20:15.778 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:19:59.726
2015-12-02 16:20:15.778 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:20:15.866 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:20:15.866 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:15.898 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-02 16:20:15.898 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:20:16.047 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:20:16.047 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.duolingo. Widgets# 36}, DeviceLogs{apiLogs#=6, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:20:16.048 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:20:16.048 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:20:16.048 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device)
2015-12-02 16:20:16.048 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:20:16.118 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:16.131 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:20:16.131 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:20:16.131 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.duolingo}
2015-12-02 16:20:17.094 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:20:17.158 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:17.161 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:20:17.161 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:20:17.212 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:20:17.270 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.duolingo_v2.7.2-inlined.apk, device) - DONE
2015-12-02 16:20:29.092 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:20:29.092 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-02 16:20:36.791 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:36.794 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:20:36.890 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:20:52.993 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:20:53.042 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:20:53.042 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:20:55.097 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:20:55.097 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:20:55.097 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:20:38.786
2015-12-02 16:20:55.098 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:20:55.182 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:20:55.182 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:55.233 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-02 16:20:55.234 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:20:55.340 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:20:55.340 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=26, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:20:55.341 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-02 16:20:55.341 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:20:55.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:20:55.418 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:55.429 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:20:55.430 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.ebay.kleinanzeigen:id/about"/[400,656]>
2015-12-02 16:20:57.394 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:20:57.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:57.419 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:20:57.419 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:20:57.625 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:20:57.693 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:20:57.694 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:20:57.695 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-02 16:20:57.695 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:20:57.695 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:20:57.773 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:57.786 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:20:57.787 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[44,1192]>
2015-12-02 16:20:59.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:20:59.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:59.673 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:20:59.673 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:20:59.822 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:20:59.895 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:20:59.896 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:20:59.897 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-02 16:20:59.897 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:20:59.897 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:20:59.975 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:20:59.987 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:20:59.988 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,950]>
2015-12-02 16:21:01.859 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:01.859 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:01.878 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:01.878 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:02.008 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:02.084 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:02.084 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 88}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:02.086 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-02 16:21:02.086 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:02.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:02.162 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:02.175 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:02.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[118,642]>
2015-12-02 16:21:05.503 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:05.503 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:05.525 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:21:05.525 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:05.616 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:05.702 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:05.703 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:05.704 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    6 <ExplAct Reset app>
2015-12-02 16:21:05.704 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:05.704 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.kleinanzeigen
2015-12-02 16:21:14.764 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:14.767 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:21:14.837 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:21:30.963 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:21:31.011 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:21:31.011 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:21:33.066 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:21:33.066 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:21:33.066 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:21:17.166
2015-12-02 16:21:33.067 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:21:33.152 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:21:33.153 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:33.223 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 26
2015-12-02 16:21:33.223 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:21:33.352 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:33.352 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 16}, DeviceLogs{apiLogs#=26, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:33.353 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-02 16:21:33.353 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:33.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:33.430 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:33.441 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:33.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"ACCEPT"/"com.ebay.kleinanzeigen:id/menu_accept"/[757,70]>
2015-12-02 16:21:35.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:35.633 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:35.656 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:21:35.656 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:35.712 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:35.777 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:35.778 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 15}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:35.778 INFO  o.d.e.strategy.ExplorationStrategy         0m 40s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-02 16:21:35.779 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:35.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:35.847 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:35.871 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:21:35.872 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Cancel"/"android:id/button2"/[217,706]>
2015-12-02 16:21:37.427 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:37.427 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:37.456 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 6
2015-12-02 16:21:37.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:37.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:37.866 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:37.867 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 127}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:37.868 INFO  o.d.e.strategy.ExplorationStrategy         0m 42s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-02 16:21:37.868 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:37.868 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:37.946 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:37.962 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:37.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[600,676]>
2015-12-02 16:21:40.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:40.698 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:40.725 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:21:40.725 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:40.798 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:40.860 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:40.860 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 29}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:40.861 INFO  o.d.e.strategy.ExplorationStrategy         0m 45s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-02 16:21:40.861 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:40.861 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:40.938 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:40.954 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:40.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Freizeit, Hobby & Nachbarschaft"/"com.ebay.kleinanzeigen:id/listHeader"/[400,142]>
2015-12-02 16:21:43.485 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:43.485 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:43.515 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-02 16:21:43.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:43.576 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:43.650 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:43.650 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 24}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:43.651 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:TextView/"Refine"/"com.ebay.kleinanzeigen:id/menu_refine"/[757,70]>
2015-12-02 16:21:43.652 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:43.652 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:43.715 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:43.731 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:43.731 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Refine"/"com.ebay.kleinanzeigen:id/menu_refine"/[757,70]>
2015-12-02 16:21:46.078 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:46.078 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:46.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:21:46.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:46.246 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:46.319 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:46.319 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 67}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:46.321 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.kleinanzeigen:id/location_field"/[400,284]>
2015-12-02 16:21:46.321 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:46.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:46.403 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:46.418 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:46.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.kleinanzeigen:id/location_field"/[400,284]>
2015-12-02 16:21:49.567 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:49.567 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:49.604 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:21:49.604 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:49.690 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:49.766 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:49.767 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 45}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:49.768 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:TextView/"Dresden"/""/[400,478]>
2015-12-02 16:21:49.768 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:49.768 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:49.856 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:49.870 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:49.871 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Dresden"/""/[400,478]>
2015-12-02 16:21:51.928 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:51.928 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:51.949 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:51.949 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:52.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:52.079 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:52.079 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:52.080 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:EditText/"Dresden"/"com.ebay.kleinanzeigen:id/search_src_text"/[367,146]>
2015-12-02 16:21:52.080 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:52.080 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:52.148 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:52.160 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:52.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Dresden"/"com.ebay.kleinanzeigen:id/search_src_text"/[367,146]>
2015-12-02 16:21:54.098 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:54.098 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:54.121 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:21:54.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:54.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:54.714 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:54.714 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 32}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:54.716 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:View/""/""/[400,733]>
2015-12-02 16:21:54.716 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:54.716 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:21:54.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:54.810 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:54.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[400,733]>
2015-12-02 16:21:56.155 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:21:56.155 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:56.177 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:56.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:21:56.266 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:21:56.336 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:21:56.336 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.kleinanzeigen. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:21:56.337 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:21:56.338 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:21:56.338 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device)
2015-12-02 16:21:56.338 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:21:56.408 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:56.423 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:21:56.423 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:21:56.423 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.ebay.kleinanzeigen}
2015-12-02 16:21:57.530 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:21:57.605 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:21:57.608 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:21:57.608 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:21:57.648 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:21:57.722 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.ebay.kleinanzeigen_v5.0.3-inlined.apk, device) - DONE
2015-12-02 16:22:19.628 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:19.628 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-02 16:22:24.903 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:24.906 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:22:24.977 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:22:41.092 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:22:41.125 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:22:41.125 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:22:43.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:22:43.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:22:43.159 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:22:26.946
2015-12-02 16:22:43.159 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:22:43.228 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:22:43.228 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:43.276 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 18
2015-12-02 16:22:43.276 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:22:43.450 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:43.451 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 48}, DeviceLogs{apiLogs#=18, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:43.452 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-02 16:22:43.452 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:43.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:43.512 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:43.524 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:43.524 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.ebay.mobile:id/menu_symban"/[587,70]>
2015-12-02 16:22:46.164 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:46.165 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:46.212 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 11
2015-12-02 16:22:46.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:46.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:46.339 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:46.340 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=11, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:46.340 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-02 16:22:46.341 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:46.341 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:46.416 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:46.426 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:46.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Forgot password?"/"com.ebay.mobile:id/sign_in_forgot"/[690,388]>
2015-12-02 16:22:49.101 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:49.101 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:49.132 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:22:49.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:49.177 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:49.248 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:49.249 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 16}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:49.249 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-02 16:22:49.250 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:49.250 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:49.329 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:49.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:49.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[71,70]>
2015-12-02 16:22:51.520 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:51.520 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:51.541 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:22:51.541 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:51.599 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:51.672 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:51.672 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:51.674 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-02 16:22:51.674 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:51.674 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:51.758 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:51.770 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:51.770 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[200,138]>
2015-12-02 16:22:53.103 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:53.103 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:53.120 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:53.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:53.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:53.259 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:53.259 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:53.260 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-02 16:22:53.260 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:53.260 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:53.337 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:53.350 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:53.351 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.ebay.mobile:id/sign_in_password_entry"/[400,307]>
2015-12-02 16:22:55.514 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:55.514 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:55.532 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:55.532 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:55.593 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:55.664 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:55.664 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:55.665 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-02 16:22:55.665 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:55.666 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:55.738 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:55.754 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:55.754 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[54,70]>
2015-12-02 16:22:58.442 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:22:58.442 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:58.473 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:22:58.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:22:58.559 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:22:58.711 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:22:58.712 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 54}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:22:58.713 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:22:58.713 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:22:58.713 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:22:59.032 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:22:59.048 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:22:59.048 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:23:01.059 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:01.059 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:01.075 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:01.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:01.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:01.179 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:01.179 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:01.180 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-02 16:23:01.180 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:01.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:01.243 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:01.253 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:01.253 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-02 16:23:03.669 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:03.669 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:03.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:23:03.701 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:03.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:03.939 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:03.939 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 49}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:03.941 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-02 16:23:03.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:03.941 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:04.005 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:04.018 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:04.018 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,157]>
2015-12-02 16:23:06.752 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:06.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:06.795 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:23:06.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:07.240 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:07.309 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:07.309 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:07.311 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-02 16:23:07.311 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:07.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:07.394 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:07.406 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:07.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.ebay.mobile:id/sign_in_main_layout"/[400,359]>
2015-12-02 16:23:09.232 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:09.232 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:09.245 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:09.245 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:09.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:09.366 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:09.366 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:09.368 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-02 16:23:09.368 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:09.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:09.443 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:09.465 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:09.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email or username"/"com.ebay.mobile:id/sign_in_username_entry"/[400,227]>
2015-12-02 16:23:11.329 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:11.329 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:11.348 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:11.348 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:11.407 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:11.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:11.474 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 29}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:11.475 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-02 16:23:11.475 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:11.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:11.549 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:11.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:11.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[600,138]>
2015-12-02 16:23:13.799 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:13.799 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:13.812 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:13.812 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:13.876 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:13.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:13.941 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 27}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:13.942 INFO  o.d.e.strategy.ExplorationStrategy         0m 30s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-02 16:23:13.942 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:13.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:14.012 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:14.024 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:14.025 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Get started"/"com.ebay.mobile:id/register_button"/[400,375]>
2015-12-02 16:23:16.334 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:16.334 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:16.353 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:23:16.353 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:16.391 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:16.452 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:16.452 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 17}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:16.454 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[62,70]>
2015-12-02 16:23:16.454 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:16.454 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:16.527 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:16.539 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:16.539 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[62,70]>
2015-12-02 16:23:18.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:18.468 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:18.492 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:23:18.492 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:18.543 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:18.614 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device) - DONE
2015-12-02 16:23:18.614 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.ebay.mobile. Widgets# 27}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:18.614 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:23:18.615 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:23:18.615 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ebay.mobile_v2.8.2.1-inlined.apk, device)
2015-12-02 16:23:18.615 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ebay.mobile
2015-12-02 16:23:24.846 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-02 16:23:33.391 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:23:33.391 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-02 16:23:38.674 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:38.677 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:23:38.742 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:23:50.458 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:23:50.524 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:23:50.524 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:23:52.580 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:23:52.580 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:23:52.580 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:23:40.706
2015-12-02 16:23:52.580 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:23:52.685 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:23:52.685 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:52.785 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 50
2015-12-02 16:23:52.785 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:23:52.906 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:23:52.906 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=50, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:52.907 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-02 16:23:52.907 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:23:52.907 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:52.991 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:53.001 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:53.002 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-02 16:23:54.856 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:54.856 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:54.869 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:54.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:54.917 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:54.995 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:23:54.995 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:54.996 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-02 16:23:54.996 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:23:54.996 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:23:55.055 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:55.065 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:23:55.065 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/gplus"/[157,1084]>
2015-12-02 16:23:58.256 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:23:58.256 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:23:58.277 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:23:58.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:23:58.332 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:23:58.401 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:23:58.401 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.plus. Widgets# 10}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:23:58.402 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct Reset app>
2015-12-02 16:23:58.402 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:23:58.402 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-02 16:24:08.614 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:08.617 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:24:08.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:24:22.344 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:24:22.393 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:24:22.393 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:24:24.450 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:24:24.450 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:24:24.450 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:24:11.986
2015-12-02 16:24:24.450 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:24:24.523 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:24:24.523 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:24.611 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 43
2015-12-02 16:24:24.611 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:24:25.418 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:25.419 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 24}, DeviceLogs{apiLogs#=43, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:25.420 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:CheckBox/"Hide other countries' maps to streamline the map menu"/"com.frogsparks.mytrails:id/hide_other_countries"/[400,981]>
2015-12-02 16:24:25.420 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:25.420 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:25.508 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:25.719 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:24:25.720 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Hide other countries' maps to streamline the map menu"/"com.frogsparks.mytrails:id/hide_other_countries"/[400,981]>
2015-12-02 16:24:28.186 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:28.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:28.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:28.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:28.236 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:28.305 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:28.305 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:28.306 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-02 16:24:28.306 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:28.306 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:28.369 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:28.379 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:28.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"OK"/"android:id/button1"/[400,706]>
2015-12-02 16:24:30.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:30.218 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:30.231 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:30.231 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:30.298 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:30.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:30.355 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:30.356 INFO  o.d.e.strategy.ExplorationStrategy         0m 37s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:View/""/""/[450,663]>
2015-12-02 16:24:30.356 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:30.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:30.415 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:30.425 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:30.425 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[450,663]>
2015-12-02 16:24:32.339 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:32.339 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:32.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:32.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:32.432 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:32.501 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:32.501 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:32.502 INFO  o.d.e.strategy.ExplorationStrategy         0m 39s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:View/""/""/[450,950]>
2015-12-02 16:24:32.502 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:32.502 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:32.577 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:32.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:32.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[450,950]>
2015-12-02 16:24:34.459 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:34.459 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:34.475 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:34.475 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:34.546 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:34.607 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:34.608 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:34.609 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:CheckBox/"Hide other countries' maps to streamline the map menu"/"com.frogsparks.mytrails:id/hide_other_countries"/[400,981]>
2015-12-02 16:24:34.609 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:34.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:34.685 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:34.698 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:34.698 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/"Hide other countries' maps to streamline the map menu"/"com.frogsparks.mytrails:id/hide_other_countries"/[400,981]>
2015-12-02 16:24:36.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:36.545 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:36.561 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:36.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:36.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:36.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:36.706 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 52}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:36.707 INFO  o.d.e.strategy.ExplorationStrategy         0m 43s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/facebook"/[642,1084]>
2015-12-02 16:24:36.707 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:36.707 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:24:36.779 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:36.792 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:24:36.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/"com.frogsparks.mytrails:id/facebook"/[642,1084]>
2015-12-02 16:24:41.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:24:41.416 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:41.438 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:24:41.438 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:24:41.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:24:41.655 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:24:41.655 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:24:41.656 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   1m  0s i:   11 <ExplAct Reset app>
2015-12-02 16:24:41.656 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:24:41.656 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.frogsparks.mytrails
2015-12-02 16:24:51.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:24:51.658 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:24:51.732 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:25:03.972 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:25:04.015 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:25:04.015 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:25:06.058 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:25:06.058 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:25:06.059 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:24:54.426
2015-12-02 16:25:06.059 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:25:06.136 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:25:06.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:06.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 47
2015-12-02 16:25:06.199 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:25:06.348 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:25:06.348 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.frogsparks.mytrails. Widgets# 15}, DeviceLogs{apiLogs#=47, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:06.349 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:25:06.349 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:25:06.349 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device)
2015-12-02 16:25:06.349 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:25:06.410 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:06.421 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:06.421 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:25:06.421 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.frogsparks.mytrails}
2015-12-02 16:25:07.356 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:25:07.429 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:07.433 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:25:07.433 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:25:07.505 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:25:07.573 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.frogsparks.mytrails_v1.4.5-inlined.apk, device) - DONE
2015-12-02 16:25:21.705 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:21.705 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-02 16:25:27.336 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:27.339 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:25:27.415 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:25:38.790 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:25:38.842 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:25:38.842 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:25:40.904 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:25:40.904 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:25:40.904 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:25:29.386
2015-12-02 16:25:40.904 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:25:40.997 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:25:40.997 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:41.037 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-02 16:25:41.037 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:25:41.204 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:41.205 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:41.205 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-02 16:25:41.206 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:41.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:41.280 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:41.302 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:41.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/"android:id/list"/[400,619]>
2015-12-02 16:25:43.581 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:43.581 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:43.597 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:25:43.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:43.660 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:43.727 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:43.728 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:43.729 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-02 16:25:43.729 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:43.729 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:43.803 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:43.813 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:43.813 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Go to Translate"/"android:id/button1"/[199,1173]>
2015-12-02 16:25:45.827 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:45.827 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:45.854 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:25:45.854 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:45.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:45.980 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:45.980 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:45.981 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-02 16:25:45.981 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:45.981 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:46.060 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:46.074 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:46.075 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_camera"/[222,338]>
2015-12-02 16:25:47.411 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:47.411 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:47.429 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:47.429 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:47.486 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:47.550 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:47.550 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:47.551 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-02 16:25:47.551 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:47.552 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:47.638 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:47.655 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:47.655 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"com.google.android.apps.translate:id/lyt_home"/[400,207]>
2015-12-02 16:25:50.226 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:50.226 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:50.244 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:50.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:50.295 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:50.360 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:50.360 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:50.361 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-02 16:25:50.361 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:50.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:50.432 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:50.442 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:50.443 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"English"/"com.google.android.apps.translate:id/edit_input"/[381,84]>
2015-12-02 16:25:51.779 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:51.779 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:51.793 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:51.793 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:51.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:51.908 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:51.909 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 13}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:51.910 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-02 16:25:51.910 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:51.910 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:51.992 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:52.003 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:52.004 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-02 16:25:54.402 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:54.402 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:54.416 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:54.416 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:54.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:54.543 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:54.543 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:54.545 INFO  o.d.e.strategy.ExplorationStrategy         0m 13s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-02 16:25:54.545 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:54.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:54.618 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:54.633 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:54.633 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_handwriting"/[578,338]>
2015-12-02 16:25:57.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:57.364 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:57.379 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:57.379 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:25:57.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:25:57.508 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:25:57.508 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 23}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:25:57.509 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-02 16:25:57.509 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:25:57.509 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:25:57.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:57.592 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:57.592 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"android:id/text1"/[400,185]>
2015-12-02 16:25:59.962 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:25:59.962 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:25:59.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:25:59.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:00.044 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:00.113 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:00.114 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:00.115 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-02 16:26:00.115 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:00.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:00.192 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:00.206 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:00.206 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/btn_swap"/[360,70]>
2015-12-02 16:26:02.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:02.382 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:02.396 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:02.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:02.460 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:02.521 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:02.521 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:02.523 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-02 16:26:02.523 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:02.523 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:02.595 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:02.610 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:02.610 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,535]>
2015-12-02 16:26:03.956 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:03.956 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:03.976 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:03.976 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:04.042 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:04.107 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:04.107 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:04.108 INFO  o.d.e.strategy.ExplorationStrategy         0m 22s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-02 16:26:04.108 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:04.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:04.186 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:04.200 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:04.200 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/"com.google.android.apps.translate:id/tour_button"/[400,633]>
2015-12-02 16:26:06.406 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:06.406 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:06.420 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:26:06.421 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:06.474 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:06.546 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:06.546 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:06.547 INFO  o.d.e.strategy.ExplorationStrategy         0m 25s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-02 16:26:06.547 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:06.548 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:06.615 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:06.627 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:06.628 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[498,1085]>
2015-12-02 16:26:08.738 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:08.738 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:08.753 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:08.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:08.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:08.874 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:08.874 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:08.875 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-02 16:26:08.875 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:08.875 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:08.945 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:08.957 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:08.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[21,1085]>
2015-12-02 16:26:10.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:10.802 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:10.819 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:10.819 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:10.852 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:10.920 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:10.920 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 18}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:10.921 INFO  o.d.e.strategy.ExplorationStrategy         0m 29s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-02 16:26:10.921 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:10.921 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:11.015 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:11.034 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:11.035 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/""/[696,1085]>
2015-12-02 16:26:13.136 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:13.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:13.156 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:13.156 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:13.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:13.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:13.272 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:13.273 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:26:13.273 INFO  o.d.e.strategy.ExplorationStrategy         0m 32s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:26:13.273 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:13.273 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.android.apps.translate
2015-12-02 16:26:19.136 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:19.139 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:26:19.216 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:26:30.782 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:26:30.827 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:26:30.827 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:26:32.877 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:26:32.877 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:26:32.878 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:26:21.456
2015-12-02 16:26:32.878 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:26:32.961 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:26:32.961 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:33.001 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 9
2015-12-02 16:26:33.001 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:26:33.144 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:33.144 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=9, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:33.145 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   1m  0s i:   17 <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-02 16:26:33.145 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:33.145 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:33.223 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:33.243 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:33.243 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Spanish"/"com.google.android.apps.translate:id/spinner2"/[561,70]>
2015-12-02 16:26:35.696 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:35.696 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:35.711 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:35.712 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:35.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:35.886 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:35.886 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:35.888 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   1m  0s i:   18 <ExplAct LC? 0 Wdgt:ListView/""/""/[567,644]>
2015-12-02 16:26:35.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:35.888 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:35.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:35.974 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:35.974 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[567,644]>
2015-12-02 16:26:37.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:37.893 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:37.912 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:37.912 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:38.011 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:38.070 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:38.070 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 33}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:38.072 INFO  o.d.e.strategy.ExplorationStrategy         0m 56s /   1m  0s i:   19 <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-02 16:26:38.072 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:38.072 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:38.146 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:38.160 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:38.161 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"English"/"com.google.android.apps.translate:id/spinner1"/[160,70]>
2015-12-02 16:26:40.426 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:40.426 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:40.444 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:40.444 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:40.545 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:40.617 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:40.617 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 46}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:40.619 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:   20 <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-02 16:26:40.619 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:40.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:26:40.698 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:40.710 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:40.710 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.google.android.apps.translate:id/img_pin_offline_package"/[283,924]>
2015-12-02 16:26:42.904 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:26:42.904 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:42.924 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:42.924 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:26:42.972 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:26:43.049 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:26:43.050 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.apps.translate. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:26:43.050 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:26:43.051 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:26:43.051 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device)
2015-12-02 16:26:43.051 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:26:43.127 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:43.146 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:26:43.146 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:26:43.146 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.google.android.apps.translate}
2015-12-02 16:26:44.270 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:26:44.340 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:26:44.344 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:26:44.344 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:26:44.403 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:26:44.503 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.google.android.apps.translate_v3.0.10-inlined.apk, device) - DONE
2015-12-02 16:27:01.064 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.google.earth_v7.1.3.1255-inlined.apk, device)
2015-12-02 16:27:01.064 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.google.earth
2015-12-02 16:27:06.836 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:27:06.839 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:27:06.913 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:27:14.576 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:27:14.618 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:27:14.618 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:27:37.116 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-02 16:28:38.564 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-02 16:28:38.564 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.infraware.office.link
2015-12-02 16:28:43.977 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:28:43.979 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:28:44.059 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:29:00.160 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:29:00.273 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:29:00.273 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:29:02.405 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:29:02.405 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:29:02.405 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:28:46.026
2015-12-02 16:29:02.405 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:29:02.704 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:29:02.705 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:29:02.716 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:29:02.716 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:29:13.885 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device) - DONE
2015-12-02 16:29:13.886 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{home screen}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:29:13.887 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't belong to the app. The GUI state: <GUI state: home screen>
2015-12-02 16:29:13.887 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:29:13.888 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.infraware.office.link_v6.0.9-inlined.apk, device)
2015-12-02 16:29:13.888 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:29:13.966 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:29:13.970 DEBUG o.d.exploration.device.DeviceLogsHandler ! Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Rethrowing.
2015-12-02 16:29:13.970 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught TcpServerUnreachableException while performing device actions of RunnableTerminateExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-02 16:29:22.110 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.ng.dailynews_v1.13-inlined.apk, device)
2015-12-02 16:29:22.110 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.ng.dailynews
2015-12-02 16:29:27.945 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:29:27.948 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:29:28.025 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:31:28.052 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught AdbWrapperException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-02 16:32:26.023 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-02 16:32:26.023 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.outfit7.talkingangelafree
2015-12-02 16:32:51.544 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:32:51.547 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:32:51.617 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:33:07.699 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:33:07.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:33:07.733 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:33:09.769 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:33:09.769 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:33:09.769 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:32:53.676
2015-12-02 16:33:09.769 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:33:09.843 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:33:09.843 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:33:09.886 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 20
2015-12-02 16:33:09.886 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:33:13.241 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-02 16:33:13.241 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.outfit7.talkingangelafree. Widgets# 22}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:33:13.242 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Initial GUI state doesn't contain actionable widgets. The GUI state: GuiState <pkg=com.outfit7.talkingangelafree Widgets count = 22>
2015-12-02 16:33:13.242 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:33:13.242 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device)
2015-12-02 16:33:13.242 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:33:13.330 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:33:13.398 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 32
2015-12-02 16:33:13.398 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:33:13.398 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.outfit7.talkingangelafree}
2015-12-02 16:33:20.015 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:33:20.336 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:33:20.339 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:33:20.339 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:33:20.388 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:33:20.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.outfit7.talkingangelafree_v2.2-inlined.apk, device) - DONE
2015-12-02 16:33:46.974 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:33:46.974 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-02 16:34:12.506 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:12.508 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:34:12.580 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:34:28.696 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:34:28.746 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:34:28.746 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:34:30.802 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:34:30.802 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:34:30.803 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:34:15.206
2015-12-02 16:34:30.803 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:34:30.894 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:34:30.894 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:30.972 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 41
2015-12-02 16:34:30.972 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:34:31.081 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:31.082 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 11}, DeviceLogs{apiLogs#=41, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:31.082 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-02 16:34:31.083 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:31.083 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:31.163 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:31.175 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:31.176 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Agree"/"android:id/button1"/[573,656]>
2015-12-02 16:34:33.108 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:33.108 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:33.128 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:33.129 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:33.212 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:33.271 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:33.271 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 22}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:33.272 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-02 16:34:33.272 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:33.273 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:33.345 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:33.363 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:33.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign Up"/"com.paypal.android.p2pmobile:id/sign_up_button"/[213,1160]>
2015-12-02 16:34:36.270 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:36.270 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:36.301 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:34:36.302 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:36.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:36.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:36.462 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:36.463 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-02 16:34:36.463 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:36.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:36.527 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:36.542 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:36.542 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/confirm_password_field"/[400,436]>
2015-12-02 16:34:39.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:39.030 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:39.046 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:39.046 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:39.121 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:39.185 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:39.185 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:39.186 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-02 16:34:39.187 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:39.187 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:39.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:39.272 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:39.272 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.paypal.android.p2pmobile:id/email_field"/[400,274]>
2015-12-02 16:34:41.465 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:41.465 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:41.480 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:41.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:41.554 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:41.620 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:41.620 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:41.621 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-02 16:34:41.622 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:41.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:41.692 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:41.701 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:41.702 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.paypal.android.p2pmobile:id/password_field"/[400,355]>
2015-12-02 16:34:43.840 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:43.840 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:43.857 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:43.857 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:43.935 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:44.001 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:44.001 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 32}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:44.002 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-02 16:34:44.002 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:44.002 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:44.087 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:44.104 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:44.104 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[30,70]>
2015-12-02 16:34:46.497 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:46.497 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:46.515 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:46.515 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:46.714 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:46.789 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:46.789 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 63}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:46.791 INFO  o.d.e.strategy.ExplorationStrategy         0m 15s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-02 16:34:46.791 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:46.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:46.905 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:46.920 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:46.920 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Activity"/"com.paypal.android.p2pmobile:id/button_activity"/[365,325]>
2015-12-02 16:34:48.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:48.767 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:48.814 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 20
2015-12-02 16:34:48.815 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:49.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:49.425 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:49.426 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 30}, DeviceLogs{apiLogs#=20, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:49.434 INFO  o.d.e.strategy.ExplorationStrategy         0m 18s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:TextView/""/"com.paypal.android.p2pmobile:id/menu_history_refresh"/[757,70]>
2015-12-02 16:34:49.434 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:49.434 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:49.502 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:49.529 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:34:49.530 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.paypal.android.p2pmobile:id/menu_history_refresh"/[757,70]>
2015-12-02 16:34:51.596 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:51.596 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:51.616 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:51.617 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:51.721 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:51.789 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:51.790 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 37}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:51.791 INFO  o.d.e.strategy.ExplorationStrategy         0m 20s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.paypal.android.p2pmobile:id/row"/[426,353]>
2015-12-02 16:34:51.791 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:51.791 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:34:51.865 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:51.879 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:34:51.879 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"com.paypal.android.p2pmobile:id/row"/[426,353]>
2015-12-02 16:34:58.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:34:58.611 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:34:58.654 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 13
2015-12-02 16:34:58.654 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:34:58.719 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:34:58.783 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:34:58.783 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 47}, DeviceLogs{apiLogs#=13, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:34:58.784 INFO  o.d.e.strategy.ExplorationStrategy         0m 27s /   1m  0s i:   11 <ExplAct Reset app>
2015-12-02 16:34:58.784 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:34:58.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.paypal.android.p2pmobile
2015-12-02 16:35:26.976 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:35:26.979 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:35:27.051 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:35:43.240 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:35:43.290 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:35:43.290 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:35:45.349 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:35:45.349 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:35:45.349 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:35:29.646
2015-12-02 16:35:45.349 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:35:45.434 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:35:45.434 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:35:45.530 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 41
2015-12-02 16:35:45.530 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:35:45.643 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:35:45.643 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.paypal.android.p2pmobile. Widgets# 11}, DeviceLogs{apiLogs#=41, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:35:45.643 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:35:45.644 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:35:45.644 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device)
2015-12-02 16:35:45.644 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:35:45.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:35:45.765 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:35:45.765 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:35:45.765 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.paypal.android.p2pmobile}
2015-12-02 16:35:46.653 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:35:46.748 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:35:46.751 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:35:46.751 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:35:46.817 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:35:46.884 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.paypal.android.p2pmobile_v5.11.3-inlined.apk, device) - DONE
2015-12-02 16:36:20.020 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:36:20.020 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-02 16:36:45.534 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:36:45.537 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:36:45.630 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:37:01.749 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:37:01.784 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:37:01.785 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:37:03.822 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:37:03.822 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:37:03.822 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:36:47.526
2015-12-02 16:37:03.822 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:37:03.896 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:37:03.896 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:03.994 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 71
2015-12-02 16:37:03.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:37:04.315 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:04.317 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 46}, DeviceLogs{apiLogs#=71, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:04.317 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,70]>
2015-12-02 16:37:04.318 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:04.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:04.379 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:04.390 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:04.390 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[79,70]>
2015-12-02 16:37:06.732 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:06.732 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:06.744 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:06.744 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:06.866 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:06.925 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:06.925 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:06.926 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:TextView/"What's New"/"com.picsart.studio:id/si_ui_more_whatsnew_layout_id"/[206,744]>
2015-12-02 16:37:06.926 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:06.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:06.987 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:06.998 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:06.998 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"What's New"/"com.picsart.studio:id/si_ui_more_whatsnew_layout_id"/[206,744]>
2015-12-02 16:37:11.578 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:11.578 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:11.695 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 85
2015-12-02 16:37:11.695 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:11.736 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:11.804 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:11.804 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 14}, DeviceLogs{apiLogs#=85, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:11.805 INFO  o.d.e.strategy.ExplorationStrategy         0m  7s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:WebView/""/"com.picsart.studio:id/whats_new_textView"/[399,842]>
2015-12-02 16:37:11.806 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:11.806 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:11.886 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:11.904 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:11.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:WebView/""/"com.picsart.studio:id/whats_new_textView"/[399,842]>
2015-12-02 16:37:13.846 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:13.846 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:13.864 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:13.864 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:13.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:13.976 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:13.976 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:13.977 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Close"/"com.picsart.studio:id/whats_new_closeButton"/[399,1008]>
2015-12-02 16:37:13.977 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:13.977 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:14.051 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:14.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:14.061 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Close"/"com.picsart.studio:id/whats_new_closeButton"/[399,1008]>
2015-12-02 16:37:15.409 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:15.409 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:15.435 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:37:15.435 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:15.537 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:15.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:15.598 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:15.599 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:TextView/"Share PicsArt"/"com.picsart.studio:id/si_ui_more_share_layout_id"/[206,634]>
2015-12-02 16:37:15.599 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:15.599 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:15.670 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:15.686 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:15.687 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/"Share PicsArt"/"com.picsart.studio:id/si_ui_more_share_layout_id"/[206,634]>
2015-12-02 16:37:17.016 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:17.016 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:17.030 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:37:17.030 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:17.132 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:17.195 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:17.195 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 45}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:17.196 INFO  o.d.e.strategy.ExplorationStrategy         0m 12s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_more_fb"/[114,558]>
2015-12-02 16:37:17.196 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:17.196 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:37:17.271 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:17.282 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:37:17.283 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageView/""/"com.picsart.studio:id/si_ui_more_fb"/[114,558]>
2015-12-02 16:37:21.282 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:37:21.282 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:21.304 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:37:21.304 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:37:21.361 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:37:21.442 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:37:21.443 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:37:21.444 INFO  o.d.e.strategy.ExplorationStrategy         0m 17s /   1m  0s i:    8 <ExplAct Reset app>
2015-12-02 16:37:21.444 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:37:21.444 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.picsart.studio
2015-12-02 16:37:50.360 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:37:50.362 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:37:50.431 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:38:06.521 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:38:06.556 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:38:06.556 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:38:08.594 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:38:08.594 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:38:08.594 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:37:52.616
2015-12-02 16:38:08.594 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:38:08.667 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:38:08.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:38:08.742 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 47
2015-12-02 16:38:08.742 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:38:08.852 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:38:08.852 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.picsart.studio. Widgets# 17}, DeviceLogs{apiLogs#=47, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:38:08.853 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:38:08.853 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:38:08.853 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device)
2015-12-02 16:38:08.853 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:38:08.916 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:38:08.926 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:38:08.926 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:38:08.927 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.picsart.studio}
2015-12-02 16:38:11.282 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:38:11.360 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:38:11.363 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:38:11.363 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:38:11.428 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:38:11.501 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.picsart.studio_v4.6.12-inlined.apk, device) - DONE
2015-12-02 16:38:36.641 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.spotify.music_v1.4.0.631-inlined.apk, device)
2015-12-02 16:38:36.641 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.spotify.music
2015-12-02 16:39:02.135 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:39:02.138 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:39:02.203 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:39:17.375 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:39:17.432 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:39:17.432 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:39:19.493 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:39:19.494 DEBUG o.d.e.actions.RunnableExplorationAction  ! Caught DeviceException while performing device actions of RunnableResetAppExplorationAction. Returning failed ExplorationActionRunResult with the exception assigned to a field.
2015-12-02 16:39:39.188 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:39:39.188 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.wetter.androidclient
2015-12-02 16:40:04.695 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:04.698 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:40:04.771 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:40:19.612 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:40:19.662 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:40:19.662 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:40:21.715 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:40:21.715 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:40:21.715 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:40:06.536
2015-12-02 16:40:21.715 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:40:21.797 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:40:21.797 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:21.846 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-02 16:40:21.846 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:40:21.984 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:21.984 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 26}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:21.985 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[37,75]>
2015-12-02 16:40:21.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:21.985 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:40:22.062 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:22.085 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:22.086 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[37,75]>
2015-12-02 16:40:24.452 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:40:24.452 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:24.468 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:24.468 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:40:24.877 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:40:24.945 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:24.945 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 115}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:24.946 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[190,937]>
2015-12-02 16:40:24.946 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:24.946 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:40:25.023 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:25.032 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:25.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:FrameLayout/""/""/[190,937]>
2015-12-02 16:40:28.085 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:40:28.085 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:28.115 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:40:28.115 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:40:28.158 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:40:28.228 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:28.228 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 25}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:28.229 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:View/""/""/[399,331]>
2015-12-02 16:40:28.229 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:28.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:40:28.306 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:28.319 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:28.319 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[399,331]>
2015-12-02 16:40:30.175 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:40:30.175 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:30.194 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:40:30.194 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:40:30.242 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:40:30.316 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:30.316 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 25}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:30.317 INFO  o.d.e.strategy.ExplorationStrategy         0m  8s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:View/""/""/[306,393]>
2015-12-02 16:40:30.317 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:30.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:40:30.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:30.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:30.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[306,393]>
2015-12-02 16:40:32.337 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:40:32.337 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:32.355 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:32.355 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:40:32.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:40:32.471 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:32.471 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 25}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:32.473 INFO  o.d.e.strategy.ExplorationStrategy         0m 10s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:View/""/""/[113,419]>
2015-12-02 16:40:32.473 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:32.473 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:40:32.546 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:32.561 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:40:32.561 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:View/""/""/[113,419]>
2015-12-02 16:40:36.313 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:40:36.313 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:40:36.336 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 3
2015-12-02 16:40:36.336 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:40:36.396 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:40:36.459 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:40:36.460 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.google.android.gm. Widgets# 19}, DeviceLogs{apiLogs#=3, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:40:36.461 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   1m  0s i:    7 <ExplAct Reset app>
2015-12-02 16:40:36.461 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:40:36.461 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.wetter.androidclient
2015-12-02 16:41:02.625 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:02.628 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:41:02.692 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:41:18.861 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:41:18.899 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:41:18.899 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:41:20.952 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:41:20.952 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:41:20.952 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:41:05.286
2015-12-02 16:41:20.952 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:41:21.040 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:41:21.040 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:21.086 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 15
2015-12-02 16:41:21.086 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:41:21.217 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:41:21.217 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 26}, DeviceLogs{apiLogs#=15, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:41:21.218 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:TextView/""/"com.wetter.androidclient:id/action_search"/[703,75]>
2015-12-02 16:41:21.218 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:41:21.218 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:41:21.294 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:21.315 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:41:21.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:TextView/""/"com.wetter.androidclient:id/action_search"/[703,75]>
2015-12-02 16:41:23.771 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:41:23.771 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:23.795 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:41:23.795 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:41:24.033 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:41:24.098 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:41:24.099 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.wetter.androidclient. Widgets# 31}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:41:24.099 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:41:24.099 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:41:24.100 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device)
2015-12-02 16:41:24.100 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:41:24.175 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:24.192 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:41:24.192 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:41:24.192 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.wetter.androidclient}
2015-12-02 16:41:25.189 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:41:25.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:41:25.263 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:41:25.263 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:41:25.332 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:41:25.397 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.wetter.androidclient_v2.3.1-inlined.apk, device) - DONE
2015-12-02 16:41:40.249 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:41:40.249 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.zattoo.player
2015-12-02 16:42:05.793 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:05.796 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:42:05.879 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:42:17.944 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:42:17.994 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:42:17.994 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:42:20.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:42:20.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:42:20.053 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:42:07.916
2015-12-02 16:42:20.053 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:42:20.128 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:42:20.128 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:20.191 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-02 16:42:20.191 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:42:20.310 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:42:20.310 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 16}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:42:20.311 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.zattoo.player:id/txt_username"/[400,203]>
2015-12-02 16:42:20.311 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:42:20.311 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:42:20.384 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:20.402 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:42:20.403 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.zattoo.player:id/txt_username"/[400,203]>
2015-12-02 16:42:22.476 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:42:22.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:22.493 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:42:22.493 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:42:22.529 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:42:22.596 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:42:22.596 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:42:22.597 INFO  o.d.e.strategy.ExplorationStrategy         0m  2s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:Button/"Log in with Facebook"/"com.zattoo.player:id/authButton"/[400,440]>
2015-12-02 16:42:22.597 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:42:22.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:42:22.667 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:22.679 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:42:22.680 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Log in with Facebook"/"com.zattoo.player:id/authButton"/[400,440]>
2015-12-02 16:42:25.316 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:42:25.317 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:25.357 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 7
2015-12-02 16:42:25.357 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:42:25.387 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:42:25.455 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:42:25.456 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 10}, DeviceLogs{apiLogs#=7, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:42:25.456 INFO  o.d.e.strategy.ExplorationStrategy         0m  5s /   1m  0s i:    4 <ExplAct Reset app>
2015-12-02 16:42:25.456 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:42:25.456 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package com.zattoo.player
2015-12-02 16:42:51.558 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:42:51.560 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:42:51.626 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:43:04.530 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:43:04.576 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:43:04.576 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:43:06.630 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:43:06.630 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:43:06.630 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:42:53.776
2015-12-02 16:43:06.630 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:43:06.726 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:43:06.726 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:06.768 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 10
2015-12-02 16:43:06.768 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:43:06.870 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:06.871 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 16}, DeviceLogs{apiLogs#=10, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:06.871 INFO  o.d.e.strategy.ExplorationStrategy         0m 46s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:EditText/""/"com.zattoo.player:id/txt_password"/[400,267]>
2015-12-02 16:43:06.872 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:06.872 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:06.949 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:06.966 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:06.966 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.zattoo.player:id/txt_password"/[400,267]>
2015-12-02 16:43:09.073 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:09.073 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:09.099 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:09.099 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:09.140 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:09.205 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:09.206 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 16}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:09.206 INFO  o.d.e.strategy.ExplorationStrategy         0m 48s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Sign up Free"/"com.zattoo.player:id/signup_button"/[399,645]>
2015-12-02 16:43:09.206 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:09.207 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:09.277 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:09.292 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:09.293 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Sign up Free"/"com.zattoo.player:id/signup_button"/[399,645]>
2015-12-02 16:43:11.441 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:11.441 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:11.456 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:11.456 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:11.553 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:11.621 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:11.621 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:11.622 INFO  o.d.e.strategy.ExplorationStrategy         0m 51s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.zattoo.player:id/txt_username"/[400,228]>
2015-12-02 16:43:11.622 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:11.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:11.687 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:11.703 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:11.703 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/"Email Address"/"com.zattoo.player:id/txt_username"/[400,228]>
2015-12-02 16:43:13.547 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:13.547 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:13.563 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:13.563 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:13.619 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:13.687 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:13.687 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:13.688 INFO  o.d.e.strategy.ExplorationStrategy         0m 53s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:Spinner/""/"com.zattoo.player:id/gender"/[400,383]>
2015-12-02 16:43:13.688 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:13.688 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:13.763 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:13.776 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:13.776 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Spinner/""/"com.zattoo.player:id/gender"/[400,383]>
2015-12-02 16:43:15.783 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:15.783 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:15.802 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:15.802 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:15.833 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:15.897 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:15.897 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 4}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:15.898 INFO  o.d.e.strategy.ExplorationStrategy         0m 55s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:CheckedTextView/"male"/"android:id/text1"/[392,516]>
2015-12-02 16:43:15.898 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:15.898 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:15.964 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:15.980 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:15.980 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckedTextView/"male"/"android:id/text1"/[392,516]>
2015-12-02 16:43:18.053 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:18.053 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:18.070 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:18.070 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:18.117 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:18.181 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:18.182 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:18.182 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:EditText/""/"com.zattoo.player:id/txt_password"/[400,294]>
2015-12-02 16:43:18.183 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:18.183 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:18.260 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:18.274 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:18.274 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:EditText/""/"com.zattoo.player:id/txt_password"/[400,294]>
2015-12-02 16:43:20.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:20.163 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:20.180 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:20.180 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:20.229 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:20.288 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:20.288 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 20}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:20.289 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:Button/"Register"/"com.zattoo.player:id/register_button"/[400,677]>
2015-12-02 16:43:20.289 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:20.289 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:43:20.366 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:20.382 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:20.382 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Register"/"com.zattoo.player:id/register_button"/[400,677]>
2015-12-02 16:43:22.810 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:43:22.810 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:22.831 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:43:22.832 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:43:22.869 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:43:22.940 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:22.940 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.zattoo.player. Widgets# 11}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:43:22.940 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:43:22.941 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:43:22.941 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device)
2015-12-02 16:43:22.941 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:43:23.016 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:23.031 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:43:23.031 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:43:23.031 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package com.zattoo.player}
2015-12-02 16:43:23.893 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:43:23.970 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:43:23.973 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:43:23.973 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:43:24.041 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:43:24.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=com.zattoo.player_v1.4.3-inlined.apk, device) - DONE
2015-12-02 16:43:39.876 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:43:39.876 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package de.hafas.android.db
2015-12-02 16:44:05.310 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:05.313 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:44:05.383 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:44:18.355 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:44:18.401 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:44:18.401 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:44:20.452 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:44:20.452 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:44:20.453 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:44:07.126
2015-12-02 16:44:20.453 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:44:20.525 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:44:20.525 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:20.564 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:44:20.564 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:44:20.680 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:20.680 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 15}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:20.681 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[582,706]>
2015-12-02 16:44:20.681 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:20.681 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:20.750 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:20.761 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:20.762 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Yes"/"android:id/button1"/[582,706]>
2015-12-02 16:44:22.597 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:22.597 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:22.632 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:44:22.632 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:25.020 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:25.088 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:25.088 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 129}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:25.089 INFO  o.d.e.strategy.ExplorationStrategy         0m  4s /   1m  0s i:    3 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[198,466]>
2015-12-02 16:44:25.089 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:25.089 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:25.157 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:25.171 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:25.171 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[198,466]>
2015-12-02 16:44:27.146 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:27.146 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:27.163 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:27.163 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:27.369 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:27.450 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:27.450 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 127}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:27.451 INFO  o.d.e.strategy.ExplorationStrategy         0m  6s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Now"/""/[69,339]>
2015-12-02 16:44:27.451 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:27.451 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:27.530 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:27.544 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:27.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Now"/""/[69,339]>
2015-12-02 16:44:29.538 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:29.538 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:29.555 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:29.555 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:29.763 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:29.833 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:29.833 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 127}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:29.834 INFO  o.d.e.strategy.ExplorationStrategy         0m  9s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:Button/"Search"/""/[198,659]>
2015-12-02 16:44:29.835 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:29.835 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:29.909 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:29.929 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:29.930 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Search"/""/[198,659]>
2015-12-02 16:44:32.203 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:32.203 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:32.222 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:44:32.222 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:32.318 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:32.383 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:32.383 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 15}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:32.384 INFO  o.d.e.strategy.ExplorationStrategy         0m 11s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:Button/"Back"/"android:id/button2"/[400,706]>
2015-12-02 16:44:32.384 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:32.384 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:32.454 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:32.470 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:32.470 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Back"/"android:id/button2"/[400,706]>
2015-12-02 16:44:34.609 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:34.609 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:34.622 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:34.622 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:34.826 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:34.883 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:34.883 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 127}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:34.884 INFO  o.d.e.strategy.ExplorationStrategy         0m 14s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[198,567]>
2015-12-02 16:44:34.885 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:34.885 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:34.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:34.954 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:34.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[198,567]>
2015-12-02 16:44:37.116 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:37.116 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:37.138 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:37.138 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:37.611 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:37.669 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:37.669 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 130}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:37.670 INFO  o.d.e.strategy.ExplorationStrategy         0m 16s /   1m  0s i:    8 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"de.hafas.android.db:id/tb_btn_ticket_search"/[720,1173]>
2015-12-02 16:44:37.670 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:37.670 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:37.740 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:37.753 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:37.753 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"de.hafas.android.db:id/tb_btn_ticket_search"/[720,1173]>
2015-12-02 16:44:41.922 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:41.922 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:41.942 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 4
2015-12-02 16:44:41.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:42.303 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:42.371 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:42.371 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 121}, DeviceLogs{apiLogs#=4, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:42.373 INFO  o.d.e.strategy.ExplorationStrategy         0m 21s /   1m  0s i:    9 <ExplAct LC? 0 Wdgt:Button/"Search"/""/[198,538]>
2015-12-02 16:44:42.373 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:42.373 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:42.447 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:42.463 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:42.463 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Search"/""/[198,538]>
2015-12-02 16:44:44.544 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:44.544 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:44.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:44:44.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:44.605 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:44.673 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:44.673 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 17}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:44.675 INFO  o.d.e.strategy.ExplorationStrategy         0m 23s /   1m  0s i:   10 <ExplAct LC? 0 Wdgt:Button/"Back"/"android:id/button2"/[400,706]>
2015-12-02 16:44:44.675 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:44.675 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:44.752 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:44.765 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:44.765 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Back"/"android:id/button2"/[400,706]>
2015-12-02 16:44:46.926 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:46.926 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:46.942 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:46.942 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:47.123 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:47.182 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:47.182 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 121}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:47.184 INFO  o.d.e.strategy.ExplorationStrategy         0m 26s /   1m  0s i:   11 <ExplAct LC? 0 Wdgt:LinearLayout/""/"de.hafas.android.db:id/home_root"/[400,656]>
2015-12-02 16:44:47.184 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:47.184 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:47.261 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:47.276 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:47.277 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/"de.hafas.android.db:id/home_root"/[400,656]>
2015-12-02 16:44:48.612 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:48.612 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:48.627 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:48.627 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:48.745 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:48.805 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:48.805 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 121}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:48.807 INFO  o.d.e.strategy.ExplorationStrategy         0m 28s /   1m  0s i:   12 <ExplAct LC? 0 Wdgt:RelativeLayout/""/"de.hafas.android.db:id/tb_btn_ticket_search"/[240,1173]>
2015-12-02 16:44:48.807 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:48.807 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:48.881 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:48.893 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:48.893 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/"de.hafas.android.db:id/tb_btn_ticket_search"/[240,1173]>
2015-12-02 16:44:50.943 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:50.943 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:50.958 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 2
2015-12-02 16:44:50.958 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:53.767 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:53.823 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:53.823 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 127}, DeviceLogs{apiLogs#=2, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:53.825 INFO  o.d.e.strategy.ExplorationStrategy         0m 33s /   1m  0s i:   13 <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:44:53.825 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:53.825 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:53.894 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:53.905 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:53.905 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ImageButton/""/""/[757,70]>
2015-12-02 16:44:55.920 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:55.920 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:55.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:55.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:55.964 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:56.030 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:56.030 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 5}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:56.031 INFO  o.d.e.strategy.ExplorationStrategy         0m 35s /   1m  0s i:   14 <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-02 16:44:56.031 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:56.031 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:56.102 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:56.112 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:56.112 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:ListView/""/""/[658,140]>
2015-12-02 16:44:59.321 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:44:59.321 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:59.343 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:44:59.343 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:44:59.418 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:44:59.478 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:44:59.478 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 21}, DeviceLogs{apiLogs#=1, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:44:59.480 INFO  o.d.e.strategy.ExplorationStrategy         0m 38s /   1m  0s i:   15 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,210]>
2015-12-02 16:44:59.480 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:44:59.480 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:44:59.548 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:44:59.562 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:44:59.562 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,210]>
2015-12-02 16:45:01.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:45:01.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:45:01.937 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 12
2015-12-02 16:45:01.937 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:45:01.971 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:45:02.040 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:45:02.040 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 15}, DeviceLogs{apiLogs#=12, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:45:02.041 INFO  o.d.e.strategy.ExplorationStrategy       Forward exploration reset.
2015-12-02 16:45:02.041 INFO  o.d.e.strategy.ExplorationStrategy         0m 41s /   1m  0s i:   16 <ExplAct Reset app>
2015-12-02 16:45:02.042 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:45:02.042 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package de.hafas.android.db
2015-12-02 16:45:27.921 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:45:27.924 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:45:27.991 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:45:42.208 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:45:42.256 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:45:42.256 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:45:44.304 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:45:44.304 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:45:44.304 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:45:29.826
2015-12-02 16:45:44.304 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:45:44.390 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:45:44.390 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:45:44.431 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 8
2015-12-02 16:45:44.431 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:45:44.536 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:45:44.536 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{de.hafas.android.db. Widgets# 15}, DeviceLogs{apiLogs#=8, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:45:44.537 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:45:44.538 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:45:44.538 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device)
2015-12-02 16:45:44.539 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:45:44.609 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:45:44.628 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:45:44.628 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:45:44.628 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package de.hafas.android.db}
2015-12-02 16:45:45.617 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:45:45.676 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:45:45.678 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:45:45.679 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:45:45.733 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:45:45.799 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=de.hafas.android.db_v15.04.p06.00-inlined.apk, device) - DONE
2015-12-02 16:45:59.451 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:45:59.451 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package net.zedge.android
2015-12-02 16:46:25.091 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:46:25.094 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:46:25.162 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:46:40.624 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:46:40.658 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:46:40.658 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:46:42.704 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:46:42.704 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:46:42.704 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:46:26.986
2015-12-02 16:46:42.704 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:46:42.779 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:46:42.779 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:46:42.877 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 55
2015-12-02 16:46:42.877 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:46:42.985 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:46:42.985 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 14}, DeviceLogs{apiLogs#=55, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:46:42.986 INFO  o.d.e.strategy.ExplorationStrategy         0m  0s /   1m  0s i:    2 <ExplAct LC? 0 Wdgt:Button/"Terms of Service"/""/[400,631]>
2015-12-02 16:46:42.986 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:46:42.986 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:46:43.049 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:46:43.061 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 1
2015-12-02 16:46:43.062 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Terms of Service"/""/[400,631]>
2015-12-02 16:46:46.296 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:46:46.296 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:46:46.368 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 28
2015-12-02 16:46:46.368 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:46:46.440 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:46:46.504 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:46:46.505 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{com.android.chrome. Widgets# 26}, DeviceLogs{apiLogs#=29, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:46:46.505 INFO  o.d.e.strategy.ExplorationStrategy         0m  3s /   1m  0s i:    3 <ExplAct Reset app>
2015-12-02 16:46:46.505 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:46:46.505 DEBUG o.d.e.a.RunnableResetAppExplorationAction 1. Reset package net.zedge.android
2015-12-02 16:47:14.655 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:14.657 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:47:14.733 DEBUG o.d.e.a.RunnableResetAppExplorationAction 2. Launch main activity
2015-12-02 16:47:30.849 DEBUG o.d.e.a.RunnableResetAppExplorationAction 3. Log uia-daemon logs from logcat
2015-12-02 16:47:30.884 DEBUG o.d.e.a.RunnableResetAppExplorationAction 4. Read monitor init logs and clear logcat
2015-12-02 16:47:30.884 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(deviceTimeDiff)
2015-12-02 16:47:32.935 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): obtained messages
2015-12-02 16:47:32.935 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): syncing time
2015-12-02 16:47:32.935 DEBUG o.d.exploration.device.InitMsgsReader    readMonitorMessages(): returning monitorInitTime: 2015-12-02T16:47:17.176
2015-12-02 16:47:32.935 DEBUG o.d.exploration.device.InitMsgsReader    readInstrumentationMessages(deviceTimeDiff)
2015-12-02 16:47:33.035 DEBUG o.d.e.a.RunnableResetAppExplorationAction 5. Read and clear api logs, then seal reading
2015-12-02 16:47:33.035 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:33.149 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 54
2015-12-02 16:47:33.149 DEBUG o.d.e.a.RunnableResetAppExplorationAction 6. Get GUI snapshot, then log uia-daemon logs, then clear logcat
2015-12-02 16:47:33.277 TRACE o.d.e.actions.RunnableExplorationAction  RunnableResetAppExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:47:33.277 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 14}, DeviceLogs{apiLogs#=54, containsMonitorInitMsgs=true}, exception=N/A (lack of DeviceException)})
2015-12-02 16:47:33.278 INFO  o.d.e.strategy.ExplorationStrategy         0m 50s /   1m  0s i:    4 <ExplAct LC? 0 Wdgt:Button/"Continue"/""/[400,775]>
2015-12-02 16:47:33.278 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:47:33.279 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:47:33.343 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:33.364 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:47:33.364 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:Button/"Continue"/""/[400,775]>
2015-12-02 16:47:36.901 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:47:36.901 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:36.954 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 24
2015-12-02 16:47:36.954 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:47:37.278 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:47:37.354 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:47:37.354 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 104}, DeviceLogs{apiLogs#=29, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:47:37.355 INFO  o.d.e.strategy.ExplorationStrategy         0m 54s /   1m  0s i:    5 <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[173,782]>
2015-12-02 16:47:37.356 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:47:37.356 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:47:37.431 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:37.446 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:37.447 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:RelativeLayout/""/""/[173,782]>
2015-12-02 16:47:39.865 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:47:39.865 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:39.895 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 5
2015-12-02 16:47:39.895 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:47:40.036 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:47:40.108 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:47:40.108 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 47}, DeviceLogs{apiLogs#=5, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:47:40.109 INFO  o.d.e.strategy.ExplorationStrategy         0m 57s /   1m  0s i:    6 <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,286]>
2015-12-02 16:47:40.109 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:47:40.109 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:47:40.183 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:40.199 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:40.199 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:CheckBox/""/"android:id/checkbox"/[706,286]>
2015-12-02 16:47:42.227 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:47:42.227 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:42.244 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:42.244 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:47:42.324 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:47:42.396 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:47:42.396 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 47}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:47:42.397 INFO  o.d.e.strategy.ExplorationStrategy         0m 59s /   1m  0s i:    7 <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,379]>
2015-12-02 16:47:42.397 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:47:42.397 DEBUG o.d.e.a.RunnableWidgetExplorationAction  1. Do asserts and throws using logs handler.
2015-12-02 16:47:42.476 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:42.490 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:42.490 DEBUG o.d.e.a.RunnableWidgetExplorationAction  2. Perform widget click: <ExplAct LC? 0 Wdgt:LinearLayout/""/""/[400,379]>
2015-12-02 16:47:44.575 DEBUG o.d.e.a.RunnableWidgetExplorationAction  3. Read and clear API logs if any, then seal logs reading
2015-12-02 16:47:44.575 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:44.591 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:44.591 DEBUG o.d.e.a.RunnableWidgetExplorationAction  4. Get GUI snapshot
2015-12-02 16:47:44.634 DEBUG o.d.e.a.RunnableWidgetExplorationAction  5. Log uia-daemon logs and clear logcat
2015-12-02 16:47:44.701 TRACE o.d.e.actions.RunnableExplorationAction  RunnableWidgetExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
2015-12-02 16:47:44.702 DEBUG o.d.e.strategy.ExplorationStrategy       decide(ExplorationActionRunResult{successful=true, snapshot=UiautomatorWindowDump{net.zedge.android. Widgets# 15}, DeviceLogs{apiLogs#=0, containsMonitorInitMsgs=false}, exception=N/A (lack of DeviceException)})
2015-12-02 16:47:44.702 INFO  o.d.e.strategy.ExplorationStrategy       Terminating exploration: Allocated exploration time exhausted.
2015-12-02 16:47:44.702 INFO  o.d.e.strategy.ExplorationStrategy       <ExplAct Terminate exploration>
2015-12-02 16:47:44.703 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device)
2015-12-02 16:47:44.703 DEBUG o.d.e.a.RunnableTerminateExplorationAction 1. Do asserts and throws using logs handler.
2015-12-02 16:47:44.778 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:44.792 DEBUG o.d.exploration.device.ApiLogsReader     apiLogs# 0
2015-12-02 16:47:44.792 DEBUG o.d.e.a.RunnableTerminateExplorationAction 2. Seal logs reading.
2015-12-02 16:47:44.792 DEBUG o.d.e.a.RunnableTerminateExplorationAction 3. Reset package net.zedge.android}
2015-12-02 16:47:45.958 DEBUG o.d.e.a.RunnableTerminateExplorationAction 4. Do asserts and throws using logs handler.
2015-12-02 16:47:46.022 DEBUG o.d.exploration.device.ApiLogsReader     getAndClearCurrentApiLogsFromMonitorTcpServer(deviceTimeDiff)
2015-12-02 16:47:46.025 DEBUG o.d.exploration.device.DeviceLogsHandler Caught TcpServerUnreachableException from messagesReader.getAndClearCurrentApiLogsFromMonitorTcpServer(). Because app is allowed to be unreachable: 1. ignoring the exception instead of rethrowing, 2. returning null api logs.
2015-12-02 16:47:46.025 DEBUG o.d.e.a.RunnableTerminateExplorationAction 5. Get GUI snapshot, ensuring home screen is displayed.
2015-12-02 16:47:46.089 DEBUG o.d.e.a.RunnableTerminateExplorationAction 6. Log uia-daemon logs and clear logcat
2015-12-02 16:47:46.164 TRACE o.d.e.actions.RunnableExplorationAction  RunnableTerminateExplorationAction.performDeviceActions(app=net.zedge.android_v4.10.2-inlined.apk, device) - DONE
